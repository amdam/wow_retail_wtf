
HekiliDB = {
["namespaces"] = {
["LibDualSpec-1.0"] = {
},
},
["profileKeys"] = {
["Abel - Turalyon"] = "Default",
["Adamancy - Turalyon"] = "Adamancy - Turalyon",
["Furrys - Turalyon"] = "Default",
["Kayne - Turalyon"] = "Default",
["Adrid - Turalyon"] = "Default",
["Adaam - Turalyon"] = "Default",
["Badam - Turalyon"] = "Default",
["Amdam - Turalyon"] = "Amdam - Turalyon",
["Kaydan - Turalyon"] = "Default",
["Adamn - Turalyon"] = "Default",
["Dreg - Turalyon"] = "Default",
["Adamian - Turalyon"] = "Default",
["Shado - Turalyon"] = "Default",
},
["profiles"] = {
["Adamancy - Turalyon"] = {
["runOnce"] = {
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceReloadClassDefaultOptions_20220306_63"] = true,
["updateMaxRefreshToNewSpecOptions_20220222"] = true,
["reviseDisplayModes_20180709"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["forceReloadClassDefaultOptions_20220306_64"] = true,
["forceReloadClassDefaultOptions_20220306_62"] = true,
["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["enableAllOfTheThings_20180820"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
},
["specs"] = {
[64] = {
["debuffPadding"] = 0,
["settings"] = {
["prevent_hardcasts"] = false,
["manual_water_jet"] = false,
["limit_ice_lance"] = false,
["check_explosion_range"] = true,
},
["potionsReset"] = 20180919.1,
["maxRefresh"] = 10,
["potion"] = "potion_of_rising_death",
["buffPadding"] = 0.25,
},
[63] = {
["debuffPadding"] = 0,
["settings"] = {
["prevent_hardcasts"] = false,
["check_explosion_range"] = true,
["pyroblast_pull"] = false,
},
["potionsReset"] = 20180919.1,
["maxRefresh"] = 10,
["potion"] = "battle_potion_of_intellect",
["buffPadding"] = 0.25,
},
[62] = {
["debuffPadding"] = 0,
["settings"] = {
["check_explosion_range"] = true,
},
["potionsReset"] = 20180919.1,
["maxRefresh"] = 10,
["potion"] = "battle_potion_of_intellect",
["buffPadding"] = 0.25,
},
},
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
["x"] = -55.00000381469727,
},
["Cooldowns"] = {
["rel"] = "CENTER",
["y"] = -280.0000305175781,
},
["Primary"] = {
["rel"] = "CENTER",
["x"] = 196.7407531738281,
["y"] = -197.1480712890625,
},
["AOE"] = {
["rel"] = "CENTER",
["x"] = 196.1483459472656,
["y"] = -142.7406005859375,
},
["Defensives"] = {
["rel"] = "CENTER",
["x"] = -110.0000076293945,
},
},
["packs"] = {
["Frost Mage"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-12: Minor sim update.\n\n2024-01-05: Tweak Shifting Power.\n\n2023-12-10: Fix Time Warp/Sated aura.\n\n2023-12-01: Sim update.\n\n2023-11-13: Sim update.\n\n2023-11-10:  Incremental SimC update.\n\n2023-11-07:  Patch 10.2 update.\n\n2023-08-07:  Align Time Warp with Icy Veins.\n\n2023-07-22:  SimC update for new 'freezable' expression; tweak Shifting Power in AOE.\n\n2023-07-14:  Don't Shifting Power in ST if nothing is really on CD.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-02:  Use debuff.sated.up for Temporal Warp.\n\n2023-05-12:  Update Spoils trinket.\n\n2023-05-08:  Updates from SimC; limited_ice_lance now factors in Slick Ice as well.\n\n2023-05-02:  Update for 10.1.\n\n2023-03-28:  Add experimental option for the \"less Ice Lance\" build.",
["lists"] = {
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled || active_enemies >= 3",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2",
["action"] = "frostbolt",
},
},
["default"] = {
{
["action"] = "counterspell",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 7 & ! set_bonus.tier30_2pc || active_enemies >= 3 & talent.ice_caller.enabled",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "active_enemies = 2",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "st",
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.flurry || prev_gcd.1.cone_of_cold",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & ( ( prev_gcd.1.frostbolt & buff.icicles.react >= 3 ) || prev_gcd.1.glacial_spike || ( buff.icicles.react >= 3 & buff.icicles.react < 5 & charges_fractional = 2 ) )",
["action"] = "flurry",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.glacial_spike.enabled & debuff.winters_chill.down & buff.icicles.react = 4 & buff.fingers_of_frost.react",
["action"] = "ice_lance",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "remaining_winters_chill = 1",
["action"] = "ray_of_frost",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5 & ( action.flurry.cooldown_react || remaining_winters_chill )",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react < 2 & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains )",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & cooldown.comet_storm.remains > 10 & cooldown.frozen_orb.remains > 10 & remaining_winters_chill = 0 & active_enemies >= 3",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled & talent.freezing_rain.enabled & ( ! talent.splintering_cold.enabled & ! talent.ray_of_frost.enabled || buff.freezing_rain.up || active_enemies >= 3 )",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "cooldown.frozen_orb.true_remains > 10 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.true_remains > 10 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.true_remains > 10 ) || cooldown.frozen_orb.true_remains > 0 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.true_remains > 0 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.true_remains > 0 ) & cooldown.icy_veins.remains < 20",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react & ! prev_gcd.1.glacial_spike || remaining_winters_chill",
["action"] = "ice_lance",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4",
["action"] = "ice_nova",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & ( prev_gcd.1.comet_storm || prev_gcd.1.frozen_orb & ! talent.comet_storm.enabled )",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike || ! freezable",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike || ! freezable",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike & ( ! talent.coldest_snap.enabled || cooldown.cone_of_cold.ready & cooldown.frozen_orb.remains > 25 || cooldown.cone_of_cold.remains > 20 )",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "freezable & debuff.frozen.down & ( ! talent.glacial_spike.enabled & ! talent.snowstorm.enabled || prev_gcd.1.glacial_spike || cooldown.cone_of_cold.ready & buff.snowstorm.stack = buff.snowstorm.max_stack )",
["action"] = "freeze",
},
{
["enabled"] = true,
["criteria"] = "freezable & ! prev_off_gcd.freeze & ( prev_gcd.1.glacial_spike || cooldown.cone_of_cold.ready & buff.snowstorm.stack = buff.snowstorm.max_stack & gcd.max < 1 )",
["action"] = "ice_nova",
},
{
["enabled"] = true,
["criteria"] = "freezable & ! prev_off_gcd.freeze & ( prev_gcd.1.glacial_spike & ! remaining_winters_chill || cooldown.cone_of_cold.ready & buff.snowstorm.stack = buff.snowstorm.max_stack & gcd.max < 1 )",
["action"] = "frost_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.snowstorm.stack = buff.snowstorm.max_stack",
["action"] = "cone_of_cold",
},
{
["action"] = "shifting_power",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5 & cooldown.blizzard.remains > gcd.max",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "! freezable & cooldown_react & ! debuff.winters_chill.remains & ( prev_gcd.1.glacial_spike || charges_fractional > 1.8 )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & ! debuff.winters_chill.remains & ( buff.brain_freeze.react || ! buff.fingers_of_frost.react )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react || debuff.frozen.remains > travel_time || remaining_winters_chill",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4 & ( ! talent.snowstorm.enabled & ! talent.glacial_spike.enabled || ! freezable )",
["action"] = "ice_nova",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 7",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 30 & active_enemies >= 7",
["action"] = "arcane_explosion",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "talent.temporal_warp.enabled & debuff.sated.up & buff.bloodlust.down & ( prev_off_gcd.icy_veins || ( buff.icy_veins.up & fight_remains <= 110 || buff.icy_veins.up & fight_remains >= 280 ) || boss & fight_remains < 40 )",
["action"] = "time_warp",
},
{
["enabled"] = true,
["criteria"] = "buff.spoils_of_neltharus_mastery.up || buff.spoils_of_neltharus_haste.up & buff.bloodlust.down & buff.temporal_warp.down & time > 0 || buff.spoils_of_neltharus_vers.up & ( buff.bloodlust.up || buff.temporal_warp.up )",
["name"] = "spoils_of_neltharus",
["action"] = "spoils_of_neltharus",
},
{
["enabled"] = true,
["criteria"] = "prev_off_gcd.icy_veins || boss & fight_remains < 60",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( equipped.nymues_unraveling_spindle & prev_gcd.1.nymues_unraveling_spindle ) || fight_remains > 2",
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["criteria"] = "time > 5 & ! prev_gcd.1.flurry",
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.ray_of_frost.enabled & active_enemies <= 2 & buff.icy_veins.up & prev_gcd.1.glacial_spike || remaining_winters_chill = 1 & cooldown.ray_of_frost.up & time > 1 & active_enemies <= 2 || cooldown.cone_of_cold.up & prev_gcd.1.comet_storm & active_enemies >= 3 ) || boss & fight_remains < 20",
["name"] = "balefire_branch",
["action"] = "balefire_branch",
},
{
["enabled"] = true,
["criteria"] = "time = 0 & active_enemies <= 2",
["action"] = "flurry",
},
{
["action"] = "icy_veins",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! equipped.balefire_branch || time > 5",
["action"] = "use_items",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.flurry || prev_gcd.1.cone_of_cold",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & remaining_winters_chill = 0 & debuff.winters_chill.down & ( ( prev_gcd.1.frostbolt & buff.icicles.react >= 3 || prev_gcd.1.frostbolt & buff.brain_freeze.react ) || prev_gcd.1.glacial_spike || talent.glacial_spike.enabled & buff.icicles.react = 4 & ! buff.fingers_of_frost.react )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "talent.glacial_spike.enabled & debuff.winters_chill.down & buff.icicles.react = 4 & buff.fingers_of_frost.react",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "remaining_winters_chill = 1",
["action"] = "ray_of_frost",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5 & ( action.flurry.cooldown_react || remaining_winters_chill )",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react < 2 & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains )",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & cooldown.comet_storm.remains > 10 & cooldown.frozen_orb.remains > 10 & remaining_winters_chill = 0 & active_enemies >= 3",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled & talent.freezing_rain.enabled & ( ! talent.splintering_cold.enabled & ! talent.ray_of_frost.enabled || buff.freezing_rain.up || active_enemies >= 3 )",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "cooldown.frozen_orb.true_remains > 10 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.true_remains > 10 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.true_remains > 10 ) || boss & fight_remains < 20",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react & ! prev_gcd.1.glacial_spike || remaining_winters_chill",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4",
["action"] = "ice_nova",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["movement"] = {
{
["enabled"] = true,
["criteria"] = "movement.distance > 10",
["action"] = "blink",
},
{
["enabled"] = true,
["criteria"] = "buff.ice_floes.down",
["action"] = "ice_floes",
},
{
["action"] = "ice_nova",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 30 & active_enemies >= 2",
["action"] = "arcane_explosion",
},
{
["action"] = "fire_blast",
["enabled"] = true,
},
{
["action"] = "ice_lance",
["enabled"] = true,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'default' required some automated changes.\nLine 3: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 1: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 4: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 5: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 5: Converted 'talent.snowstorm' to 'talent.snowstorm.enabled' (1x).\nLine 14: Converted 'talent.snowstorm' to 'talent.snowstorm.enabled' (1x).\nLine 14: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 3: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 7: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 8: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\nLine 8: Converted 'talent.freezing_rain' to 'talent.freezing_rain.enabled' (1x).\nLine 8: Converted 'talent.splintering_cold' to 'talent.splintering_cold.enabled' (1x).\nLine 8: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 9: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 9: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 3: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 7: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 8: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\nLine 8: Converted 'talent.freezing_rain' to 'talent.freezing_rain.enabled' (1x).\nLine 8: Converted 'talent.splintering_cold' to 'talent.splintering_cold.enabled' (1x).\nLine 8: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 9: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 9: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 9: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 9: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/arcane_intellect\nactions.precombat+=/blizzard,if=active_enemies>=2&talent.ice_caller||active_enemies>=3\nactions.precombat+=/frostbolt,if=active_enemies<=2\n\nactions=counterspell\nactions+=/call_action_list,name=cds\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=7&!set_bonus.tier30_2pc||active_enemies>=3&talent.ice_caller\nactions+=/run_action_list,name=cleave,if=active_enemies=2\nactions+=/run_action_list,name=st\n\nactions.aoe+=/cone_of_cold,if=talent.coldest_snap&(prev_gcd.1.comet_storm||prev_gcd.1.frozen_orb&!talent.comet_storm)\nactions.aoe+=/frozen_orb,if=!prev_gcd.1.glacial_spike||!freezable\nactions.aoe+=/blizzard,if=!prev_gcd.1.glacial_spike||!freezable\nactions.aoe+=/comet_storm,if=!prev_gcd.1.glacial_spike&(!talent.coldest_snap||cooldown.cone_of_cold.ready&cooldown.frozen_orb.remains>25||cooldown.cone_of_cold.remains>20)\nactions.aoe+=/freeze,if=freezable&debuff.frozen.down&(!talent.glacial_spike&!talent.snowstorm||prev_gcd.1.glacial_spike||cooldown.cone_of_cold.ready&buff.snowstorm.stack=buff.snowstorm.max_stack)\nactions.aoe+=/ice_nova,if=freezable&!prev_off_gcd.freeze&(prev_gcd.1.glacial_spike||cooldown.cone_of_cold.ready&buff.snowstorm.stack=buff.snowstorm.max_stack&gcd.max<1)\nactions.aoe+=/frost_nova,if=freezable&!prev_off_gcd.freeze&(prev_gcd.1.glacial_spike&!remaining_winters_chill||cooldown.cone_of_cold.ready&buff.snowstorm.stack=buff.snowstorm.max_stack&gcd.max<1)\nactions.aoe+=/cone_of_cold,if=buff.snowstorm.stack=buff.snowstorm.max_stack\nactions.aoe+=/shifting_power\nactions.aoe+=/glacial_spike,if=buff.icicles.react=5&cooldown.blizzard.remains>gcd.max\nactions.aoe+=/flurry,if=!freezable&cooldown_react&!debuff.winters_chill.remains&(prev_gcd.1.glacial_spike||charges_fractional>1.8)\nactions.aoe+=/flurry,if=cooldown_react&!debuff.winters_chill.remains&(buff.brain_freeze.react||!buff.fingers_of_frost.react)\nactions.aoe+=/ice_lance,if=buff.fingers_of_frost.react||debuff.frozen.remains>travel_time||remaining_winters_chill\nactions.aoe+=/ice_nova,if=active_enemies>=4&(!talent.snowstorm&!talent.glacial_spike||!freezable)\nactions.aoe+=/dragons_breath,if=active_enemies>=7\nactions.aoe+=/arcane_explosion,if=mana.pct>30&active_enemies>=7\nactions.aoe+=/frostbolt\nactions.aoe+=/call_action_list,name=movement\n\nactions.cds+=/time_warp,if=talent.temporal_warp&debuff.sated.up&buff.bloodlust.down&(prev_off_gcd.icy_veins||(buff.icy_veins.up&fight_remains<=110||buff.icy_veins.up&fight_remains>=280)||boss&fight_remains<40)\nactions.cds+=/use_item,name=spoils_of_neltharus,if=buff.spoils_of_neltharus_mastery.up||buff.spoils_of_neltharus_haste.up&buff.bloodlust.down&buff.temporal_warp.down&time>0||buff.spoils_of_neltharus_vers.up&(buff.bloodlust.up||buff.temporal_warp.up)\nactions.cds+=/potion,if=prev_off_gcd.icy_veins||boss&fight_remains<60\nactions.cds+=/use_item,name=dreambinder_loom_of_the_great_cycle,if=(equipped.nymues_unraveling_spindle&prev_gcd.1.nymues_unraveling_spindle)||fight_remains>2\nactions.cds+=/use_item,name=belorrelos_the_suncaller,if=time>5&!prev_gcd.1.flurry\nactions.cds+=/use_item,name=balefire_branch,if=(!talent.ray_of_frost&active_enemies<=2&buff.icy_veins.up&prev_gcd.1.glacial_spike||remaining_winters_chill=1&cooldown.ray_of_frost.up&time>1&active_enemies<=2||cooldown.cone_of_cold.up&prev_gcd.1.comet_storm&active_enemies>=3)||boss&fight_remains<20\nactions.cds+=/flurry,if=time=0&active_enemies<=2\nactions.cds+=/icy_veins\nactions.cds+=/use_items,if=!equipped.balefire_branch||time>5\n## External buffs are not invoked by the addon, as the player can't choose to trigger them personally.\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.power_infusion.down\n## actions.cds+=/invoke_external_buff,name=blessing_of_summer,if=buff.blessing_of_summer.down\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/lights_judgment\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n\nactions.cleave+=/comet_storm,if=prev_gcd.1.flurry||prev_gcd.1.cone_of_cold\nactions.cleave+=/flurry,cycle_targets=1,if=cooldown_react&((prev_gcd.1.frostbolt&buff.icicles.react>=3)||prev_gcd.1.glacial_spike||(buff.icicles.react>=3&buff.icicles.react<5&charges_fractional=2))\nactions.cleave+=/ice_lance,cycle_targets=1,if=talent.glacial_spike&debuff.winters_chill.down&buff.icicles.react=4&buff.fingers_of_frost.react\nactions.cleave+=/ray_of_frost,cycle_targets=1,if=remaining_winters_chill=1\nactions.cleave+=/glacial_spike,if=buff.icicles.react=5&(action.flurry.cooldown_react||remaining_winters_chill)\nactions.cleave+=/frozen_orb,if=buff.fingers_of_frost.react<2&(!talent.ray_of_frost||cooldown.ray_of_frost.remains)\nactions.cleave+=/cone_of_cold,if=talent.coldest_snap&cooldown.comet_storm.remains>10&cooldown.frozen_orb.remains>10&remaining_winters_chill=0&active_enemies>=3\nactions.cleave+=/blizzard,if=active_enemies>=2&talent.ice_caller&talent.freezing_rain&(!talent.splintering_cold&!talent.ray_of_frost||buff.freezing_rain.up||active_enemies>=3)\nactions.cleave+=/shifting_power,if=cooldown.frozen_orb.true_remains>10&(!talent.comet_storm||cooldown.comet_storm.true_remains>10)&(!talent.ray_of_frost||cooldown.ray_of_frost.true_remains>10)||cooldown.frozen_orb.true_remains>0&(!talent.comet_storm||cooldown.comet_storm.true_remains>0)&(!talent.ray_of_frost||cooldown.ray_of_frost.true_remains>0)&cooldown.icy_veins.remains<20\nactions.cleave+=/glacial_spike,if=buff.icicles.react=5\nactions.cleave+=/ice_lance,cycle_targets=1,if=buff.fingers_of_frost.react&!prev_gcd.1.glacial_spike||remaining_winters_chill\nactions.cleave+=/ice_nova,if=active_enemies>=4\nactions.cleave+=/frostbolt\nactions.cleave+=/call_action_list,name=movement\n\nactions.movement+=/any_blink,if=movement.distance>10\nactions.movement+=/ice_floes,if=buff.ice_floes.down\nactions.movement+=/ice_nova\nactions.movement+=/arcane_explosion,if=mana.pct>30&active_enemies>=2\nactions.movement+=/fire_blast\nactions.movement+=/ice_lance\n\nactions.st+=/comet_storm,if=prev_gcd.1.flurry||prev_gcd.1.cone_of_cold\nactions.st+=/flurry,if=cooldown_react&remaining_winters_chill=0&debuff.winters_chill.down&((prev_gcd.1.frostbolt&buff.icicles.react>=3||prev_gcd.1.frostbolt&buff.brain_freeze.react)||prev_gcd.1.glacial_spike||talent.glacial_spike&buff.icicles.react=4&!buff.fingers_of_frost.react)\nactions.st+=/ice_lance,if=talent.glacial_spike&debuff.winters_chill.down&buff.icicles.react=4&buff.fingers_of_frost.react\nactions.st+=/ray_of_frost,if=remaining_winters_chill=1\nactions.st+=/glacial_spike,if=buff.icicles.react=5&(action.flurry.cooldown_react||remaining_winters_chill)\nactions.st+=/frozen_orb,if=buff.fingers_of_frost.react<2&(!talent.ray_of_frost||cooldown.ray_of_frost.remains)\nactions.st+=/cone_of_cold,if=talent.coldest_snap&cooldown.comet_storm.remains>10&cooldown.frozen_orb.remains>10&remaining_winters_chill=0&active_enemies>=3\nactions.st+=/blizzard,if=active_enemies>=2&talent.ice_caller&talent.freezing_rain&(!talent.splintering_cold&!talent.ray_of_frost||buff.freezing_rain.up||active_enemies>=3)\nactions.st+=/shifting_power,if=cooldown.frozen_orb.true_remains>10&(!talent.comet_storm||cooldown.comet_storm.true_remains>10)&(!talent.ray_of_frost||cooldown.ray_of_frost.true_remains>10)||boss&fight_remains<20\nactions.st+=/glacial_spike,if=buff.icicles.react=5\nactions.st+=/ice_lance,if=buff.fingers_of_frost.react&!prev_gcd.1.glacial_spike||remaining_winters_chill\nactions.st+=/ice_nova,if=active_enemies>=4\nactions.st+=/frostbolt\nactions.st+=/call_action_list,name=movement",
["spec"] = 64,
},
["Fire"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-12: Minor sim update.\n\n2024-01-04:  Retire an old trinket.\n\n2023-11-11 & 26: Minor SimC update.\n\n2023-08-27:  Sync up to 10.1.5/7.\n\n2023-08-07:  Minor SimC updates again.\n\n2023-07-12:  Minor SimC update.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-02:  Use debuff.sated.up for Temporal Warp.\n\n2023-05-08:  Updates for 10.1, including many variables shifted from priority to internal code.\n\n2023-03-20:  Modify priority for \"Instant-Only When Moving\" setting.\n\n2023-03-27:  Remove Scorch > Pyroblast hardcast scenario.\n\n2023-04-02:  Revise Scorch > Pyroblast to check Hot Streak.",
["lists"] = {
["combustion_cooldowns"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.up",
["action"] = "berserking",
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.temporal_warp.enabled || runeforge.temporal_warp.enabled ) & debuff.sated.up",
["action"] = "time_warp",
},
{
["enabled"] = true,
["action"] = "gladiators_badge",
["effect_name"] = "gladiators_badge",
},
{
["enabled"] = true,
["name"] = "irideus_fragment",
["action"] = "irideus_fragment",
},
{
["enabled"] = true,
["name"] = "spoils_of_neltharus",
["action"] = "spoils_of_neltharus",
},
{
["enabled"] = true,
["name"] = "tome_of_unstable_power",
["action"] = "tome_of_unstable_power",
},
{
["enabled"] = true,
["name"] = "timebreaching_talon",
["action"] = "timebreaching_talon",
},
{
["enabled"] = true,
["name"] = "voidmenders_shadowgem",
["action"] = "voidmenders_shadowgem",
},
{
["enabled"] = true,
["name"] = "horn_of_valor",
["action"] = "horn_of_valor",
},
{
["enabled"] = true,
["name"] = "timethiefs_gambit",
["action"] = "timethiefs_gambit",
},
{
["enabled"] = true,
["name"] = "balefire_branch",
["action"] = "balefire_branch",
},
{
["enabled"] = true,
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "counterspell",
},
{
["enabled"] = true,
["description"] = "The second Time Warp is usually best used immediately on pull with Temporal Warp so that it comes off cooldown earlier, this can sometimes be slightly worse if doing so will not result in additional Time Warp(s) throughout the encounter. Additionally, it should always be used at the end of the fight regardless of Combustion being ready if it is available.",
["criteria"] = "debuff.sated.up & talent.temporal_warp.enabled & ( firestarter.active || interpolated_fight_remains < buff.bloodlust.duration )",
["action"] = "time_warp",
},
{
["enabled"] = true,
["criteria"] = "buff.potion.duration > variable.time_to_combustion + buff.combustion.duration",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion > action_cooldown - 5",
["action"] = "gladiators_badge",
["effect_name"] = "gladiators_badge",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= variable.empyreal_ordnance_delay & variable.time_to_combustion > variable.empyreal_ordnance_delay - 5",
["name"] = "empyreal_ordnance",
["action"] = "empyreal_ordnance",
},
{
["enabled"] = true,
["criteria"] = "( variable.time_to_combustion <= variable.combustion_precast_time + 2 || fight_remains < variable.time_to_combustion ) & buff.combustion.down & ( ! equipped.the_first_sigil || cooldown.the_first_sigil_367241.remains > 40 )",
["name"] = "shadowed_orb_of_torment",
["action"] = "shadowed_orb_of_torment",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 8 || fight_remains < variable.time_to_combustion",
["name"] = "grim_eclipse",
["action"] = "grim_eclipse",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "buff.combustion.up & buff.combustion.remains > 11",
["description"] = "New trinket and weapon lines  need special line for Nymue trinket which would delay combustion under certain conditions?",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.up",
["name"] = "timethiefs_gambit",
["action"] = "timethiefs_gambit",
},
{
["enabled"] = true,
["criteria"] = "( variable.time_to_combustion <= 3 & buff.fury_of_the_sun_king.up ) || ( buff.combustion.up & buff.combustion.remains > 11 )",
["name"] = "balefire_branch",
["action"] = "balefire_branch",
},
{
["enabled"] = true,
["criteria"] = "( variable.time_to_combustion <= 3 & buff.fury_of_the_sun_king.up ) || ( buff.combustion.up & buff.combustion.remains > 11 )",
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 9",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["name"] = "iridal_the_earths_master",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["description"] = "Iridal can and should be used while on the GCD",
["criteria"] = "gcd.remains >= 0.6 * gcd.max",
["action"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.steroid_trinket_equipped & buff.combustion.down ) || ( variable.steroid_trinket_equipped & trinket.t1.has_cooldown & trinket.t1.cooldown.remains > 20 & buff.combustion.down ) || ( variable.steroid_trinket_equipped & trinket.t2.has_cooldown & trinket.t2.cooldown.remains > 20 & buff.combustion.down )",
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "! variable.item_cutoff_active",
["name"] = "glyph_of_assimilation",
["action"] = "glyph_of_assimilation",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 5",
["name"] = "macabre_sheet_music",
["action"] = "macabre_sheet_music",
},
{
["enabled"] = true,
["name"] = "dreadfire_vessel",
["action"] = "dreadfire_vessel",
["criteria"] = "! variable.item_cutoff_active & ( buff.infernal_cascade.stack = buff.infernal_cascade.max_stack || ! conduit.infernal_cascade.enabled || variable.combustion_on_use & ! ( runeforge.sun_kings_blessing.enabled || talent.sun_kings_blessing.enabled ) || variable.time_to_combustion > interpolated_fight_remains %  ( action_cooldown + 10 ) )",
["description"] = "If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Feel the Burn is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown. Note that with Sun King's Blessing, it is possible to sync this with SKB Combustions regardless of on-use trinkets.",
},
{
["enabled"] = true,
["name"] = "inscrutable_quantum_device",
["action"] = "inscrutable_quantum_device",
["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
["description"] = "Items that do not benefit Combustion should just be used outside of Combustion at some point.",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "flame_of_battle",
["action"] = "flame_of_battle",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "wakeners_frond",
["action"] = "wakeners_frond",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "instructors_divine_bell",
["action"] = "instructors_divine_bell",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "sunblood_amethyst",
["action"] = "sunblood_amethyst",
},
{
["enabled"] = true,
["criteria"] = "buff.scars_of_fraternal_strife_4.down",
["name"] = "scars_of_fraternal_strife",
["action"] = "scars_of_fraternal_strife",
},
{
["enabled"] = true,
["criteria"] = "! variable.item_cutoff_active",
["action"] = "use_items",
},
{
["enabled"] = true,
["description"] = "Use Frost Nova to trigger Grisly Icicle.",
["criteria"] = "runeforge.grisly_icicle.enabled & buff.combustion.down & ( variable.time_to_combustion > action_cooldown || variable.time_to_combustion < variable.combustion_precast_time + execute_time )",
["action"] = "frost_nova",
},
{
["enabled"] = true,
["description"] = "Get the Disciplinary Command buff up, unless combustion is soon.",
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
["action"] = "counterspell",
},
{
["enabled"] = true,
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + execute_time + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 & ! talent.rune_of_power.enabled )",
["action"] = "arcane_explosion",
},
{
["enabled"] = true,
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.remains < cast_time & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
["action"] = "frostbolt",
},
{
["enabled"] = true,
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
["action"] = "frost_nova",
},
{
["enabled"] = true,
["op"] = "set",
["description"] = "Pool as many Fire Blasts as possible for Combustion.",
["use_while_casting"] = 1,
["value"] = "buff.combustion.down & action.fire_blast.charges_fractional + ( variable.time_to_combustion + action.shifting_power.full_reduction * variable.shifting_power_before_combustion ) / cooldown.fire_blast.duration - 1 < cooldown.fire_blast.max_charges + variable.overpool_fire_blasts / cooldown.fire_blast.duration - ( buff.combustion.duration / cooldown.fire_blast.duration )  % 1 & variable.time_to_combustion < fight_remains",
["var_name"] = "fire_blast_pooling",
["use_off_gcd"] = 1,
["action"] = "variable",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.up || variable.time_to_combustion < variable.combustion_precast_time & cooldown.combustion.remains < variable.combustion_precast_time",
["list_name"] = "combustion_phase",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["description"] = "Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.",
["op"] = "set",
["criteria"] = "! variable.fire_blast_pooling & talent.sun_kings_blessing.enabled",
["value"] = "searing_touch.active & action.fire_blast.full_recharge_time > 3 * gcd.max",
["var_name"] = "fire_blast_pooling",
["action"] = "variable",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & ( action.fire_blast.charges = 0 || variable.fire_blast_pooling ) & ( ! improved_scorch.active || debuff.improved_scorch.remains > cast_time + action.scorch.cast_time & ! buff.fury_of_the_sun_king.up ) & ! buff.hot_streak.react & variable.shifting_power_before_combustion",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! variable.fire_blast_pooling & variable.time_to_combustion > 0 & active_enemies >= variable.hard_cast_flamestrike & ! firestarter.active & ! buff.hot_streak.react & ( buff.heating_up.react & action.flamestrike.execute_remains < 0.5 || charges_fractional >= 2 )",
["use_off_gcd"] = 1,
["description"] = "When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Feel the Burn.",
["action"] = "fire_blast",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Feel the Burn, they should be spread out to maintain the Feel the Burn buff.",
["criteria"] = "buff.combustion.down & firestarter.active & variable.time_to_combustion > 0",
["list_name"] = "firestarter_fire_blasts",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "fire_blast",
["criteria"] = "action.shifting_power.executing & full_recharge_time < action.shifting_power.tick_reduction",
["description"] = "Avoid capping Fire Blast charges while channeling Shifting Power",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.time_to_combustion > 0 & buff.combustion.down",
["list_name"] = "standard_rotation",
},
{
["action"] = "scorch",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.gladiators_badge || equipped.irideus_fragment || equipped.erupting_spear_fragment || equipped.spoils_of_neltharus || equipped.timebreaching_talon || equipped.horn_of_valor || equipped.mirror_of_fractured_tomorrows || equipped.ashes_of_the_embersoul || equipped.balefire_branch || equipped.time_theifs_gambit || equipped.nymues_unraveling_spindle",
["var_name"] = "steroid_trinket_equipped",
["description"] = "defining a group of trinkets as Steroids",
},
{
["enabled"] = true,
["criteria"] = "! variable.combustion_on_use & ! equipped.dreadfire_vessel & ( ! talent.firestarter.enabled || variable.firestarter_combustion )",
["name"] = "soul_igniter",
["action"] = "soul_igniter",
},
{
["enabled"] = true,
["criteria"] = "! equipped.the_first_sigil",
["name"] = "shadowed_orb_of_torment",
["action"] = "shadowed_orb_of_torment",
},
{
["action"] = "mirror_image",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.hot_streak_flamestrike",
["action"] = "flamestrike",
},
{
["action"] = "pyroblast",
["enabled"] = true,
},
},
["firestarter_fire_blasts"] = {
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "fire_blast",
["criteria"] = "! variable.fire_blast_pooling & ! buff.hot_streak.react & ( action.fireball.execute_remains > gcd.remains || action.pyroblast.executing ) & buff.heating_up.react + hot_streak_spells_in_flight = 1 & ( cooldown.shifting_power.ready || charges > 1 || buff.feel_the_burn.remains < 2 * gcd.max )",
["description"] = "While casting Fireball or Pyroblast, convert Heating Up to a Hot Streak!",
},
{
["enabled"] = true,
["criteria"] = "! variable.fire_blast_pooling & buff.heating_up.react + hot_streak_spells_in_flight = 1 & ( talent.feel_the_burn.enabled & buff.feel_the_burn.remains < gcd.remains || cooldown.shifting_power.ready & ( ! set_bonus.tier30_2pc || debuff.charring_embers.remains > 2 * gcd.max ) )",
["use_off_gcd"] = 1,
["description"] = "If not casting anything, use Fire Blast to trigger Hot Streak! only if Feel the Burn is talented and would expire before the GCD ends or if Shifting Power is available.",
["action"] = "fire_blast",
},
},
["active_talents"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & buff.combustion.down & ( variable.time_to_combustion > cooldown.living_bomb.duration || variable.time_to_combustion <= 0 )",
["action"] = "living_bomb",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.remains > travel_time || ! talent.sun_kings_blessing.enabled & ( cooldown.meteor.duration < variable.time_to_combustion || fight_remains < variable.time_to_combustion )",
["action"] = "meteor",
},
{
["enabled"] = true,
["description"] = "With Alexstrasza's Fury when Combustion is not active, Dragon's Breath should be used to convert Heating Up to a Hot Streak.",
["criteria"] = "talent.alexstraszas_fury.enabled & ( buff.combustion.down & ! buff.hot_streak.react ) & ( buff.feel_the_burn.up || time > 15 ) & ( ! improved_scorch.active ) & ! firestarter.remains & ! talent.tempered_flames.enabled",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "talent.alexstraszas_fury.enabled & ( buff.combustion.down & ! buff.hot_streak.react ) & ( buff.feel_the_burn.up || time > 15 ) & ( ! improved_scorch.active ) & talent.tempered_flames.enabled",
["action"] = "dragons_breath",
},
},
["standard_rotation"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.hot_streak_flamestrike & ( buff.hot_streak.react || ( buff.firestorm.react || buff.hyperthermia.react ) )",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "buff.hyperthermia.react",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & ( buff.hot_streak.remains < action.fireball.execute_time )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & ( hot_streak_spells_in_flight || firestarter.active || talent.alexstraszas_fury.enabled & action.phoenix_flames.charges )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & searing_touch.active",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.skb_flamestrike & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.remains < action.pyroblast.cast_time + 5 * gcd.max & buff.fury_of_the_sun_king.up & ! action.scorch.in_flight",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & searing_touch.active",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! firestarter.active & ! variable.fire_blast_pooling & buff.fury_of_the_sun_king.down & ( ( ( action.fireball.executing & ( action.fireball.execute_remains < 0.5 || ! talent.hyperthermia.enabled ) || action.pyroblast.executing & ( action.pyroblast.execute_remains < 0.5 || ! talent.hyperthermia.enabled ) ) & buff.heating_up.react ) || ( searing_touch.active & ( ! improved_scorch.active || debuff.improved_scorch.stack = debuff.improved_scorch.max_stack || full_recharge_time < 3 ) & ( buff.heating_up.react & ! action.scorch.executing || ! buff.hot_streak.react & ! buff.heating_up.react & action.scorch.executing & ! hot_streak_spells_in_flight ) ) )",
["use_off_gcd"] = 1,
["description"] = "During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.",
["action"] = "fire_blast",
},
{
["enabled"] = true,
["description"] = "Modified, changed to Hot Streak to avoid hardcasted Pyroblasts.",
["criteria"] = "prev_gcd.1.scorch & buff.hot_streak.react & searing_touch.active & active_enemies < variable.hot_streak_flamestrike",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.remains < 4 * gcd.max",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "talent.alexstraszas_fury.enabled & ( ! talent.feel_the_burn.enabled || buff.feel_the_burn.remains < 2 * gcd.max )",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc & debuff.charring_embers.remains < 2 * gcd.max & ! buff.hot_streak.react",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.stack < debuff.improved_scorch.max_stack",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "! talent.alexstraszas_fury.enabled & ! buff.hot_streak.react & ! variable.phoenix_pooling & buff.flames_fury.up",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "talent.alexstraszas_fury.enabled & ! buff.hot_streak.react & hot_streak_spells_in_flight = 0 & ( ! variable.phoenix_pooling & buff.flames_fury.up || charges_fractional > 2.5 || charges_fractional > 1.5 & ( ! talent.feel_the_burn.enabled || buff.feel_the_burn.remains < 3 * gcd.max ) )",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "active_talents",
},
{
["enabled"] = true,
["description"] = "Dragon's Breath is no longer a gain to be cast unless Alexstrazas is talented (need to check cutoff, was true on 10t)",
["criteria"] = "active_enemies > 1 & talent.alexstraszas_fury.enabled",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "searing_touch.active",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.arcane_explosion & mana.pct >= variable.arcane_explosion_mana",
["action"] = "arcane_explosion",
},
{
["enabled"] = true,
["description"] = "With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.",
["criteria"] = "active_enemies >= variable.hard_cast_flamestrike",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "talent.tempered_flames.enabled & ! buff.flame_accelerant.react",
["action"] = "pyroblast",
},
{
["action"] = "fireball",
["enabled"] = true,
},
},
["combustion_phase"] = {
{
["enabled"] = true,
["criteria"] = "buff.combustion.down",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & buff.combustion.down",
["action"] = "living_bomb",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.",
["criteria"] = "buff.combustion.remains > variable.skb_duration || fight_remains < 20",
["list_name"] = "combustion_cooldowns",
},
{
["enabled"] = true,
["criteria"] = "prev.1.fire_blast + prev.2.fire_blast + prev.3.fire_blast >= 2 & action.fire_blast.charges = 0",
["name"] = "hyperthread_wristwraps",
["action"] = "hyperthread_wristwraps",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion > 60",
["name"] = "neural_synapse_enhancer",
["action"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["description"] = "In Charring embers is not up before Combustion, make sure to apply it.",
["criteria"] = "buff.combustion.down & set_bonus.tier30_2pc & ! action.phoenix_flames.in_flight & debuff.charring_embers.remains < 4 * gcd.max & ! buff.hot_streak.react",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "active_talents",
},
{
["enabled"] = true,
["description"] = "If Combustion is down, precast something before activating it.",
["criteria"] = "buff.combustion.down & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0 & cooldown.combustion.remains < cast_time & active_enemies >= variable.skb_flamestrike",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time & active_enemies < 2 & ! improved_scorch.active",
["action"] = "fireball",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time",
["action"] = "scorch",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "hot_streak_spells_in_flight = 0 & buff.combustion.down & variable.time_to_combustion <= 0 & ( action.scorch.executing & action.scorch.execute_remains < variable.combustion_cast_remains || action.fireball.executing & action.fireball.execute_remains < variable.combustion_cast_remains || action.pyroblast.executing & action.pyroblast.execute_remains < variable.combustion_cast_remains || action.flamestrike.executing & action.flamestrike.execute_remains < variable.combustion_cast_remains || action.meteor.in_flight & action.meteor.in_flight_remains < variable.combustion_cast_remains )",
["use_off_gcd"] = 1,
["description"] = "Combustion should be used when the precast is almost finished or when Meteor is about to land.",
["action"] = "combustion",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! variable.fire_blast_pooling & ( ! improved_scorch.active || action.scorch.executing || debuff.improved_scorch.remains > 4 * gcd.max ) & ( buff.fury_of_the_sun_king.down || action.pyroblast.executing ) & buff.combustion.up & ! buff.hyperthermia.react & ! buff.hot_streak.react & hot_streak_spells_in_flight + buff.heating_up.react * ( gcd.remains > 0 ) < 2",
["use_off_gcd"] = 1,
["description"] = "Without Feel the Burn, just use Fire Blasts when they won't munch crits and when Firestorm is down.",
["action"] = "fire_blast",
},
{
["enabled"] = true,
["description"] = "Spend Hot Streaks during Combustion at high priority.",
["criteria"] = "( buff.hot_streak.react & active_enemies >= variable.combustion_flamestrike ) || ( ( buff.firestorm.react || buff.hyperthermia.react ) & active_enemies >= variable.combustion_flamestrike - ( runeforge.firestorm.enabled || talent.hyperthermia.enabled ) )",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["description"] = "Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.",
["criteria"] = "buff.combustion.up & 2 * buff.hot_streak.react + buff.heating_up.react + hot_streak_spells_in_flight = 2",
["action"] = "radiant_spark",
},
{
["enabled"] = true,
["criteria"] = "( buff.firestorm.react || buff.hyperthermia.react )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & buff.combustion.up",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.scorch & buff.heating_up.react & active_enemies < variable.combustion_flamestrike & buff.combustion.up",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["description"] = "Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.",
["criteria"] = "buff.combustion.up & ! action.fire_blast.charges & ( action.phoenix_flames.charges < action.phoenix_flames.max_charges || talent.alexstraszas_fury.enabled ) & variable.combustion_shifting_power <= active_enemies",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & active_enemies >= variable.skb_flamestrike & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["description"] = "Maintain Improved Scorch when not casting Flamestrikes in Combustion.",
["criteria"] = "improved_scorch.active & ( debuff.improved_scorch.remains < 4 * gcd.max ) & active_enemies < variable.combustion_flamestrike",
["action"] = "scorch",
},
{
["enabled"] = true,
["description"] = "With the T30 set, Phoenix Flames should be used to maintain Charring Embers during Combustion and Flame's Fury procs should be spent.",
["criteria"] = "set_bonus.tier30_2pc & travel_time < buff.combustion.remains & buff.heating_up.react + hot_streak_spells_in_flight < 2 & ( debuff.charring_embers.remains < 4 * gcd.max || buff.flames_fury.stack > 1 || buff.flames_fury.up )",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time & buff.flame_accelerant.react",
["action"] = "fireball",
},
{
["enabled"] = true,
["description"] = "Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.",
["criteria"] = "( ! talent.alexstraszas_fury.enabled & travel_time < buff.combustion.remains || talent.alexstraszas_fury.enabled ) & buff.heating_up.react + hot_streak_spells_in_flight < 2",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time & cast_time >= gcd.max",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time",
["action"] = "fireball",
},
{
["enabled"] = true,
["description"] = "If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.",
["criteria"] = "buff.combustion.remains < gcd.max & active_enemies > 1",
["action"] = "living_bomb",
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'firestarter_fire_blasts' required some automated changes.\nLine 2: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 15: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 15: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'conduit.infernal_cascade' to 'conduit.infernal_cascade.enabled' (1x).\nLine 18: Converted 'runeforge.sun_kings_blessing' to 'runeforge.sun_kings_blessing.enabled' (1x).\nLine 18: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 18: Converted operations in '!variable.item_cutoff_active&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade.enabled||variable.combustion_on_use&!(runeforge.sun_kings_blessing.enabled||talent.sun_kings_blessing.enabled)||variable.time_to_combustion>interpolated_fight_remains%%(action_cooldown+10))' to '!variable.item_cutoff_active&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade.enabled||variable.combustion_on_use&!(runeforge.sun_kings_blessing.enabled||talent.sun_kings_blessing.enabled)||variable.time_to_combustion>interpolated_fight_remains%(action_cooldown+10))'.\nLine 26: Converted 'runeforge.grisly_icicle' to 'runeforge.grisly_icicle.enabled' (1x).\nLine 27: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 28: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 28: Converted 'talent.rune_of_power' to 'talent.rune_of_power.enabled' (1x).\nLine 29: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 30: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 31: Converted operations in 'buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains' to 'buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)/cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts/cooldown.fire_blast.duration-(buff.combustion.duration/cooldown.fire_blast.duration)%1&variable.time_to_combustion<fight_remains'.\nLine 33: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.firestarter' to 'talent.firestarter.enabled' (1x).\n\nThe import for 'combustion_cooldowns' required some automated changes.\nLine 6: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 6: Converted 'runeforge.temporal_warp' to 'runeforge.temporal_warp.enabled' (1x).\n\nThe import for 'active_talents' required some automated changes.\nLine 2: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 3: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 3: Converted 'talent.tempered_flames' to 'talent.tempered_flames.enabled' (1x).\nLine 4: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 4: Converted 'talent.tempered_flames' to 'talent.tempered_flames.enabled' (1x).\n\nThe import for 'standard_rotation' required some automated changes.\nLine 4: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 10: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 10: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 13: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 13: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\nLine 16: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 17: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 17: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\nLine 19: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 23: Converted 'talent.tempered_flames' to 'talent.tempered_flames.enabled' (1x).\n\nThe import for 'combustion_phase' required some automated changes.\nLine 15: Converted 'runeforge.firestorm' to 'runeforge.firestorm.enabled' (1x).\nLine 15: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 20: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 26: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 26: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/arcane_intellect\n# defining a group of trinkets as Steroids\nactions.precombat+=/variable,name=steroid_trinket_equipped,op=set,value=equipped.gladiators_badge||equipped.irideus_fragment||equipped.erupting_spear_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.horn_of_valor||equipped.mirror_of_fractured_tomorrows||equipped.ashes_of_the_embersoul||equipped.balefire_branch||equipped.time_theifs_gambit||equipped.nymues_unraveling_spindle\n## # APL Variable Option: If set to a non-zero value, the Combustion action and cooldowns that are constrained to only be used when Combustion is up will not be used during the simulation.\n## actions.precombat+=/variable,name=disable_combustion,op=reset\n## # APL Variable Option: This variable specifies whether Combustion should be used during Firestarter.\n## actions.precombat+=/variable,name=firestarter_combustion,default=-1,value=talent.sun_kings_blessing,if=variable.firestarter_combustion<0\n## # APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes outside of Combustion should be used.\n## actions.precombat+=/variable,name=hot_streak_flamestrike,if=variable.hot_streak_flamestrike=0,value=4*talent.flame_patch+999*!talent.flame_patch\n## # APL Variable Option: This variable specifies the number of targets at which Hard Cast Flamestrikes outside of Combustion should be used as filler.\n## actions.precombat+=/variable,name=hard_cast_flamestrike,if=variable.hard_cast_flamestrike=0,value=999\n## # APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes are used during Combustion.\n## actions.precombat+=/variable,name=combustion_flamestrike,if=variable.combustion_flamestrike=0,value=4*talent.flame_patch+999*!talent.flame_patch\n## # APL Variable Option: This variable specifies the number of targets at which Flamestrikes should be used to consume Fury of the Sun King.  Restricting this variable to be true only if Fuel the Fire is talented.\n## actions.precombat+=/variable,name=skb_flamestrike,if=variable.skb_flamestrike=0,value=3*talent.fuel_the_fire+999*!talent.fuel_the_fire\n## # APL Variable Option: This variable specifies the number of targets at which Arcane Explosion outside of Combustion should be used.\n## actions.precombat+=/variable,name=arcane_explosion,if=variable.arcane_explosion=0,value=999\n## # APL Variable Option: This variable specifies the percentage of mana below which Arcane Explosion will not be used.\n## actions.precombat+=/variable,name=arcane_explosion_mana,default=40,op=reset\n## # APL Variable Option: The number of targets at which Shifting Power can used during Combustion.\n## actions.precombat+=/variable,name=combustion_shifting_power,if=variable.combustion_shifting_power=0,value=999\n## # APL Variable Option: The time remaining on a cast when Combustion can be used in seconds.\n## actions.precombat+=/variable,name=combustion_cast_remains,default=0.3,op=reset\n## # APL Variable Option: This variable specifies the number of seconds of Fire Blast that should be pooled past the default amount.\n## actions.precombat+=/variable,name=overpool_fire_blasts,default=0,op=reset\n## # If Combustion is disabled, schedule the first Combustion far after the fight ends.\n## actions.precombat+=/variable,name=time_to_combustion,value=fight_remains+100,if=variable.disable_combustion\n## # The duration of a Sun King's Blessing Combustion.\n## actions.precombat+=/variable,name=skb_duration,value=dbc.effect.1016075.base_value\n## # Whether a usable item used to buff Combustion is equipped.\n## actions.precombat+=/variable,name=combustion_on_use,value=equipped.gladiators_badge||equipped.moonlit_prism||equipped.irideus_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.horn_of_valor\n## # How long before Combustion should trinkets that trigger a shared category cooldown on other trinkets not be used?\n## actions.precombat+=/variable,name=on_use_cutoff,value=20,if=variable.combustion_on_use\nactions.precombat+=/use_item,name=soul_igniter,if=!variable.combustion_on_use&!equipped.dreadfire_vessel&(!talent.firestarter||variable.firestarter_combustion)\nactions.precombat+=/use_item,name=shadowed_orb_of_torment,if=!equipped.the_first_sigil\nactions.precombat+=/mirror_image\nactions.precombat+=/flamestrike,if=active_enemies>=variable.hot_streak_flamestrike\nactions.precombat+=/pyroblast\n\n# Executed every time the actor is available.\nactions=counterspell\n# The second Time Warp is usually best used immediately on pull with Temporal Warp so that it comes off cooldown earlier; this can sometimes be slightly worse if doing so will not result in additional Time Warp(s) throughout the encounter. Additionally, it should always be used at the end of the fight regardless of Combustion being ready if it is available.\nactions+=/time_warp,if=debuff.sated.up&talent.temporal_warp&(firestarter.active||interpolated_fight_remains<buff.bloodlust.duration)\nactions+=/potion,if=buff.potion.duration>variable.time_to_combustion+buff.combustion.duration\nactions+=/use_item,effect_name=gladiators_badge,if=variable.time_to_combustion>cooldown-5\nactions+=/use_item,name=empyreal_ordnance,if=variable.time_to_combustion<=variable.empyreal_ordnance_delay&variable.time_to_combustion>variable.empyreal_ordnance_delay-5\nactions+=/use_item,name=shadowed_orb_of_torment,if=(variable.time_to_combustion<=variable.combustion_precast_time+2||fight_remains<variable.time_to_combustion)&buff.combustion.down&(!equipped.the_first_sigil||cooldown.the_first_sigil_367241.remains>40)\nactions+=/use_item,name=grim_eclipse,if=variable.time_to_combustion<=8||fight_remains<variable.time_to_combustion\n# New trinket and weapon lines  need special line for Nymue trinket which would delay combustion under certain conditions?\nactions+=/use_item,name=mirror_of_fractured_tomorrows,if=buff.combustion.up&buff.combustion.remains>11\nactions+=/use_item,name=timethiefs_gambit,if=buff.combustion.up\nactions+=/use_item,name=balefire_branch,if=(variable.time_to_combustion<=3&buff.fury_of_the_sun_king.up)||(buff.combustion.up&buff.combustion.remains>11)\nactions+=/use_item,name=ashes_of_the_embersoul,if=(variable.time_to_combustion<=3&buff.fury_of_the_sun_king.up)||(buff.combustion.up&buff.combustion.remains>11)\nactions+=/use_item,name=nymues_unraveling_spindle,if=variable.time_to_combustion<=9\nactions+=/use_item,name=dreambinder_loom_of_the_great_cycle\n# Iridal can and should be used while on the GCD\nactions+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,slot=main_hand,if=gcd.remains>=0.6*gcd.max\nactions+=/use_item,name=belorrelos_the_suncaller,if=(!variable.steroid_trinket_equipped&buff.combustion.down)||(variable.steroid_trinket_equipped&trinket.1.has_cooldown&trinket.1.cooldown.remains>20&buff.combustion.down)||(variable.steroid_trinket_equipped&trinket.2.has_cooldown&trinket.2.cooldown.remains>20&buff.combustion.down)\nactions+=/use_item,name=glyph_of_assimilation,if=!variable.item_cutoff_active\nactions+=/use_item,name=macabre_sheet_music,if=variable.time_to_combustion<=5\n# If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Feel the Burn is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown. Note that with Sun King's Blessing, it is possible to sync this with SKB Combustions regardless of on-use trinkets.\nactions+=/use_item,name=dreadfire_vessel,if=!variable.item_cutoff_active&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade||variable.combustion_on_use&!(runeforge.sun_kings_blessing||talent.sun_kings_blessing)||variable.time_to_combustion>interpolated_fight_remains%%(cooldown+10))\n# Items that do not benefit Combustion should just be used outside of Combustion at some point.\nactions+=/use_item,name=inscrutable_quantum_device,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=flame_of_battle,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=wakeners_frond,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=instructors_divine_bell,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=sunblood_amethyst,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.down\nactions+=/use_items,if=!variable.item_cutoff_active\n# Use Frost Nova to trigger Grisly Icicle.\nactions+=/frost_nova,if=runeforge.grisly_icicle&buff.combustion.down&(variable.time_to_combustion>cooldown||variable.time_to_combustion<variable.combustion_precast_time+execute_time)\n# Get the Disciplinary Command buff up, unless combustion is soon.\nactions+=/counterspell,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/arcane_explosion,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+execute_time+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5&!talent.rune_of_power)\nactions+=/frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.remains<cast_time&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion+cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/frost_nova,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\n# Pool as many Fire Blasts as possible for Combustion.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains\nactions+=/call_action_list,name=combustion_phase,if=variable.time_to_combustion<=0||buff.combustion.up||variable.time_to_combustion<variable.combustion_precast_time&cooldown.combustion.remains<variable.combustion_precast_time\n# Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=searing_touch.active&action.fire_blast.full_recharge_time>3*gcd.max,if=!variable.fire_blast_pooling&talent.sun_kings_blessing\nactions+=/shifting_power,if=buff.combustion.down&(action.fire_blast.charges=0||variable.fire_blast_pooling)&(!improved_scorch.active||debuff.improved_scorch.remains>cast_time+action.scorch.cast_time&!buff.fury_of_the_sun_king.up)&!buff.hot_streak.react&variable.shifting_power_before_combustion\n# When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Feel the Burn.\nactions+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&variable.time_to_combustion>0&active_enemies>=variable.hard_cast_flamestrike&!firestarter.active&!buff.hot_streak.react&(buff.heating_up.react&action.flamestrike.execute_remains<0.5||charges_fractional>=2)\n# During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Feel the Burn, they should be spread out to maintain the Feel the Burn buff.\nactions+=/call_action_list,name=firestarter_fire_blasts,if=buff.combustion.down&firestarter.active&variable.time_to_combustion>0\n# Avoid capping Fire Blast charges while channeling Shifting Power\nactions+=/fire_blast,use_while_casting=1,if=action.shifting_power.executing&full_recharge_time<action.shifting_power.tick_reduction\nactions+=/call_action_list,name=standard_rotation,if=variable.time_to_combustion>0&buff.combustion.down\nactions+=/scorch\n\nactions.active_talents=living_bomb,if=active_enemies>1&buff.combustion.down&(variable.time_to_combustion>cooldown.living_bomb.duration||variable.time_to_combustion<=0)\nactions.active_talents+=/meteor,if=variable.time_to_combustion<=0||buff.combustion.remains>travel_time||!talent.sun_kings_blessing&(cooldown.meteor.duration<variable.time_to_combustion||fight_remains<variable.time_to_combustion)\n# With Alexstrasza's Fury when Combustion is not active, Dragon's Breath should be used to convert Heating Up to a Hot Streak.\nactions.active_talents+=/dragons_breath,if=talent.alexstraszas_fury&(buff.combustion.down&!buff.hot_streak.react)&(buff.feel_the_burn.up||time>15)&(!improved_scorch.active)&!firestarter.remains&!talent.tempered_flames\nactions.active_talents+=/dragons_breath,if=talent.alexstraszas_fury&(buff.combustion.down&!buff.hot_streak.react)&(buff.feel_the_burn.up||time>15)&(!improved_scorch.active)&talent.tempered_flames\n\nactions.combustion_cooldowns=potion\nactions.combustion_cooldowns+=/blood_fury\nactions.combustion_cooldowns+=/berserking,if=buff.combustion.up\nactions.combustion_cooldowns+=/fireblood\nactions.combustion_cooldowns+=/ancestral_call\n## The addon does not invoke external buffs, because they player cannot actually choose to trigger them personally.\n## actions.combustion_cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.power_infusion.down\n## actions.combustion_cooldowns+=/invoke_external_buff,name=blessing_of_summer,if=buff.blessing_of_summer.down\nactions.combustion_cooldowns+=/time_warp,if=(talent.temporal_warp||runeforge.temporal_warp)&debuff.sated.up\nactions.combustion_cooldowns+=/use_item,effect_name=gladiators_badge\nactions.combustion_cooldowns+=/use_item,name=irideus_fragment\nactions.combustion_cooldowns+=/use_item,name=spoils_of_neltharus\nactions.combustion_cooldowns+=/use_item,name=tome_of_unstable_power\nactions.combustion_cooldowns+=/use_item,name=timebreaching_talon\nactions.combustion_cooldowns+=/use_item,name=voidmenders_shadowgem\nactions.combustion_cooldowns+=/use_item,name=horn_of_valor\nactions.combustion_cooldowns+=/use_item,name=timethiefs_gambit\nactions.combustion_cooldowns+=/use_item,name=balefire_branch\nactions.combustion_cooldowns+=/use_item,name=ashes_of_the_embersoul\nactions.combustion_cooldowns+=/use_item,name=mirror_of_fractured_tomorrows\n\nactions.combustion_phase=lights_judgment,if=buff.combustion.down\nactions.combustion_phase+=/bag_of_tricks,if=buff.combustion.down\nactions.combustion_phase+=/living_bomb,if=active_enemies>1&buff.combustion.down\n# Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.\nactions.combustion_phase+=/call_action_list,name=combustion_cooldowns,if=buff.combustion.remains>variable.skb_duration||fight_remains<20\nactions.combustion_phase+=/use_item,name=hyperthread_wristwraps,if=prev.1.fire_blast+prev.2.fire_blast+prev.3.fire_blast>=2&action.fire_blast.charges=0\nactions.combustion_phase+=/use_item,name=neural_synapse_enhancer,if=variable.time_to_combustion>60\n# In Charring embers is not up before Combustion, make sure to apply it.\nactions.combustion_phase+=/phoenix_flames,if=buff.combustion.down&set_bonus.tier30_2pc&!action.phoenix_flames.in_flight&debuff.charring_embers.remains<4*gcd.max&!buff.hot_streak.react\nactions.combustion_phase+=/call_action_list,name=active_talents\n# If Combustion is down, precast something before activating it.\nactions.combustion_phase+=/flamestrike,if=buff.combustion.down&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0&cooldown.combustion.remains<cast_time&active_enemies>=variable.skb_flamestrike\nactions.combustion_phase+=/pyroblast,if=buff.combustion.down&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.combustion_phase+=/fireball,if=buff.combustion.down&cooldown.combustion.remains<cast_time&active_enemies<2&!improved_scorch.active\nactions.combustion_phase+=/scorch,if=buff.combustion.down&cooldown.combustion.remains<cast_time\n# Combustion should be used when the precast is almost finished or when Meteor is about to land.\nactions.combustion_phase+=/combustion,use_off_gcd=1,use_while_casting=1,if=hot_streak_spells_in_flight=0&buff.combustion.down&variable.time_to_combustion<=0&(action.scorch.executing&action.scorch.execute_remains<variable.combustion_cast_remains||action.fireball.executing&action.fireball.execute_remains<variable.combustion_cast_remains||action.pyroblast.executing&action.pyroblast.execute_remains<variable.combustion_cast_remains||action.flamestrike.executing&action.flamestrike.execute_remains<variable.combustion_cast_remains||action.meteor.in_flight&action.meteor.in_flight_remains<variable.combustion_cast_remains)\n# Without Feel the Burn, just use Fire Blasts when they won't munch crits and when Firestorm is down.\nactions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&(!improved_scorch.active||action.scorch.executing||debuff.improved_scorch.remains>4*gcd.max)&(buff.fury_of_the_sun_king.down||action.pyroblast.executing)&buff.combustion.up&!buff.hyperthermia.react&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n# Spend Hot Streaks during Combustion at high priority.\nactions.combustion_phase+=/flamestrike,if=(buff.hot_streak.react&active_enemies>=variable.combustion_flamestrike)||((buff.firestorm.react||buff.hyperthermia.react)&active_enemies>=variable.combustion_flamestrike-(runeforge.firestorm||talent.hyperthermia))\n# Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.\nactions.combustion_phase+=/radiant_spark,if=buff.combustion.up&2*buff.hot_streak.react+buff.heating_up.react+hot_streak_spells_in_flight=2\nactions.combustion_phase+=/pyroblast,if=(buff.firestorm.react||buff.hyperthermia.react)\n## With Sun King's Blessing, there is a brief delay before the Sun King's Blessing ready buff is removed after consuming it. It is beneficial to wait for this delay before spending Hot Streaks to not waste a stack.\n## actions.combustion_phase+=/wait,sec=0.01,if=buff.hot_streak.react&active_enemies<variable.combustion_flamestrike&(buff.sun_kings_blessing_ready.expiration_delay_remains||time-buff.sun_kings_blessing_ready.last_expire<variable.skb_delay-0.03)\nactions.combustion_phase+=/pyroblast,if=buff.hot_streak.react&buff.combustion.up\nactions.combustion_phase+=/pyroblast,if=prev_gcd.1.scorch&buff.heating_up.react&active_enemies<variable.combustion_flamestrike&buff.combustion.up\n# Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.\nactions.combustion_phase+=/shifting_power,if=buff.combustion.up&!action.fire_blast.charges&(action.phoenix_flames.charges<action.phoenix_flames.max_charges||talent.alexstraszas_fury)&variable.combustion_shifting_power<=active_enemies\n+# Spend Fury of the Sun King procs.\nactions.combustion_phase+=/flamestrike,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&active_enemies>=variable.skb_flamestrike&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.combustion_phase+=/pyroblast,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0\n# Maintain Improved Scorch when not casting Flamestrikes in Combustion.\nactions.combustion_phase+=/scorch,if=improved_scorch.active&(debuff.improved_scorch.remains<4*gcd.max)&active_enemies<variable.combustion_flamestrike\n# With the T30 set, Phoenix Flames should be used to maintain Charring Embers during Combustion and Flame's Fury procs should be spent.\nactions.combustion_phase+=/phoenix_flames,if=set_bonus.tier30_2pc&travel_time<buff.combustion.remains&buff.heating_up.react+hot_streak_spells_in_flight<2&(debuff.charring_embers.remains<4*gcd.max||buff.flames_fury.stack>1||buff.flames_fury.up)\nactions.combustion_phase+=/fireball,if=buff.combustion.remains>cast_time&buff.flame_accelerant.react\n# Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.\nactions.combustion_phase+=/phoenix_flames,if=(!talent.alexstraszas_fury&travel_time<buff.combustion.remains||talent.alexstraszas_fury)&buff.heating_up.react+hot_streak_spells_in_flight<2\nactions.combustion_phase+=/scorch,if=buff.combustion.remains>cast_time&cast_time>=gcd.max\nactions.combustion_phase+=/fireball,if=buff.combustion.remains>cast_time\n# If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.\nactions.combustion_phase+=/living_bomb,if=buff.combustion.remains<gcd.max&active_enemies>1\n\n# While casting Fireball or Pyroblast, convert Heating Up to a Hot Streak!\nactions.firestarter_fire_blasts+=/fire_blast,use_while_casting=1,if=!variable.fire_blast_pooling&!buff.hot_streak.react&(action.fireball.execute_remains>gcd.remains||action.pyroblast.executing)&buff.heating_up.react+hot_streak_spells_in_flight=1&(cooldown.shifting_power.ready||charges>1||buff.feel_the_burn.remains<2*gcd.max)\n# If not casting anything, use Fire Blast to trigger Hot Streak! only if Feel the Burn is talented and would expire before the GCD ends or if Shifting Power is available.\nactions.firestarter_fire_blasts+=/fire_blast,use_off_gcd=1,if=!variable.fire_blast_pooling&buff.heating_up.react+hot_streak_spells_in_flight=1&(talent.feel_the_burn&buff.feel_the_burn.remains<gcd.remains||cooldown.shifting_power.ready&(!set_bonus.tier30_2pc||debuff.charring_embers.remains>2*gcd.max))\n\nactions.standard_rotation=flamestrike,if=active_enemies>=variable.hot_streak_flamestrike&(buff.hot_streak.react||(buff.firestorm.react||buff.hyperthermia.react))\nactions.standard_rotation+=/pyroblast,if=buff.hyperthermia.react\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&(buff.hot_streak.remains<action.fireball.execute_time)\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&(hot_streak_spells_in_flight||firestarter.active||talent.alexstraszas_fury&action.phoenix_flames.charges)\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&searing_touch.active\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.skb_flamestrike&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.remains<action.pyroblast.cast_time+5*gcd.max&buff.fury_of_the_sun_king.up&!action.scorch.in_flight\nactions.standard_rotation+=/pyroblast,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&searing_touch.active\n# During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.\nactions.standard_rotation+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!firestarter.active&!variable.fire_blast_pooling&buff.fury_of_the_sun_king.down&(((action.fireball.executing&(action.fireball.execute_remains<0.5||!talent.hyperthermia)||action.pyroblast.executing&(action.pyroblast.execute_remains<0.5||!talent.hyperthermia))&buff.heating_up.react)||(searing_touch.active&(!improved_scorch.active||debuff.improved_scorch.stack=debuff.improved_scorch.max_stack||full_recharge_time<3)&(buff.heating_up.react&!action.scorch.executing||!buff.hot_streak.react&!buff.heating_up.react&action.scorch.executing&!hot_streak_spells_in_flight)))\n# Modified; changed to Hot Streak to avoid hardcasted Pyroblasts.\nactions.standard_rotation+=/pyroblast,if=prev_gcd.1.scorch&buff.hot_streak.react&searing_touch.active&active_enemies<variable.hot_streak_flamestrike\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.remains<4*gcd.max\nactions.standard_rotation+=/phoenix_flames,if=talent.alexstraszas_fury&(!talent.feel_the_burn||buff.feel_the_burn.remains<2*gcd.max)\nactions.standard_rotation+=/phoenix_flames,if=set_bonus.tier30_2pc&debuff.charring_embers.remains<2*gcd.max&!buff.hot_streak.react\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.stack<debuff.improved_scorch.max_stack\nactions.standard_rotation+=/phoenix_flames,if=!talent.alexstraszas_fury&!buff.hot_streak.react&!variable.phoenix_pooling&buff.flames_fury.up\nactions.standard_rotation+=/phoenix_flames,if=talent.alexstraszas_fury&!buff.hot_streak.react&hot_streak_spells_in_flight=0&(!variable.phoenix_pooling&buff.flames_fury.up||charges_fractional>2.5||charges_fractional>1.5&(!talent.feel_the_burn||buff.feel_the_burn.remains<3*gcd.max))\nactions.standard_rotation+=/call_action_list,name=active_talents\n# Dragon's Breath is no longer a gain to be cast unless Alexstrazas is talented (need to check cutoff, was true on 10t)\nactions.standard_rotation+=/dragons_breath,if=active_enemies>1&talent.alexstraszas_fury\nactions.standard_rotation+=/scorch,if=searing_touch.active\nactions.standard_rotation+=/arcane_explosion,if=active_enemies>=variable.arcane_explosion&mana.pct>=variable.arcane_explosion_mana\n# With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike\nactions.standard_rotation+=/pyroblast,if=talent.tempered_flames&!buff.flame_accelerant.react\nactions.standard_rotation+=/fireball",
["spec"] = 63,
},
["Arcane"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["spec"] = 62,
["desc"] = "2024-05-08: SimC update.\n\n2023-12-14:  Prune T29 logic that is blocking.\n\n2023-12-10:  Latest SimC changes.\n\n2023-11-10:  Incremental SimC update.\n\n2023-11-05:  Patch 10.2.\n\n2023-08-26:  Minor priority update.\n\n2023-07-18:  Minor update to Arcane Orb, Arcane Barrage, TotM.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-02:  Check debuff.sated.up for Temporal Warp.\n\n2023-06-24:  Beacon/trinket logic updated; don't Evocation pre-pull if Arcane Surge isn't ready (or toggled off).\n\n2023-05-26:  Tweak to Arcane Blasts at high haste.\n\n2023-05-21:  Re-enable Evocation out of boss fights.\n\n2023-05-20:  Even more adjustments to timed priority entries.\n\n2023-05-15:  Relax some line cooldowns to help ensure transition into Arcane Surge.\n\n2023-05-13:  Minor update.\n\n2023-05-12:  Added T30 priority from SimC.\n\n2023-05-02:  Update for 10.1.",
["lists"] = {
["rotation"] = {
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack < 3 & ( buff.bloodlust.down || mana.pct > 70 )",
["action"] = "arcane_orb",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & cooldown.arcane_surge.remains > 45 & fight_remains > 15",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || ! ticking ) & equipped.neltharions_call_to_chaos & fight_remains >= 12",
["action"] = "nether_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack < 3 & target.health.pct < 35 & talent.arcane_bombardment.enabled",
["action"] = "presence_of_mind",
},
{
["enabled"] = true,
["criteria"] = "talent.time_anomaly.enabled & buff.arcane_surge.up & buff.arcane_surge.remains <= 6",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.presence_of_mind.up & target.health.pct < 35 & talent.arcane_bombardment.enabled & buff.arcane_charge.stack < 3",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "buff.clearcasting.react & buff.clearcasting.stack = buff.clearcasting.max_stack",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( buff.temporal_warp.up || mana.pct < 10 || ! talent.shifting_power.enabled ) & buff.arcane_surge.down & fight_remains >= 12",
["action"] = "nether_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & mana.pct < 50 & ! talent.evocation.enabled & fight_remains > 20",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & mana.pct < 70 & variable.conserve_mana & buff.bloodlust.up & cooldown.touch_of_the_magi.remains > 5 & fight_remains > 20",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "buff.clearcasting.react & buff.concentration.up & buff.arcane_charge.stack = buff.arcane_charge.max_stack",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.nether_precision.up",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & mana.pct < 60 & variable.conserve_mana & cooldown.touch_of_the_magi.remains > 10 & cooldown.evocation.remains > 40 & fight_remains > 20",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "buff.clearcasting.react & buff.nether_precision.down & ! variable.opener",
["interrupt_global"] = "1",
},
{
["action"] = "arcane_blast",
["enabled"] = true,
},
{
["action"] = "arcane_barrage",
["enabled"] = true,
},
},
["cooldown_phase"] = {
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "prev_gcd.1.arcane_barrage",
["action"] = "touch_of_the_magi",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & ! talent.radiant_spark.enabled",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.radiant_spark.ready || ( active_enemies >= 2 & debuff.radiant_spark_vulnerability.down ) ) & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
["action"] = "arcane_orb",
},
{
["enabled"] = true,
["criteria"] = "cooldown.radiant_spark.ready & ( buff.arcane_charge.stack < 2 || ( buff.arcane_charge.stack < buff.arcane_charge.max_stack & cooldown.arcane_orb.remains >= gcd.max ) )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.clearcasting.react & buff.clearcasting.stack > 0 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) ) & set_bonus.tier31_4pc",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "variable.opener & cooldown.arcane_surge.ready & mana >= variable.opener_min_mana & buff.siphon_storm.remains > 17 & ! set_bonus.tier30_4pc",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.clearcasting.react & buff.clearcasting.stack >= 2 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) ) & ! set_bonus.tier30_4pc",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "talent.arcane_harmony.enabled & buff.arcane_harmony.stack < 15 & ( ( variable.opener & buff.bloodlust.up ) || buff.clearcasting.react & cooldown.radiant_spark.remains < 5 ) & cooldown.arcane_surge.remains < 30",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["chain"] = "1",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "cooldown.radiant_spark.ready & buff.clearcasting.react & ( talent.nether_precision.enabled & ( buff.nether_precision.down || buff.nether_precision.remains < gcd.max * 3 ) ) & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) )",
["interrupt_global"] = "1",
},
{
["action"] = "radiant_spark",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "talent.arcane_echo.enabled",
["line_cd"] = "30",
},
{
["action"] = "arcane_surge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge || prev_gcd.1.nether_tempest || prev_gcd.1.radiant_spark || ( active_enemies >= ( 4 - ( 2 * talent.orb_barrage.enabled ) ) & debuff.radiant_spark_vulnerability.stack = 4 & talent.arcing_cleave.enabled )",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "debuff.radiant_spark_vulnerability.stack > 0 & ( debuff.radiant_spark_vulnerability.stack < 4 || ( variable.blast_below_gcd & debuff.radiant_spark_vulnerability.stack = 4 ) )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "debuff.touch_of_the_magi.remains <= gcd.max",
["action"] = "presence_of_mind",
},
{
["enabled"] = true,
["criteria"] = "buff.presence_of_mind.up",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["chain"] = "1",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "( ( buff.nether_precision.down & buff.clearcasting.react ) || ( buff.clearcasting.stack > 2 & set_bonus.tier31_4pc & debuff.touch_of_the_magi.up ) ) & ( debuff.radiant_spark_vulnerability.down || ( debuff.radiant_spark_vulnerability.stack = 4 & prev_gcd.1.arcane_blast ) )",
["interrupt_global"] = "1",
},
{
["action"] = "arcane_blast",
["enabled"] = true,
},
},
["aoe_spark_phase"] = {
{
["enabled"] = true,
["buff_name"] = "presence_of_mind",
["criteria"] = "prev_gcd.1.arcane_blast & cooldown.arcane_surge.remains > 75",
["action"] = "cancel_buff",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "prev_gcd.1.arcane_barrage",
["action"] = "touch_of_the_magi",
},
{
["action"] = "radiant_spark",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "arcane_orb",
["criteria"] = "buff.arcane_charge.stack < 3",
["line_cd"] = "1",
},
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "talent.arcane_echo.enabled",
["line_cd"] = "15",
},
{
["action"] = "arcane_surge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.arcane_surge.remains < 75 & debuff.radiant_spark_vulnerability.stack = 4 & ! talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "( debuff.radiant_spark_vulnerability.stack = 2 & cooldown.arcane_surge.remains > 75 ) || ( debuff.radiant_spark_vulnerability.stack = 1 & cooldown.arcane_surge.remains < 75 ) & ! talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["description"] = "Optimize orb barrage procs during spark at the cost of vulnerabilities, except at 5 or fewer targets where you arcane blast on the 3rd spark stack if its up and you have charges",
["criteria"] = "( debuff.radiant_spark_vulnerability.stack = 1 || debuff.radiant_spark_vulnerability.stack = 2 || ( debuff.radiant_spark_vulnerability.stack = 3 & active_enemies > 5 ) || debuff.radiant_spark_vulnerability.stack = 4 ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
{
["action"] = "presence_of_mind",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( debuff.radiant_spark_vulnerability.stack = 2 || debuff.radiant_spark_vulnerability.stack = 3 ) & ! talent.orb_barrage.enabled ) || ( debuff.radiant_spark_vulnerability.remains & talent.orb_barrage.enabled )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "( debuff.radiant_spark_vulnerability.stack = 4 & buff.arcane_surge.up ) || ( debuff.radiant_spark_vulnerability.stack = 3 & buff.arcane_surge.down ) & ! talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
},
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["action"] = "arcane_familiar",
["enabled"] = true,
},
{
["action"] = "conjure_mana_gem",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["value"] = "3",
["var_name"] = "aoe_target_count",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "75000 - ( 75000 * ! talent.arcane_harmony.enabled )",
["var_name"] = "opener_min_mana",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.gladiators_badge || equipped.irideus_fragment || equipped.spoils_of_neltharus || equipped.timebreaching_talon || equipped.ashes_of_the_embersoul || equipped.nymues_unraveling_spindle",
["var_name"] = "steroid_trinket_equipped",
["description"] = "Variable indicates use of a trinket that boosts stats during burst",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( equipped.ashes_of_the_embersoul & equipped.timebreaching_talon ) || ( equipped.irideus_fragment & equipped.timebreaching_talon ) )",
["var_name"] = "talon_double_on_use",
["description"] = "Variable indicates double on use trinket setups",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( equipped.ashes_of_the_embersoul & equipped.nymues_unraveling_spindle ) || ( equipped.irideus_fragment & equipped.nymues_unraveling_spindle ) || ( equipped.balefire_branch & equipped.nymues_unraveling_spindle ) || ( equipped.mirror_of_fractured_tomorrows & equipped.nymues_unraveling_spindle ) )",
["var_name"] = "nymues_double_on_use",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( equipped.irideus_fragment & equipped.ashes_of_the_embersoul )",
["var_name"] = "ashes_double_on_use",
},
{
["action"] = "mirror_image",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Edited to avoid wasting Evocation between small pulls if Arcane Surge isn't even ready.  This also accounts for toggles.",
["criteria"] = "! talent.siphon_storm.enabled || cooldown.arcane_surge.remains > 15",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.siphon_storm.enabled",
["action"] = "evocation",
},
},
["aoe_touch_phase"] = {
{
["enabled"] = true,
["criteria"] = "buff.arcane_artillery.up",
["action"] = "arcane_missiles",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 4 & buff.arcane_charge.stack = 3 ) || buff.arcane_charge.stack = buff.arcane_charge.max_stack",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack < 2",
["action"] = "arcane_orb",
},
{
["action"] = "arcane_explosion",
["enabled"] = true,
},
},
["aoe_rotation"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.evocation.enabled || cooldown.evocation.remains > 12 ) & ( ! talent.arcane_surge.enabled || cooldown.arcane_surge.remains > 12 ) & ( ! talent.touch_of_the_magi.enabled || cooldown.touch_of_the_magi.remains > 12 ) & buff.arcane_surge.down & ( ( ! talent.charged_orb.enabled & cooldown.arcane_orb.remains > 12 ) || ( action.arcane_orb.charges = 0 || cooldown.arcane_orb.remains > 12 ) )",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_surge.down & ( active_enemies > 6 || ! talent.orb_barrage.enabled )",
["action"] = "nether_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_artillery.up & ( cooldown.touch_of_the_magi.remains + 5 ) > buff.arcane_artillery.remains",
["action"] = "arcane_missiles",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 4 || buff.clearcasting.up ) & buff.arcane_charge.stack = 3",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = 0 & cooldown.touch_of_the_magi.remains > 18",
["action"] = "arcane_orb",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack || mana.pct < 10",
["action"] = "arcane_barrage",
},
{
["action"] = "arcane_explosion",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "counterspell",
},
{
["enabled"] = true,
["criteria"] = "cooldown.arcane_surge.ready",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "This is a backup measure in case you fail to pre-evocate with Siphon Storm.",
["criteria"] = "talent.siphon_storm.enabled & time < 10 & cooldown.arcane_surge.remains < 5",
["action"] = "evocation",
},
{
["enabled"] = true,
["criteria"] = "talent.temporal_warp.enabled & debuff.sated.up & ( cooldown.arcane_surge.ready || boss & fight_remains <= 40 || ( buff.arcane_surge.up & boss & fight_remains <= ( cooldown.arcane_surge.remains + 14 ) ) )",
["action"] = "time_warp",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & debuff.touch_of_the_magi.down & active_enemies >= 2",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & debuff.touch_of_the_magi.down",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["description"] = "Zerking gets used after surge outside of double lust, but after touch with double lust",
["criteria"] = "( prev_gcd.1.arcane_surge & ! ( buff.temporal_warp.up & buff.bloodlust.up ) ) || ( buff.arcane_surge.up & debuff.touch_of_the_magi.up )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["name"] = "irideus_fragment",
["action"] = "irideus_fragment",
["criteria"] = "cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest || fight_remains <= 20",
["description"] = "Use trinkets in single target after surge without t30, after touch with t30, and before Surge in AOE, except 20-second trinkets which are used with spark without t30.  Non-steroid trinkets are used whenever you don't have cooldowns active and double steroid trinkets are used in order of power level in sims with max ilevel.",
},
{
["enabled"] = true,
["criteria"] = "( prev_gcd.1.arcane_surge & ! equipped.belorrelos_the_suncaller & ( ! variable.ashes_double_on_use || ! variable.opener ) ) || fight_remains <= 20 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest ) || ( equipped.belorrelos_the_suncaller & ( buff.arcane_surge.remains > 12 || ( prev_gcd.1.arcane_surge & variable.opener ) ) & cooldown.evocation.remains > 60 )",
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["criteria"] = "( ( ! variable.opener & cooldown.arcane_surge.remains <= ( gcd.max * 4 ) & cooldown.radiant_spark.ready ) || ( variable.opener & ( mana.pct <= 10 || buff.siphon_storm.remains < 19 ) ) & ( ! variable.nymues_double_on_use || ! variable.opener ) ) || fight_remains <= 24 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest ) || ( ( equipped.belorrelos_the_suncaller ) & cooldown.touch_of_the_magi.remains < ( gcd.max * 6 ) )",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.arcane_surge.remains <= ( gcd.max * 4 ) & cooldown.radiant_spark.remains ) & ( ! variable.talon_double_on_use || ! variable.opener ) ) || fight_remains <= 20 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest )",
["name"] = "timebreaching_talon",
["action"] = "timebreaching_talon",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest ) || boss & fight_remains <= 15",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "( buff.siphon_storm.up & buff.siphon_storm.remains < 19 & ( cooldown.arcane_surge.remains < 12 || buff.arcane_surge.up ) & ( debuff.touch_of_the_magi.remains > 8 || cooldown.touch_of_the_magi.remains < 8 ) ) || fight_remains <= 15 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest )",
["name"] = "voidmenders_shadowgem",
["action"] = "voidmenders_shadowgem",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down || equipped.nymues_unraveling_spindle",
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || ( buff.siphon_storm.down & buff.arcane_surge.remains < 10 )",
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "iceblood_deathsnare",
["action"] = "iceblood_deathsnare",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "desperate_invokers_codex",
["action"] = "desperate_invokers_codex",
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 65 & ( ! variable.steroid_trinket_equipped || buff.siphon_storm.down )",
["name"] = "conjured_chillglobe",
["action"] = "conjured_chillglobe",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "darkmoon_deck_rime",
["action"] = "darkmoon_deck_rime",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "darkmoon_deck_dance",
["action"] = "darkmoon_deck_dance",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "darkmoon_deck_inferno",
["action"] = "darkmoon_deck_inferno",
},
{
["enabled"] = true,
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["action"] = "iridal_the_earths_master",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains",
["name"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "action.arcane_blast.cast_time < gcd.max",
["var_name"] = "blast_below_gcd",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 2",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["action"] = "evocation",
["interrupt_if"] = "mana.pct>=95&!talent.siphon_storm||(mana.pct>fight_remains*4)&!(fight_remains>10&cooldown.arcane_surge.remains<1)",
["description"] = "Cancel Evo if we have enough mana and don't have Siphon Storm talented or if the fight duration is running out",
["criteria"] = "buff.arcane_surge.down & debuff.touch_of_the_magi.down & ( ( mana.pct < 10 & cooldown.touch_of_the_magi.remains < 20 ) || cooldown.touch_of_the_magi.remains < 15 )",
},
{
["enabled"] = true,
["description"] = "Make a new gem if the encounter is long enough and use it after surge to recoup mana quickly",
["criteria"] = "debuff.touch_of_the_magi.down & buff.arcane_surge.down & cooldown.arcane_surge.remains < 30 & cooldown.arcane_surge.true_remains < fight_remains & ! mana_gem_charges",
["action"] = "conjure_mana_gem",
},
{
["enabled"] = true,
["criteria"] = "debuff.touch_of_the_magi.down & buff.arcane_surge.down & cooldown.arcane_surge.remains < 30 & cooldown.arcane_surge.remains < fight_remains & ! mana_gem_charges",
["action"] = "conjure_mana_gem",
},
{
["enabled"] = true,
["criteria"] = "talent.cascading_power.enabled & buff.clearcasting.stack < 2 & buff.arcane_surge.up",
["action"] = "mana_gem",
},
{
["enabled"] = true,
["criteria"] = "! talent.cascading_power.enabled & prev_gcd.1.arcane_surge",
["action"] = "mana_gem",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.arcane_surge.remains <= ( gcd.max * ( 1 + ( talent.nether_tempest.enabled & talent.arcane_echo.enabled ) ) ) || ( buff.arcane_surge.remains > ( 3 * ( set_bonus.tier30_2pc & ! set_bonus.tier30_4pc ) ) ) || buff.arcane_overload.up ) & cooldown.evocation.remains > 45 & ( ( cooldown.touch_of_the_magi.remains < gcd.max * 4 ) || cooldown.touch_of_the_magi.remains > 20 ) & active_enemies < variable.aoe_target_count || ( cooldown.arcane_surge.remains > 30 & ( cooldown.radiant_spark.ready || dot.radiant_spark.remains || debuff.radiant_spark_vulnerability.up ) & ( cooldown.touch_of_the_magi.remains <= ( gcd.max * 3 ) || debuff.touch_of_the_magi.up ) & active_enemies < variable.aoe_target_count )",
["var_name"] = "cooldown_phase_ready",
["description"] = "Enter cooldown phase when cds are available or coming off cooldown otherwise default to rotation priority",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.cooldown_phase_ready",
["list_name"] = "cooldown_phase",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.radiant_spark.enabled & variable.aoe_spark_phase",
["list_name"] = "aoe_spark_phase",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "debuff.touch_of_the_magi.up & active_enemies >= variable.aoe_target_count",
["list_name"] = "aoe_touch_phase",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= variable.aoe_target_count",
["list_name"] = "aoe_rotation",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "rotation",
},
},
["spark_phase"] = {
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "! ticking & variable.opener & buff.bloodlust.up",
["line_cd"] = "45",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.bloodlust.up & buff.clearcasting.react & buff.clearcasting.stack > 0 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) ) & set_bonus.tier31_4pc",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "variable.opener & cooldown.arcane_surge.ready & buff.bloodlust.up & mana >= variable.opener_min_mana & buff.siphon_storm.remains > 15",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.bloodlust.up & buff.clearcasting.react & buff.clearcasting.stack >= 2 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) )",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "talent.arcane_harmony.enabled & buff.arcane_harmony.stack < 15 & ( ( variable.opener & buff.bloodlust.up ) || buff.clearcasting.react & cooldown.radiant_spark.remains < 5 ) & cooldown.arcane_surge.remains < 30",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["action"] = "radiant_spark",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "( ! variable.surge_last_spark_stack & prev_gcd.4.radiant_spark & cooldown.arcane_surge.remains <= execute_time ) || prev_gcd.5.radiant_spark",
["line_cd"] = "15",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.nether_tempest.enabled & ( ( prev_gcd.4.radiant_spark & ! variable.surge_last_spark_stack ) || prev_gcd.5.radiant_spark ) ) || prev_gcd.1.nether_tempest",
["action"] = "arcane_surge",
},
{
["enabled"] = true,
["criteria"] = "cast_time >= gcd.max & execute_time < debuff.radiant_spark_vulnerability.remains & ( ! talent.arcane_bombardment.enabled || target.health.pct >= 35 ) & ( talent.nether_tempest.enabled & prev_gcd.6.radiant_spark || ! talent.nether_tempest.enabled & prev_gcd.5.radiant_spark ) & ! ( action.arcane_surge.executing & action.arcane_surge.execute_remains < 0.5 & ! variable.surge_last_spark_stack )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "debuff.radiant_spark_vulnerability.stack = 4",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "prev_gcd.1.arcane_barrage & ( action.arcane_barrage.in_flight_remains <= 0.2 || gcd.remains <= 0.2 )",
["action"] = "touch_of_the_magi",
},
{
["action"] = "arcane_blast",
["enabled"] = true,
},
{
["action"] = "arcane_barrage",
["enabled"] = true,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'aoe_rotation' required some automated changes.\nLine 1: Converted 'talent.evocation' to 'talent.evocation.enabled' (1x).\nLine 1: Converted 'talent.arcane_surge' to 'talent.arcane_surge.enabled' (1x).\nLine 1: Converted 'talent.touch_of_the_magi' to 'talent.touch_of_the_magi.enabled' (1x).\nLine 1: Converted 'talent.charged_orb' to 'talent.charged_orb.enabled' (1x).\nLine 2: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\n\nThe import for 'cooldown_phase' required some automated changes.\nLine 2: Converted 'talent.radiant_spark' to 'talent.radiant_spark.enabled' (1x).\nLine 8: Converted 'talent.arcane_harmony' to 'talent.arcane_harmony.enabled' (1x).\nLine 9: Converted 'talent.nether_precision' to 'talent.nether_precision.enabled' (1x).\nLine 11: Converted 'talent.arcane_echo' to 'talent.arcane_echo.enabled' (1x).\nLine 13: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 13: Converted 'talent.arcing_cleave' to 'talent.arcing_cleave.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.siphon_storm' to 'talent.siphon_storm.enabled' (1x).\nLine 4: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 32: Converted 'talent.cascading_power' to 'talent.cascading_power.enabled' (1x).\nLine 33: Converted 'talent.cascading_power' to 'talent.cascading_power.enabled' (1x).\nLine 34: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\nLine 34: Converted 'talent.arcane_echo' to 'talent.arcane_echo.enabled' (1x).\nLine 36: Converted 'talent.radiant_spark' to 'talent.radiant_spark.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 5: Converted 'talent.arcane_harmony' to 'talent.arcane_harmony.enabled' (1x).\nLine 11: Converted 'talent.siphon_storm' to 'talent.siphon_storm.enabled' (1x).\nLine 12: Converted 'talent.siphon_storm' to 'talent.siphon_storm.enabled' (1x).\n\nThe import for 'spark_phase' required some automated changes.\nLine 5: Converted 'talent.arcane_harmony' to 'talent.arcane_harmony.enabled' (1x).\nLine 8: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\nLine 9: Converted 'talent.arcane_bombardment' to 'talent.arcane_bombardment.enabled' (1x).\nLine 9: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\nLine 9: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\n\nThe import for 'rotation' required some automated changes.\nLine 4: Converted 'talent.arcane_bombardment' to 'talent.arcane_bombardment.enabled' (1x).\nLine 5: Converted 'talent.time_anomaly' to 'talent.time_anomaly.enabled' (1x).\nLine 6: Converted 'talent.arcane_bombardment' to 'talent.arcane_bombardment.enabled' (1x).\nLine 8: Converted 'talent.shifting_power' to 'talent.shifting_power.enabled' (1x).\nLine 9: Converted 'talent.evocation' to 'talent.evocation.enabled' (1x).\n\nThe import for 'aoe_spark_phase' required some automated changes.\nLine 5: Converted 'talent.arcane_echo' to 'talent.arcane_echo.enabled' (1x).\nLine 7: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 8: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 9: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 11: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 11: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 12: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\n\nImported 8 action lists.\n",
["profile"] = "actions.precombat+=/arcane_intellect\nactions.precombat+=/arcane_familiar\nactions.precombat+=/conjure_mana_gem\nactions.precombat+=/variable,name=aoe_target_count,op=reset,value=3\n## actions.precombat+=/variable,name=conserve_mana,op=set,value=0\nactions.precombat+=/variable,name=opener_min_mana,op=set,value=75000-(75000*!talent.arcane_harmony)\n# Variable indicates use of a trinket that boosts stats during burst\nactions.precombat+=/variable,name=steroid_trinket_equipped,op=set,value=equipped.gladiators_badge||equipped.irideus_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.ashes_of_the_embersoul||equipped.nymues_unraveling_spindle\n# Variable indicates double on use trinket setups\nactions.precombat+=/variable,name=talon_double_on_use,op=set,value=((equipped.ashes_of_the_embersoul&equipped.timebreaching_talon)||(equipped.irideus_fragment&equipped.timebreaching_talon))\nactions.precombat+=/variable,name=nymues_double_on_use,op=set,value=((equipped.ashes_of_the_embersoul&equipped.nymues_unraveling_spindle)||(equipped.irideus_fragment&equipped.nymues_unraveling_spindle)||(equipped.balefire_branch&equipped.nymues_unraveling_spindle)||(equipped.mirror_of_fractured_tomorrows&equipped.nymues_unraveling_spindle))\nactions.precombat+=/variable,name=ashes_double_on_use,op=set,value=(equipped.irideus_fragment&equipped.ashes_of_the_embersoul)\nactions.precombat+=/mirror_image\n# Edited to avoid wasting Evocation between small pulls if Arcane Surge isn't even ready.  This also accounts for toggles.\nactions.precombat+=/arcane_blast,if=!talent.siphon_storm||cooldown.arcane_surge.remains>15\nactions.precombat+=/evocation,if=talent.siphon_storm\n\n# Executed every time the actor is available.\nactions=counterspell\nactions+=/potion,if=cooldown.arcane_surge.ready\n# This is a backup measure in case you fail to pre-evocate with Siphon Storm.\nactions+=/evocation,if=talent.siphon_storm&time<10&cooldown.arcane_surge.remains<5\nactions+=/time_warp,if=talent.temporal_warp&debuff.sated.up&(cooldown.arcane_surge.ready||boss&fight_remains<=40||(buff.arcane_surge.up&boss&fight_remains<=(cooldown.arcane_surge.remains+14)))\nactions+=/lights_judgment,if=buff.arcane_surge.down&debuff.touch_of_the_magi.down&active_enemies>=2\nactions+=/bag_of_tricks,if=buff.arcane_surge.down&debuff.touch_of_the_magi.down\n# Zerking gets used after surge outside of double lust, but after touch with double lust\nactions+=/berserking,if=(prev_gcd.1.arcane_surge&!(buff.temporal_warp.up&buff.bloodlust.up))||(buff.arcane_surge.up&debuff.touch_of_the_magi.up)\nactions+=/blood_fury,if=prev_gcd.1.arcane_surge\nactions+=/fireblood,if=prev_gcd.1.arcane_surge\nactions+=/ancestral_call,if=prev_gcd.1.arcane_surge\n### PI/Summer after Radiant Spark when cooldowns are coming up, Autumn after Touch of the Magi cd starts\n## actions+=/invoke_external_buff,name=power_infusion,if=((!talent.radiant_spark&prev_gcd.1.arcane_surge)||(talent.radiant_spark&prev_gcd.1.radiant_spark&cooldown.arcane_surge.remains<=(gcd.max*3)))\n## actions+=/invoke_external_buff,name=blessing_of_summer,if=(!talent.radiant_spark&prev_gcd.1.arcane_surge)||(talent.radiant_spark&prev_gcd.1.radiant_spark&cooldown.arcane_surge.remains<=(gcd.max*3))\n## actions+=/invoke_external_buff,name=blessing_of_autumn,if=cooldown.touch_of_the_magi.remains>5\n# Use trinkets in single target after surge without t30, after touch with t30, and before Surge in AOE, except 20-second trinkets which are used with spark without t30.  Non-steroid trinkets are used whenever you don't have cooldowns active and double steroid trinkets are used in order of power level in sims with max ilevel.\nactions+=/use_item,name=irideus_fragment,if=cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest||fight_remains<=20\nactions+=/use_item,name=ashes_of_the_embersoul,if=(prev_gcd.1.arcane_surge&!equipped.belorrelos_the_suncaller&(!variable.ashes_double_on_use||!variable.opener))||fight_remains<=20||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)||(equipped.belorrelos_the_suncaller&(buff.arcane_surge.remains>12||(prev_gcd.1.arcane_surge&variable.opener))&cooldown.evocation.remains>60)\nactions+=/use_item,name=nymues_unraveling_spindle,if=((!variable.opener&cooldown.arcane_surge.remains<=(gcd.max*4)&cooldown.radiant_spark.ready)||(variable.opener&(mana.pct<=10||buff.siphon_storm.remains<19))&(!variable.nymues_double_on_use||!variable.opener))||fight_remains<=24||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)||((equipped.belorrelos_the_suncaller)&cooldown.touch_of_the_magi.remains<(gcd.max*6))\nactions+=/use_item,name=timebreaching_talon,if=((cooldown.arcane_surge.remains<=(gcd.max*4)&cooldown.radiant_spark.remains)&(!variable.talon_double_on_use||!variable.opener))||fight_remains<=20||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)\nactions+=/use_items,if=prev_gcd.1.arcane_surge||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)||boss&fight_remains<=15\nactions+=/use_item,name=voidmenders_shadowgem,if=(buff.siphon_storm.up&buff.siphon_storm.remains<19&(cooldown.arcane_surge.remains<12||buff.arcane_surge.up)&(debuff.touch_of_the_magi.remains>8||cooldown.touch_of_the_magi.remains<8))||fight_remains<=15||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)\n## actions+=/use_item,name=tinker_breath_of_neltharion,if=cooldown.arcane_surge.remains&buff.arcane_surge.down&debuff.touch_of_the_magi.down\nactions+=/use_item,name=belorrelos_the_suncaller,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down||equipped.nymues_unraveling_spindle\nactions+=/use_item,name=beacon_to_the_beyond,if=!variable.steroid_trinket_equipped||(buff.siphon_storm.down&buff.arcane_surge.remains<10)\nactions+=/use_item,name=iceblood_deathsnare,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=desperate_invokers_codex,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=conjured_chillglobe,if=mana.pct>65&(!variable.steroid_trinket_equipped||buff.siphon_storm.down)\nactions+=/use_item,name=darkmoon_deck_rime,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=darkmoon_deck_dance,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=darkmoon_deck_inferno,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=dreambinder_loom_of_the_great_cycle\nactions+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,if=gcd.remains\n## actions+=/variable,name=aoe_spark_phase,op=set,value=1,if=active_enemies>=variable.aoe_target_count&(action.arcane_orb.charges>0||buff.arcane_charge.stack>=3)&cooldown.radiant_spark.ready&cooldown.touch_of_the_magi.remains<=(gcd.max*2)\n## actions+=/variable,name=aoe_spark_phase,op=set,value=0,if=variable.aoe_spark_phase&debuff.radiant_spark_vulnerability.down&dot.radiant_spark.remains<7&cooldown.radiant_spark.remains\n## actions+=/variable,name=spark_phase,op=set,value=1,if=buff.arcane_charge.stack>3&active_enemies<variable.aoe_target_count&cooldown.radiant_spark.ready&cooldown.touch_of_the_magi.remains<=(gcd.max*(7-(3*equipped.balefire_branch)))&(cooldown.arcane_surge.remains<=(gcd.max*5)||cooldown.arcane_surge.remains>40)\n## actions+=/variable,name=spark_phase,op=set,value=0,if=variable.spark_phase&debuff.radiant_spark_vulnerability.down&dot.radiant_spark.remains<7&cooldown.radiant_spark.remains\n## actions+=/variable,name=opener,op=set,if=debuff.touch_of_the_magi.up&variable.opener,value=0\nactions+=/variable,name=blast_below_gcd,op=set,value=action.arcane_blast.cast_time<gcd.max\nactions+=/arcane_barrage,if=boss&fight_remains<2\n# Cancel Evo if we have enough mana and don't have Siphon Storm talented or if the fight duration is running out\nactions+=/evocation,if=buff.arcane_surge.down&debuff.touch_of_the_magi.down&((mana.pct<10&cooldown.touch_of_the_magi.remains<20)||cooldown.touch_of_the_magi.remains<15),interrupt_if=mana.pct>=95&!talent.siphon_storm||(mana.pct>fight_remains*4)&!(fight_remains>10&cooldown.arcane_surge.remains<1)\n# Make a new gem if the encounter is long enough and use it after surge to recoup mana quickly\nactions+=/conjure_mana_gem,if=debuff.touch_of_the_magi.down&buff.arcane_surge.down&cooldown.arcane_surge.remains<30&cooldown.arcane_surge.true_remains<fight_remains&!mana_gem_charges\nactions+=/conjure_mana_gem,if=debuff.touch_of_the_magi.down&buff.arcane_surge.down&cooldown.arcane_surge.remains<30&cooldown.arcane_surge.remains<fight_remains&!mana_gem_charges\nactions+=/use_mana_gem,if=talent.cascading_power&buff.clearcasting.stack<2&buff.arcane_surge.up\nactions+=/use_mana_gem,if=!talent.cascading_power&prev_gcd.1.arcane_surge\n## TODO: Revisit strict flag on these entries.\n# Merged two cooldown_phase entries to reduce CPU consumption.\n# Enter cooldown phase when cds are available or coming off cooldown otherwise default to rotation priority\nactions+=/variable,name=cooldown_phase_ready,value=(cooldown.arcane_surge.remains<=(gcd.max*(1+(talent.nether_tempest&talent.arcane_echo)))||(buff.arcane_surge.remains>(3*(set_bonus.tier30_2pc&!set_bonus.tier30_4pc)))||buff.arcane_overload.up)&cooldown.evocation.remains>45&((cooldown.touch_of_the_magi.remains<gcd.max*4)||cooldown.touch_of_the_magi.remains>20)&active_enemies<variable.aoe_target_count||(cooldown.arcane_surge.remains>30&(cooldown.radiant_spark.ready||dot.radiant_spark.remains||debuff.radiant_spark_vulnerability.up)&(cooldown.touch_of_the_magi.remains<=(gcd.max*3)||debuff.touch_of_the_magi.up)&active_enemies<variable.aoe_target_count)\nactions+=/call_action_list,name=cooldown_phase,if=variable.cooldown_phase_ready\nactions+=/call_action_list,name=aoe_spark_phase,strict=1,if=talent.radiant_spark&variable.aoe_spark_phase\nactions+=/call_action_list,name=aoe_touch_phase,strict=1,if=debuff.touch_of_the_magi.up&active_enemies>=variable.aoe_target_count\nactions+=/call_action_list,name=aoe_rotation,strict=1,if=active_enemies>=variable.aoe_target_count\nactions+=/call_action_list,name=rotation\n\nactions.aoe_rotation+=/shifting_power,if=(!talent.evocation||cooldown.evocation.remains>12)&(!talent.arcane_surge||cooldown.arcane_surge.remains>12)&(!talent.touch_of_the_magi||cooldown.touch_of_the_magi.remains>12)&buff.arcane_surge.down&((!talent.charged_orb&cooldown.arcane_orb.remains>12)||(action.arcane_orb.charges=0||cooldown.arcane_orb.remains>12))\nactions.aoe_rotation+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_surge.down&(active_enemies>6||!talent.orb_barrage)\nactions.aoe_rotation+=/arcane_missiles,if=buff.arcane_artillery.up&(cooldown.touch_of_the_magi.remains+5)>buff.arcane_artillery.remains\nactions.aoe_rotation+=/arcane_barrage,if=(active_enemies<=4||buff.clearcasting.up)&buff.arcane_charge.stack=3\nactions.aoe_rotation+=/arcane_orb,if=buff.arcane_charge.stack=0&cooldown.touch_of_the_magi.remains>18\nactions.aoe_rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack||mana.pct<10\nactions.aoe_rotation+=/arcane_explosion\n\nactions.aoe_spark_phase=cancel_buff,name=presence_of_mind,if=prev_gcd.1.arcane_blast&cooldown.arcane_surge.remains>75\nactions.aoe_spark_phase+=/touch_of_the_magi,use_off_gcd=1,if=prev_gcd.1.arcane_barrage\nactions.aoe_spark_phase+=/radiant_spark\nactions.aoe_spark_phase+=/arcane_orb,if=buff.arcane_charge.stack<3,line_cd=1\nactions.aoe_spark_phase+=/nether_tempest,if=talent.arcane_echo,line_cd=15\nactions.aoe_spark_phase+=/arcane_surge\n### Waits are used to simulate players allowing radiant spark to increment in stacks\n## actions.aoe_spark_phase+=/wait,sec=0.05,if=cooldown.arcane_surge.remains>75&prev_gcd.1.arcane_blast&!talent.presence_of_mind,line_cd=15\n## actions.aoe_spark_phase+=/wait,sec=0.05,if=prev_gcd.1.arcane_surge,line_cd=15\n## actions.aoe_spark_phase+=/wait,sec=0.05,if=cooldown.arcane_surge.remains<75&debuff.radiant_spark_vulnerability.stack=3&!talent.presence_of_mind,line_cd=15\nactions.aoe_spark_phase+=/arcane_barrage,if=cooldown.arcane_surge.remains<75&debuff.radiant_spark_vulnerability.stack=4&!talent.orb_barrage\nactions.aoe_spark_phase+=/arcane_barrage,if=(debuff.radiant_spark_vulnerability.stack=2&cooldown.arcane_surge.remains>75)||(debuff.radiant_spark_vulnerability.stack=1&cooldown.arcane_surge.remains<75)&!talent.orb_barrage\n# Optimize orb barrage procs during spark at the cost of vulnerabilities, except at 5 or fewer targets where you arcane blast on the 3rd spark stack if its up and you have charges\nactions.aoe_spark_phase+=/arcane_barrage,if=(debuff.radiant_spark_vulnerability.stack=1||debuff.radiant_spark_vulnerability.stack=2||(debuff.radiant_spark_vulnerability.stack=3&active_enemies>5)||debuff.radiant_spark_vulnerability.stack=4)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.orb_barrage\nactions.aoe_spark_phase+=/presence_of_mind\nactions.aoe_spark_phase+=/arcane_blast,if=((debuff.radiant_spark_vulnerability.stack=2||debuff.radiant_spark_vulnerability.stack=3)&!talent.orb_barrage)||(debuff.radiant_spark_vulnerability.remains&talent.orb_barrage)\nactions.aoe_spark_phase+=/arcane_barrage,if=(debuff.radiant_spark_vulnerability.stack=4&buff.arcane_surge.up)||(debuff.radiant_spark_vulnerability.stack=3&buff.arcane_surge.down)&!talent.orb_barrage\n\n## actions.aoe_touch_phase+=/variable,name=conserve_mana,op=set,if=debuff.touch_of_the_magi.remains>9,value=1-variable.conserve_mana\nactions.aoe_touch_phase+=/arcane_missiles,if=buff.arcane_artillery.up\nactions.aoe_touch_phase+=/arcane_barrage,if=(active_enemies<=4&buff.arcane_charge.stack=3)||buff.arcane_charge.stack=buff.arcane_charge.max_stack\nactions.aoe_touch_phase+=/arcane_orb,if=buff.arcane_charge.stack<2\nactions.aoe_touch_phase+=/arcane_explosion\n\nactions.cooldown_phase+=/touch_of_the_magi,use_off_gcd=1,if=prev_gcd.1.arcane_barrage\n## actions.cooldown_phase+=/variable,name=conserve_mana,op=set,if=cooldown.radiant_spark.ready,value=(cooldown.arcane_surge.remains<10)\nactions.cooldown_phase+=/shifting_power,if=buff.arcane_surge.down&!talent.radiant_spark\nactions.cooldown_phase+=/arcane_orb,if=(cooldown.radiant_spark.ready||(active_enemies>=2&debuff.radiant_spark_vulnerability.down))&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.cooldown_phase+=/arcane_blast,if=cooldown.radiant_spark.ready&(buff.arcane_charge.stack<2||(buff.arcane_charge.stack<buff.arcane_charge.max_stack&cooldown.arcane_orb.remains>=gcd.max))\nactions.cooldown_phase+=/arcane_missiles,if=variable.opener&buff.clearcasting.react&buff.clearcasting.stack>0&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6))&set_bonus.tier31_4pc,chain=1,interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.cooldown_phase+=/arcane_blast,if=variable.opener&cooldown.arcane_surge.ready&mana>=variable.opener_min_mana&buff.siphon_storm.remains>17&!set_bonus.tier30_4pc\nactions.cooldown_phase+=/arcane_missiles,if=variable.opener&buff.clearcasting.react&buff.clearcasting.stack>=2&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6))&!set_bonus.tier30_4pc,chain=1,interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.cooldown_phase+=/arcane_missiles,if=talent.arcane_harmony&buff.arcane_harmony.stack<15&((variable.opener&buff.bloodlust.up)||buff.clearcasting.react&cooldown.radiant_spark.remains<5)&cooldown.arcane_surge.remains<30,chain=1,interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.cooldown_phase+=/arcane_missiles,if=cooldown.radiant_spark.ready&buff.clearcasting.react&(talent.nether_precision&(buff.nether_precision.down||buff.nether_precision.remains<gcd.max*3))&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6)),interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1,chain=1\nactions.cooldown_phase+=/radiant_spark\nactions.cooldown_phase+=/nether_tempest,if=talent.arcane_echo,line_cd=30\nactions.cooldown_phase+=/arcane_surge\n## actions.cooldown_phase+=/wait,sec=0.05,if=prev_gcd.1.arcane_surge,line_cd=15\nactions.cooldown_phase+=/arcane_barrage,if=prev_gcd.1.arcane_surge||prev_gcd.1.nether_tempest||prev_gcd.1.radiant_spark||(active_enemies>=(4-(2*talent.orb_barrage))&debuff.radiant_spark_vulnerability.stack=4&talent.arcing_cleave)\nactions.cooldown_phase+=/arcane_blast,if=debuff.radiant_spark_vulnerability.stack>0&(debuff.radiant_spark_vulnerability.stack<4||(variable.blast_below_gcd&debuff.radiant_spark_vulnerability.stack=4))\nactions.cooldown_phase+=/presence_of_mind,if=debuff.touch_of_the_magi.remains<=gcd.max\nactions.cooldown_phase+=/arcane_blast,if=buff.presence_of_mind.up\nactions.cooldown_phase+=/arcane_missiles,if=((buff.nether_precision.down&buff.clearcasting.react)||(buff.clearcasting.stack>2&set_bonus.tier31_4pc&debuff.touch_of_the_magi.up))&(debuff.radiant_spark_vulnerability.down||(debuff.radiant_spark_vulnerability.stack=4&prev_gcd.1.arcane_blast)),interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1,chain=1\nactions.cooldown_phase+=/arcane_blast\n\nactions.rotation+=/arcane_orb,if=buff.arcane_charge.stack<3&(buff.bloodlust.down||mana.pct>70)\n## actions.rotation+=/variable,name=conserve_mana,op=set,if=cooldown.arcane_surge.remains>30,value=(cooldown.touch_of_the_magi.remains>10)\n## actions.rotation+=/variable,name=conserve_mana,op=set,if=cooldown.arcane_surge.remains<30,value=0\nactions.rotation+=/shifting_power,if=buff.arcane_surge.down&cooldown.arcane_surge.remains>45&fight_remains>15\nactions.rotation+=/nether_tempest,if=(refreshable||!ticking)&equipped.neltharions_call_to_chaos&fight_remains>=12\nactions.rotation+=/presence_of_mind,if=buff.arcane_charge.stack<3&target.health.pct<35&talent.arcane_bombardment\nactions.rotation+=/arcane_blast,if=talent.time_anomaly&buff.arcane_surge.up&buff.arcane_surge.remains<=6\nactions.rotation+=/arcane_blast,if=buff.presence_of_mind.up&target.health.pct<35&talent.arcane_bombardment&buff.arcane_charge.stack<3\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.stack=buff.clearcasting.max_stack,interrupt_if=!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.rotation+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(buff.temporal_warp.up||mana.pct<10||!talent.shifting_power)&buff.arcane_surge.down&fight_remains>=12\nactions.rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&mana.pct<50&!talent.evocation&fight_remains>20\nactions.rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&mana.pct<70&variable.conserve_mana&buff.bloodlust.up&cooldown.touch_of_the_magi.remains>5&fight_remains>20\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.concentration.up&buff.arcane_charge.stack=buff.arcane_charge.max_stack,interrupt_if=!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.rotation+=/arcane_blast,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.nether_precision.up\nactions.rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&mana.pct<60&variable.conserve_mana&cooldown.touch_of_the_magi.remains>10&cooldown.evocation.remains>40&fight_remains>20\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.nether_precision.down&!variable.opener,interrupt_if=!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.rotation+=/arcane_blast\nactions.rotation+=/arcane_barrage\n\nactions.spark_phase+=/nether_tempest,if=!ticking&variable.opener&buff.bloodlust.up,line_cd=45\nactions.spark_phase+=/arcane_missiles,if=variable.opener&buff.bloodlust.up&buff.clearcasting.react&buff.clearcasting.stack>0&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6))&set_bonus.tier31_4pc,chain=1,interrupt_if=!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.spark_phase+=/arcane_blast,if=variable.opener&cooldown.arcane_surge.ready&buff.bloodlust.up&mana>=variable.opener_min_mana&buff.siphon_storm.remains>15\nactions.spark_phase+=/arcane_missiles,if=variable.opener&buff.bloodlust.up&buff.clearcasting.react&buff.clearcasting.stack>=2&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6)),chain=1,interrupt_if=!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.spark_phase+=/arcane_missiles,if=talent.arcane_harmony&buff.arcane_harmony.stack<15&((variable.opener&buff.bloodlust.up)||buff.clearcasting.react&cooldown.radiant_spark.remains<5)&cooldown.arcane_surge.remains<30,chain=1,interrupt_if=!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.spark_phase+=/radiant_spark\nactions.spark_phase+=/nether_tempest,if=(!variable.surge_last_spark_stack&prev_gcd.4.radiant_spark&cooldown.arcane_surge.remains<=execute_time)||prev_gcd.5.radiant_spark,line_cd=15\nactions.spark_phase+=/arcane_surge,if=(!talent.nether_tempest&((prev_gcd.4.radiant_spark&!variable.surge_last_spark_stack)||prev_gcd.5.radiant_spark))||prev_gcd.1.nether_tempest\nactions.spark_phase+=/arcane_blast,if=cast_time>=gcd&execute_time<debuff.radiant_spark_vulnerability.remains&(!talent.arcane_bombardment||target.health.pct>=35)&(talent.nether_tempest&prev_gcd.6.radiant_spark||!talent.nether_tempest&prev_gcd.5.radiant_spark)&!(action.arcane_surge.executing&action.arcane_surge.execute_remains<0.5&!variable.surge_last_spark_stack)\n### Waits are used to simulate players allowing radiant spark to increment in stacks\n## actions.spark_phase+=/wait,sec=0.05,if=action.arcane_blast.execute_remains<gcd.remains&(talent.nether_tempest&prev_gcd.6.radiant_spark)||(!talent.nether_tempest&prev_gcd.5.radiant_spark),line_cd=15\nactions.spark_phase+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=4\nactions.spark_phase+=/touch_of_the_magi,use_off_gcd=1,if=prev_gcd.1.arcane_barrage&(action.arcane_barrage.in_flight_remains<=0.2||gcd.remains<=0.2)\nactions.spark_phase+=/arcane_blast\nactions.spark_phase+=/arcane_barrage",
["author"] = "SimulationCraft",
},
},
["enabled"] = false,
},
["Default"] = {
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
["x"] = -55.00000381469727,
},
["Cooldowns"] = {
["rel"] = "CENTER",
["y"] = -280.0000305175781,
},
["Primary"] = {
["rel"] = "CENTER",
["y"] = -235.6667022705078,
["x"] = 176.592529296875,
},
["AOE"] = {
["rel"] = "CENTER",
["y"] = -180.0740356445313,
["x"] = 176.0008544921875,
},
["Defensives"] = {
["rel"] = "CENTER",
["x"] = -110.0000076293945,
},
},
["runOnce"] = {
["forceReloadClassDefaultOptions_20220306_252"] = true,
["forceReloadClassDefaultOptions_20220306_71"] = true,
["forceReloadClassDefaultOptions_20220306_254"] = true,
["forceReloadClassDefaultOptions_20220306_259"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["updateMaxRefreshToNewSpecOptions_20220222"] = true,
["forceReloadClassDefaultOptions_20220306_581"] = true,
["forceReloadClassDefaultOptions_20220306_263"] = true,
["forceReloadClassDefaultOptions_20220306_1467"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
["forceReloadClassDefaultOptions_20220306_257"] = true,
["forceReloadClassDefaultOptions_20220306_577"] = true,
["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["forceReloadClassDefaultOptions_20220306_256"] = true,
["forceReloadClassDefaultOptions_20220306_255"] = true,
["forceReloadClassDefaultOptions_20220306_253"] = true,
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceReloadClassDefaultOptions_20220306_260"] = true,
["forceReloadClassDefaultOptions_20220306_268"] = true,
["forceReloadClassDefaultOptions_20220306_72"] = true,
["forceReloadClassDefaultOptions_20220306_251"] = true,
["forceReloadClassDefaultOptions_20220306_262"] = true,
["forceReloadClassDefaultOptions_20220306_1468"] = true,
["forceReloadClassDefaultOptions_20220306_269"] = true,
["forceReloadClassDefaultOptions_20220306_264"] = true,
["forceReloadClassDefaultOptions_20220306_73"] = true,
["forceReloadClassDefaultOptions_20220306_261"] = true,
["forceReloadClassDefaultOptions_20220306_258"] = true,
["forceReloadClassDefaultOptions_20220306_250"] = true,
["forceReloadClassDefaultOptions_20220306_270"] = true,
["forceReloadClassDefaultOptions_20220306_1473"] = true,
},
["specs"] = {
[255] = {
["settings"] = {
["allow_focus_overcap"] = false,
["mark_any"] = false,
["use_harpoon"] = true,
["manual_kill_shot"] = false,
},
},
[262] = {
["settings"] = {
["purge_icd"] = 12,
["hostile_dispel"] = false,
["stack_buffer"] = 1.1,
},
},
[270] = {
["settings"] = {
["roll_movement"] = 5,
["save_faeline"] = false,
},
},
[263] = {
["settings"] = {
["filler_shock"] = true,
["purge_icd"] = 12,
["hostile_dispel"] = false,
["pwave_gcds"] = 4,
["pad_lava_lash"] = true,
["pad_windstrike"] = true,
["funnel_priority"] = false,
["pwave_targets"] = 0,
["project_windfury"] = 0,
},
},
[252] = {
["settings"] = {
["dps_shell"] = false,
},
},
[256] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[72] = {
["settings"] = {
["check_ww_range"] = false,
["shockwave_interrupt"] = true,
["t30_bloodthirst_crit"] = 95,
["heroic_charge"] = false,
},
},
[257] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[577] = {
["settings"] = {
["fel_rush_charges"] = 0,
["retreat_filler"] = false,
["demon_blades_acknowledged"] = false,
["fel_rush_filler"] = true,
["throw_glaive_charges"] = 0,
["retreat_and_return"] = "off",
},
},
[258] = {
["settings"] = {
["pad_void_bolt"] = true,
["sw_death_protection"] = 50,
["pad_ascended_blast"] = true,
},
},
[1468] = {
["settings"] = {
["use_deep_breath"] = true,
["spend_essence"] = false,
["fire_breath_fixed"] = 0,
["use_unravel"] = false,
},
},
[268] = {
["settings"] = {
["purify_stagger_maxhp"] = 6,
["purify_for_celestial"] = true,
["purify_for_niuzao"] = true,
["bof_percent"] = 50,
["eh_percent"] = 65,
["purify_stagger_currhp"] = 12,
},
},
[1467] = {
["settings"] = {
["use_early_chain"] = false,
["use_clipping"] = false,
["fire_breath_fixed"] = 0,
["dragonrage_pad"] = 0.5,
["use_deep_breath"] = true,
["use_unravel"] = false,
["use_verdant_embrace"] = false,
},
},
[259] = {
["settings"] = {
["mfd_points"] = 3,
["envenom_pool_pct"] = 50,
["solo_vanish"] = true,
["priority_rotation"] = false,
["dot_threshold"] = 7,
},
},
[1473] = {
["settings"] = {
["use_early_chain"] = false,
["use_clipping"] = false,
["fire_breath_fixed"] = 0,
["manage_source_of_magic"] = false,
["use_deep_breath"] = true,
["use_unravel"] = false,
["manage_attunement"] = false,
["use_verdant_embrace"] = false,
},
},
[250] = {
["settings"] = {
["rt_damage"] = 30,
["save_blood_shield"] = true,
["vb_damage"] = 50,
["ibf_damage"] = 40,
["death_strike_pool_amount"] = 65,
},
},
[254] = {
["settings"] = {
["mark_any"] = false,
["prevent_hardcasts"] = false,
},
},
[260] = {
["settings"] = {
["no_rtb_in_dance_cto"] = true,
["stealth_padding"] = 0.1,
["crackshot_lock"] = false,
["never_roll_in_window"] = false,
["mfd_points"] = 3,
["use_ld_opener"] = false,
["ambush_anyway"] = false,
["solo_vanish"] = true,
["allow_shadowmeld"] = false,
["sinister_clash"] = -0.5,
["check_blade_rush_range"] = true,
},
},
[71] = {
["settings"] = {
["heroic_charge"] = false,
["shockwave_interrupt"] = true,
},
},
[73] = {
["settings"] = {
["shield_wall_amount"] = 50,
["rallying_cry_amount"] = 50,
["reserve_rage"] = 35,
["rallying_cry_health"] = 50,
["shockwave_interrupt"] = true,
["shield_wall_health"] = 50,
["last_stand_health"] = 50,
["last_stand_offensively"] = false,
["stack_shield_block"] = true,
["stance_weaving"] = false,
["shield_wall_condition"] = false,
["last_stand_amount"] = 50,
["rallying_cry_condition"] = false,
["last_stand_condition"] = false,
["overlap_ignore_pain"] = false,
},
},
[581] = {
["settings"] = {
["frailty_stacks"] = 1,
["brand_charges"] = 0,
["infernal_charges"] = 1,
},
},
[261] = {
["settings"] = {
["rupture_duration"] = 12,
["mfd_points"] = 3,
["priority_rotation"] = false,
["solo_vanish"] = true,
},
},
[269] = {
["settings"] = {
["sef_one_charge"] = false,
["tok_damage"] = 1,
["check_wdp_range"] = false,
["allow_fsk"] = false,
["check_sck_range"] = false,
["use_diffuse"] = false,
},
},
[251] = {
["settings"] = {
["bos_rp"] = 50,
["ams_usage"] = "damage",
},
},
[253] = {
["settings"] = {
["mark_any"] = false,
["check_pet_range"] = false,
["barbed_shot_grace_period"] = 0.5,
["avoid_bw_overlap"] = false,
},
},
},
["packs"] = {
["Windwalker"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/profiles/PreRaids/PR_Monk_Windwalker.simc",
["builtIn"] = true,
["date"] = 20230528,
["spec"] = 269,
["desc"] = "2023-05-28:  Minor updates.\n\n2023-05-24:  SCK, RSK, and FoF usage update.\n\n2023-05-17:  Minor trinket, Skyreach, and ST priority revisions.\n\n2023-05-02:  Update for 10.1.\n\n2023-04-17:  Translate and reimplement Fists of Fury usage/cancellation during Serenity.\n\n2023-04-15:  Update from SimulationCraft.\n\n2023-03-25:  Adjust Touch of Death.\n\n2023-02-21:   Revise to ensure Fists of Fury is only broken when Serenity is active.\n\n2023-02-20:  Major changes to align with latest SimulationCraft priority.\n\n2023-03-08:  Revise Manic Grieftorch usage; added requirement that target is expected to live longer than the cast time to reduce risk of partial cast.",
["lists"] = {
["opener"] = {
{
["enabled"] = true,
["description"] = "Opener",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled & chi.max - chi >= 3",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["action"] = "tiger_palm",
["criteria"] = "combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled & chi = 3",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi = 2",
["action"] = "chi_wave",
},
{
["action"] = "expel_harm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "chi > 1 & chi.max - chi >= 2",
["action"] = "chi_burst",
},
},
["sef_trinkets"] = {
{
["enabled"] = true,
["description"] = "SEF Trinkets",
["criteria"] = "pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled & buff.storm_earth_and_fire.up || boss & fight_remains < 30",
["action"] = "horn_of_valor",
},
{
["enabled"] = true,
["criteria"] = "( boss || target.time_to_die > 1 + cast_time ) & ( trinket.t1.is.manic_grieftorch & ! trinket.t2.has_use_buff || trinket.t2.is.manic_grieftorch & ! trinket.t1.has_use_buff )",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["criteria"] = "( pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled ) & ! buff.storm_earth_and_fire.up || boss & fight_remains < 25",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || action_cooldown <= 60 & buff.storm_earth_and_fire.remains > 10 || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || action_cooldown <= 60 & buff.storm_earth_and_fire.remains > 10 || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["slot"] = "trinket2",
},
},
["cleave"] = {
{
["enabled"] = true,
["action"] = "blackout_kick",
["cycle_targets"] = 1,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
["description"] = "3 Targets",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.bonedust_brew.up & buff.pressure_point.up & set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "! buff.bonedust_brew.up & buff.pressure_point.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 2",
["cycle_targets"] = 1,
},
{
["action"] = "strike_of_the_windlord",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.up & ( talent.shadowboxing_treads.enabled || cooldown.rising_sun_kick.remains > 1 )",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains < 3 & buff.chi_energy.stack > 15",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "cooldown.fists_of_fury.remains > 4 & chi > 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.rising_sun_kick.remains & cooldown.fists_of_fury.remains & chi > 4 & ( talent.storm_earth_and_fire.enabled & ! talent.bonedust_brew.enabled || talent.serenity.enabled )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & talent.shadowboxing_treads.enabled & ! spinning_crane_kick.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( combo_strike & chi > 5 & talent.storm_earth_and_fire.enabled || combo_strike & chi > 4 & talent.serenity.enabled )",
["action"] = "spinning_crane_kick",
},
},
["serenity"] = {
{
["enabled"] = true,
["description"] = "Serenity Priority",
["criteria"] = "buff.serenity.remains < 1",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & ! spinning_crane_kick.max & active_enemies > 4 & talent.shdaowboxing_treads.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & buff.teachings_of_the_monastery.stack = 3 & buff.teachings_of_the_monastery.remains < 1",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "active_enemies = 4 & buff.pressure_point.up & ! talent.bonedust_brew.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "active_enemies = 1",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "active_enemies <= 3 & buff.pressure_point.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.pressure_point.up & set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.invokers_delight.up & active_enemies < 3 & talent.jade_ignition.enabled",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.invokers_delight.up & active_enemies > 4",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["action"] = "fists_of_fury",
["criteria"] = "active_enemies = 2",
["interrupt_if"] = "buff.serenity.up&(buff.invokers_delight.up&(active_enemies<3&talent.jade_ignition||active_enemies>4)||buff.bloodlust.up||active_enemies=2)",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up & active_enemies >= 2",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "active_enemies = 4 & buff.pressure_point.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "active_enemies < 6 & combo_strike & set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & active_enemies >= 3 & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & active_enemies > 1 & active_enemies < 4 & buff.teachings_of_the_monastery.stack = 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up & active_enemies >= 5",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "talent.shadowboxing_treads.enabled & active_enemies >= 3 & combo_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( active_enemies > 3 || active_enemies > 2 & spinning_crane_kick.modifier >= 2.3 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "active_enemies = 2 & cooldown.fists_of_fury.remains > 5",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "active_enemies = 2 & cooldown.fists_of_fury.remains > 5 & talent.shadowboxing_treads.enabled & buff.teachings_of_the_monastery.stack = 1 & combo_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & active_enemies > 1",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up & active_enemies >= 3",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "tiger_palm",
["criteria"] = "talent.teachings_of_the_monastery.enabled & buff.teachings_of_the_monastery.stack < 3",
["cycle_targets"] = 1,
},
},
["cd_serenity"] = {
{
["enabled"] = true,
["description"] = "Serenity Cooldowns",
["action"] = "call_action_list",
["list_name"] = "serenity_trinkets",
},
{
["enabled"] = true,
["criteria"] = "! cooldown.invoke_xuen_the_white_tiger.remains || active_enemies > 4 || cooldown.invoke_xuen_the_white_tiger.remains > 50 || boss & fight_remains <= 30",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_xuen & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 5 & target.time_to_die > 25 || boss & fight_remains < 25",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_xuen & ! talent.bonedust_brew.enabled & ( cooldown.rising_sun_kick.remains < 2 ) & target.time_to_die > 25 || boss & fight_remains < 25",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & ( cooldown.serenity.up || cooldown.serenity.remains > 15 || boss & fight_remains < 30 & fight_remains > 10 ) || boss & fight_remains < 10",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled || boss & fight_remains < 15",
["action"] = "serenity",
},
{
["enabled"] = true,
["action"] = "touch_of_death",
["criteria"] = "combo_strike & ! buff.serenity.up & ( target.health.current < health || buff.hidden_masters_forbidden_touch.up & ( buff.hidden_masters_forbidden_touch.remains < 2 || buff.hidden_masters_forbidden_touch.remains > target.time_to_die ) || target.time_to_die > 60 || debuff.bonedust_brew_debuff.up || boss & fight_remains < 10 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 90 || boss & fight_remains < 10",
["action"] = "touch_of_karma",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "berserking",
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.serenity.up || boss & fight_remains < 20",
["action"] = "bag_of_tricks",
},
},
["st"] = {
{
["enabled"] = true,
["description"] = "1 Target",
["criteria"] = "! buff.pressure_point.up & ! cooldown.rising_sun_kick.remains",
["action"] = "fists_of_fury",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.pressure_point.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.kicks_of_flowing_momentum.up || buff.pressure_point.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["cycle_targets"] = 1,
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 2",
["cycle_targets"] = 1,
},
{
["action"] = "strike_of_the_windlord",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.up & cooldown.rising_sun_kick.remains > 1",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike",
["cycle_targets"] = 1,
},
},
["heavy_aoe"] = {
{
["enabled"] = true,
["description"] = ">4 Targets",
["criteria"] = "combo_strike & buff.dance_of_chiji.up & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 8",
["action"] = "whirling_dragon_punch",
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.bonedust_brew.up & buff.pressure_point.up & set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.pressure_point.up & set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "talent.whirling_dragon_punch.enabled & cooldown.whirling_dragon_punch.remains < 3 & cooldown.fists_of_fury.remains > 3 & ! buff.kicks_of_flowing_momentum.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains < 5 & buff.chi_energy.stack > 10",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 2 ) & spinning_crane_kick.max & buff.bloodlust.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 2 ) & spinning_crane_kick.max & buff.invokers_delight.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike & set_bonus.tier30_2pc & ! buff.bonedust_brew.up & active_enemies < 15 & ! talent.crane_vortex.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike & set_bonus.tier30_2pc & ! buff.bonedust_brew.up & active_enemies < 8",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 4 ) & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["cycle_targets"] = 1,
},
{
["action"] = "strike_of_the_windlord",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "talent.shadowboxing_treads.enabled & combo_strike & ! spinning_crane_kick.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1 & active_enemies = 1 & raid_event.adds.in > 20 || chi.max - chi >= 2",
["action"] = "chi_burst",
},
},
["cd_sef"] = {
{
["enabled"] = true,
["description"] = "Storm, Earth and Fire Cooldowns",
["action"] = "call_action_list",
["list_name"] = "sef_trinkets",
},
{
["enabled"] = true,
["criteria"] = "pet.xuen_the_white_tiger.active",
["action"] = "summon_white_tiger_statue",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_xuen & fight_remains > 25 & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 5 & ( active_enemies < 3 & chi >= 3 || active_enemies >= 3 & chi >= 2 ) || boss & fight_remains < 25",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "! variable.hold_xuen & fight_remains > 25 & ! talent.bonedust_brew.enabled & ( cooldown.rising_sun_kick.remains < 2 ) & chi >= 3",
["action"] = "invoke_xuen",
},
{
["enabled"] = true,
["criteria"] = "talent.bonedust_brew.enabled & ( fight_remains < 30 & cooldown.bonedust_brew.remains < 4 & chi >= 4 || buff.bonedust_brew.up || ! spinning_crane_kick.max & active_enemies >= 3 & cooldown.bonedust_brew.remains <= 2 & chi >= 2 ) & ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > cooldown.storm_earth_and_fire.full_recharge_time )",
["action"] = "storm_earth_and_fire",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.bonedust_brew.up & buff.storm_earth_and_fire.up & buff.storm_earth_and_fire.remains < 11 & spinning_crane_kick.max ) || ( ! buff.bonedust_brew.up & fight_remains < 30 & fight_remains > 10 & spinning_crane_kick.max & chi >= 4 ) || fight_remains < 10 || ( ! debuff.skyreach_exhaustion.up & active_enemies >= 4 & spinning_crane_kick.modifier >= 2 ) || ( pet.xuen_the_white_tiger.active & spinning_crane_kick.max & active_enemies >= 4 )",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & talent.bonedust_brew.enabled & cooldown.bonedust_brew.remains <= 2 & ( fight_remains > 60 & ( cooldown.storm_earth_and_fire.charges > 0 || cooldown.storm_earth_and_fire.remains > 10 ) & ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > 10 || variable.hold_xuen ) || ( ( pet.xuen_the_white_tiger.active || cooldown.invoke_xuen_the_white_tiger.remains > 13 ) & ( cooldown.storm_earth_and_fire.charges > 0 || cooldown.storm_earth_and_fire.remains > 13 || buff.storm_earth_and_fire.up ) ) )",
["action"] = "call_action_list",
["list_name"] = "bdb_setup",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 20 || ( cooldown.storm_earth_and_fire.charges = 2 & cooldown.invoke_xuen_the_white_tiger.remains > cooldown.storm_earth_and_fire.full_recharge_time ) & cooldown.fists_of_fury.remains <= 9 & chi >= 2 & cooldown.whirling_dragon_punch.remains <= 12",
["action"] = "storm_earth_and_fire",
},
{
["enabled"] = true,
["criteria"] = "! talent.bonedust_brew.enabled & ( pet.xuen_the_white_tiger.active || fight_remains > 15 & cooldown.storm_earth_and_fire.full_recharge_time < cooldown.invoke_xuen_the_white_tiger.remains )",
["action"] = "storm_earth_and_fire",
},
{
["enabled"] = true,
["action"] = "touch_of_death",
["criteria"] = "combo_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "touch_of_karma",
["criteria"] = "fight_remains > 90 || pet.xuen_the_white_tiger.active || variable.hold_xuen || boss & fight_remains < 16",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 159 || variable.hold_xuen",
["action"] = "touch_of_karma",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 20",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 15",
["action"] = "berserking",
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 10",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > 30 || variable.hold_xuen || boss & fight_remains < 20",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_earth_and_fire.down",
["action"] = "bag_of_tricks",
},
},
["serenity_trinkets"] = {
{
["enabled"] = true,
["description"] = "Serenity Trinkets",
["criteria"] = "pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled & buff.storm_earth_and_fire.up || boss & fight_remains < 30",
["action"] = "horn_of_valor",
},
{
["enabled"] = true,
["criteria"] = "( boss || target.time_to_die > 1 + cast_time ) & ( trinket.t1.is.manic_grieftorch & ! trinket.t2.has_use_buff || trinket.t2.is.manic_grieftorch & ! trinket.t1.has_use_buff )",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["criteria"] = "( pet.xuen_the_white_tiger.active || ! talent.invoke_xuen_the_white_tiger.enabled ) & ! buff.storm_earth_and_fire.up || boss & fight_remains < 25",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & buff.serenity.remains > 10 || boss & fight_remains < 30",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! trinket.t1.has_use_buff & ! ( trinket.t1.is.horn_of_valor || trinket.t1.is.manic_grieftorch || trinket.t1.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & buff.serenity.remains > 10 || boss & fight_remains < 30",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! trinket.t2.has_use_buff & ! ( trinket.t2.is.horn_of_valor || trinket.t2.is.manic_grieftorch || trinket.t2.is.algethar_puzzle_box ) & ( cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled ) || boss & fight_remains < 30",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "cooldown.invoke_xuen_the_white_tiger.remains > action_cooldown % 120 || action_cooldown <= 60 & variable.hold_xuen || ! talent.invoke_xuen_the_white_tiger.enabled",
["action"] = "use_items",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "spear_hand_strike",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.invoke_xuen_the_white_tiger.enabled || cooldown.invoke_xuen_the_white_tiger.remains > fight_remains || fight_remains - cooldown.invoke_xuen_the_white_tiger.remains < 120 & ( ( talent.serenity.enabled & fight_remains > cooldown.serenity.remains & cooldown.serenity.remains > 10 ) || ( cooldown.storm_earth_and_fire.full_recharge_time < fight_remains & cooldown.storm_earth_and_fire.full_recharge_time > 15 ) || ( cooldown.storm_earth_and_fire.charges = 0 & cooldown.storm_earth_and_fire.remains < fight_remains ) )",
["var_name"] = "hold_xuen",
},
{
["enabled"] = true,
["description"] = "Potion",
["criteria"] = "( buff.serenity.up || buff.storm_earth_and_fire.up ) & ( ! talent.xuen_the_white_tiger.enabled || pet.xuen_the_white_tiger.active ) || boss & fight_remains <= 60",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Build Chi at the start of combat",
["criteria"] = "time < 4 & chi < 5 & ! pet.xuen_the_white_tiger.active & ! talent.serenity.enabled",
["list_name"] = "opener",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use Trinkets (SEF)",
["strict"] = 1,
["criteria"] = "! talent.serenity.enabled",
["list_name"] = "sef_trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.serenity.enabled",
["list_name"] = "serenity_trinkets",
},
{
["enabled"] = true,
["action"] = "faeline_stomp",
["cycle_targets"] = 1,
["criteria"] = "combo_strike & talent.faeline_harmony.enabled & debuff.fae_exposure_damage.remains < 1",
["description"] = "Prioritize Faeline Stomp if playing with Faeline Harmony",
},
{
["enabled"] = true,
["action"] = "tiger_palm",
["cycle_targets"] = 1,
["criteria"] = "! buff.serenity.up & buff.teachings_of_the_monastery.stack < 3 & combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up ) & ( ! talent.invoke_xuen_the_white_tiger.enabled & ! talent.serenity.enabled || ( ! talent.skyreach.enabled || time > 5 || pet.xuen_the_white_tiger.active ) )",
["description"] = "TP if not overcapping Chi or TotM",
},
{
["enabled"] = true,
["action"] = "tiger_palm",
["cycle_targets"] = 1,
["criteria"] = "active_enemies = 1 & buff.serenity.up & pet.xuen_the_white_tiger.active & ! debuff.skyreach_exhaustion.up & combo_strike",
["description"] = "TP during serenity to activate skyreach",
},
{
["enabled"] = true,
["description"] = "Use Chi Burst to reset Faeline Stomp",
["criteria"] = "talent.faeline_stomp.enabled & cooldown.faeline_stomp.remains & ( chi.max - chi >= 1 & active_enemies = 1 || chi.max - chi >= 2 & active_enemies >= 2 ) & ! talent.faeline_harmony.enabled",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use Cooldowns",
["strict"] = 1,
["criteria"] = "! talent.serenity.enabled",
["list_name"] = "cd_sef",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.serenity.enabled",
["list_name"] = "cd_serenity",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Serenity / Default Priority",
["strict"] = 1,
["criteria"] = "buff.serenity.up",
["list_name"] = "serenity",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 4",
["list_name"] = "heavy_aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 4",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 3",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 2",
["list_name"] = "st_cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "fallthru",
},
},
["precombat"] = {
{
["action"] = "summon_white_tiger_statue",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "chi < chi.max",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "! talent.faeline_stomp.enabled",
["action"] = "chi_burst",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["description"] = "4 Targets",
["criteria"] = "combo_strike & buff.dance_of_chiji.up & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.bonedust_brew.up & buff.pressure_point.up & set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "! buff.bonedust_brew.up & buff.pressure_point.up & cooldown.fists_of_fury.remains > 5",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & cooldown.fists_of_fury.remains > 3 & buff.chi_energy.stack > 10",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 4 ) & spinning_crane_kick.max",
["action"] = "spinning_crane_kick",
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["action"] = "strike_of_the_windlord",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & ( cooldown.fists_of_fury.remains > 3 || chi > 4 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike",
["cycle_targets"] = 1,
},
},
["fallthru"] = {
{
["enabled"] = true,
["description"] = "Fallthru",
["criteria"] = "buff.the_emperors_capacitor.stack > 19 & energy.time_to_max > execute_time - 1 & cooldown.rising_sun_kick.remains > execute_time || buff.the_emperors_capacitor.stack > 14 & ( cooldown.serenity.remains < 5 & talent.serenity.enabled || boss & fight_remains < 5 )",
["action"] = "crackling_jade_lightning",
},
{
["enabled"] = true,
["criteria"] = "combo_strike",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["action"] = "tiger_palm",
["criteria"] = "combo_strike & chi.max - chi >= ( 2 + buff.power_strikes.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1 & active_enemies > 2",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1 & active_enemies = 1 & raid_event.adds.in > 20 || chi.max - chi >= 2 & active_enemies >= 2",
["action"] = "chi_burst",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & active_enemies >= 5",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.chi_energy.stack > 30 - 5 * active_enemies & buff.storm_earth_and_fire.down & ( cooldown.rising_sun_kick.remains > 2 & cooldown.fists_of_fury.remains > 2 || cooldown.rising_sun_kick.remains < 3 & cooldown.fists_of_fury.remains > 3 & chi > 3 || cooldown.rising_sun_kick.remains > 3 & cooldown.fists_of_fury.remains < 3 & chi > 4 || chi.max - chi <= 1 & energy.time_to_max < 2 ) || buff.chi_energy.stack > 10 & fight_remains < 7",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "chi.max - chi >= 1",
["action"] = "arcane_torrent",
},
{
["interrupt"] = "1",
["action"] = "flying_serpent_kick",
["enabled"] = true,
},
{
["action"] = "tiger_palm",
["enabled"] = true,
},
},
["st_cleave"] = {
{
["enabled"] = true,
["action"] = "blackout_kick",
["cycle_targets"] = 1,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
["description"] = "2 Targets",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "set_bonus.tier30_2pc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "buff.kicks_of_flowing_momentum.up || buff.pressure_point.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 2",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["action"] = "strike_of_the_windlord",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.up & ( talent.shadowboxing_treads.enabled || cooldown.rising_sun_kick.remains > 1 )",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "! talent.shadowboxing_treads.enabled & cooldown.fists_of_fury.remains > 4 & talent.xuens_battlegear.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & cooldown.rising_sun_kick.remains & cooldown.fists_of_fury.remains & ( ! buff.bonedust_brew.up || spinning_crane_kick.modifier < 1.5 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & spinning_crane_kick.modifier >= 2.7",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( combo_strike & chi > 5 & talent.storm_earth_and_fire.enabled || combo_strike & chi > 4 & talent.serenity.enabled )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["cycle_targets"] = 1,
["criteria"] = "buff.teachings_of_the_monastery.stack = 3 & talent.shadowboxing_treads.enabled",
["description"] = "ST Priority (<3 Targets)",
},
{
["enabled"] = true,
["criteria"] = "combo_strike & buff.dance_of_chiji.up",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.thunderfist.enabled",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "active_enemies = 1 & buff.kicks_of_flowing_momentum.up || buff.pressure_point.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 2 & talent.shadowboxing_treads.enabled",
["cycle_targets"] = 1,
},
{
["action"] = "strike_of_the_windlord",
["enabled"] = true,
},
{
["action"] = "fists_of_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.up & ( talent.shadowboxing_treads.enabled & active_enemies > 1 || cooldown.rising_sun_kick.remains > 1 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "whirling_dragon_punch",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "buff.teachings_of_the_monastery.stack = 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "( active_enemies = 1 || ! talent.shadowboxing_treads.enabled ) & cooldown.fists_of_fury.remains > 4 & talent.xuens_battlegear.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & active_enemies = 2 & cooldown.rising_sun_kick.remains & cooldown.fists_of_fury.remains & ( ! buff.bonedust_brew.up || spinning_crane_kick.modifier < 1.5 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up & active_enemies = 2",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up & combo_strike & ( active_enemies > 1 || spinning_crane_kick.modifier >= 2.7 )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["cycle_targets"] = 1,
},
{
["action"] = "whirling_dragon_punch",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.rushing_jade_wind.up",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike",
["cycle_targets"] = 1,
},
},
["bdb_setup"] = {
{
["enabled"] = true,
["description"] = "Bonedust Brew Setup",
["criteria"] = "talent.thunderfist.enabled & active_enemies > 3",
["action"] = "strike_of_the_windlord",
},
{
["enabled"] = true,
["criteria"] = "spinning_crane_kick.max & chi >= 4",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["action"] = "tiger_palm",
["criteria"] = "combo_strike & chi.max - chi >= 2 & buff.storm_earth_and_fire.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "blackout_kick",
["criteria"] = "combo_strike & ! talent.whirling_dragon_punch.enabled & ! spinning_crane_kick.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "combo_strike & chi >= 5 & talent.whirling_dragon_punch.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rising_sun_kick",
["criteria"] = "combo_strike & active_enemies >= 2 & talent.whirling_dragon_punch.enabled",
["cycle_targets"] = 1,
},
},
},
["version"] = 20230528,
["warnings"] = "The import for 'serenity_trinkets' required some automated changes.\nLine 1: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 2: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 4: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 4: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 5: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 5: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 5: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 5: Converted operations in '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 6: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 6: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 7: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 7: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 7: Converted operations in '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 8: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 8: Converted operations in 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled' to 'cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled'.\n\nThe import for 'cleave' required some automated changes.\nLine 1: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 3: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 11: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 16: Converted 'talent.storm_earth_and_fire' to 'talent.storm_earth_and_fire.enabled' (1x).\nLine 16: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 16: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 19: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 20: Converted 'talent.storm_earth_and_fire' to 'talent.storm_earth_and_fire.enabled' (1x).\nLine 20: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'serenity' required some automated changes.\nLine 2: Converted 'talent.shdaowboxing_treads' to 'talent.shdaowboxing_treads.enabled' (1x).\nLine 4: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 9: Converted 'talent.jade_ignition' to 'talent.jade_ignition.enabled' (1x).\nLine 13: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 20: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 24: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 32: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'cd_serenity' required some automated changes.\nLine 3: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 4: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 6: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 3: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\n\nThe import for 'heavy_aoe' required some automated changes.\nLine 2: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 7: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 11: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\nLine 15: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 15: Converted 'talent.crane_vortex' to 'talent.crane_vortex.enabled' (1x).\nLine 16: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 21: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\n\nThe import for 'cd_sef' required some automated changes.\nLine 3: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 4: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 5: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 7: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\nLine 9: Converted 'talent.bonedust_brew' to 'talent.bonedust_brew.enabled' (1x).\n\nThe import for 'sef_trinkets' required some automated changes.\nLine 1: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 2: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 4: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 4: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 4: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 4: Converted operations in 'trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to 'trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.is.horn_of_valor' to 'trinket.t1.is.horn_of_valor' (1x).\nLine 5: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 5: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 5: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 5: Converted operations in '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t1.has_use_buff&!(trinket.t1.is.horn_of_valor||trinket.t1.is.manic_grieftorch||trinket.t1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 6: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 6: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 6: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 6: Converted operations in 'trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to 'trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||action_cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\nLine 7: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.is.horn_of_valor' to 'trinket.t2.is.horn_of_valor' (1x).\nLine 7: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 7: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 7: Converted operations in '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30' to '!trinket.t2.has_use_buff&!(trinket.t2.is.horn_of_valor||trinket.t2.is.manic_grieftorch||trinket.t2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>action_cooldown%120||action_cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger.enabled)||boss&fight_remains<30'.\n\nThe import for 'st_cleave' required some automated changes.\nLine 1: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 2: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 9: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 12: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 12: Converted 'talent.xuens_battlegear' to 'talent.xuens_battlegear.enabled' (1x).\nLine 18: Converted 'talent.storm_earth_and_fire' to 'talent.storm_earth_and_fire.enabled' (1x).\nLine 18: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 19: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 21: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 23: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 26: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 29: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\nLine 29: Converted 'talent.xuens_battlegear' to 'talent.xuens_battlegear.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.faeline_stomp' to 'talent.faeline_stomp.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 2: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 7: Converted 'talent.shadowboxing_treads' to 'talent.shadowboxing_treads.enabled' (1x).\n\nThe import for 'fallthru' required some automated changes.\nLine 1: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 2: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 3: Converted 'talent.xuen_the_white_tiger' to 'talent.xuen_the_white_tiger.enabled' (1x).\nLine 4: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 5: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 6: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 7: Converted 'talent.faeline_harmony' to 'talent.faeline_harmony.enabled' (1x).\nLine 8: Converted 'talent.invoke_xuen_the_white_tiger' to 'talent.invoke_xuen_the_white_tiger.enabled' (1x).\nLine 8: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 8: Converted 'talent.skyreach' to 'talent.skyreach.enabled' (1x).\nLine 10: Converted 'talent.faeline_stomp' to 'talent.faeline_stomp.enabled' (1x).\nLine 10: Converted 'talent.faeline_harmony' to 'talent.faeline_harmony.enabled' (1x).\nLine 11: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\nLine 12: Converted 'talent.serenity' to 'talent.serenity.enabled' (1x).\n\nThe import for 'bdb_setup' required some automated changes.\nLine 1: Converted 'talent.thunderfist' to 'talent.thunderfist.enabled' (1x).\nLine 4: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\nLine 5: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\nLine 6: Converted 'talent.whirling_dragon_punch' to 'talent.whirling_dragon_punch.enabled' (1x).\n\nImported 15 action lists.\n",
["profile"] = "actions.precombat+=/summon_white_tiger_statue\nactions.precombat+=/expel_harm,if=chi<chi.max\nactions.precombat+=/chi_burst,if=!talent.faeline_stomp\nactions.precombat+=/chi_wave\n\n# Executed every time the actor is available.\nactions=spear_hand_strike\nactions+=/variable,name=hold_xuen,op=set,value=!talent.invoke_xuen_the_white_tiger||cooldown.invoke_xuen_the_white_tiger.remains>fight_remains||fight_remains-cooldown.invoke_xuen_the_white_tiger.remains<120&((talent.serenity&fight_remains>cooldown.serenity.remains&cooldown.serenity.remains>10)||(cooldown.storm_earth_and_fire.full_recharge_time<fight_remains&cooldown.storm_earth_and_fire.full_recharge_time>15)||(cooldown.storm_earth_and_fire.charges=0&cooldown.storm_earth_and_fire.remains<fight_remains))\n# Potion\nactions+=/potion,if=(buff.serenity.up||buff.storm_earth_and_fire.up)&(!talent.xuen_the_white_tiger||pet.xuen_the_white_tiger.active)||boss&fight_remains<=60\n# Build Chi at the start of combat\nactions+=/call_action_list,name=opener,if=time<4&chi<5&!pet.xuen_the_white_tiger.active&!talent.serenity\n# Use Trinkets (SEF)\nactions+=/call_action_list,name=sef_trinkets,strict=1,if=!talent.serenity\nactions+=/call_action_list,name=serenity_trinkets,strict=1,if=talent.serenity\n# Prioritize Faeline Stomp if playing with Faeline Harmony\nactions+=/faeline_stomp,cycle_targets=1,if=combo_strike&talent.faeline_harmony&debuff.fae_exposure_damage.remains<1\n# TP if not overcapping Chi or TotM\nactions+=/tiger_palm,cycle_targets=1,if=!buff.serenity.up&buff.teachings_of_the_monastery.stack<3&combo_strike&chi.max-chi>=(2+buff.power_strikes.up)&(!talent.invoke_xuen_the_white_tiger&!talent.serenity||(!talent.skyreach||time>5||pet.xuen_the_white_tiger.active))\n# TP during serenity to activate skyreach\nactions+=/tiger_palm,cycle_targets=1,if=active_enemies=1&buff.serenity.up&pet.xuen_the_white_tiger.active&!debuff.skyreach_exhaustion.up&combo_strike\n# Use Chi Burst to reset Faeline Stomp\nactions+=/chi_burst,if=talent.faeline_stomp&cooldown.faeline_stomp.remains&(chi.max-chi>=1&active_enemies=1||chi.max-chi>=2&active_enemies>=2)&!talent.faeline_harmony\n# Use Cooldowns\nactions+=/call_action_list,name=cd_sef,strict=1,if=!talent.serenity\nactions+=/call_action_list,name=cd_serenity,strict=1,if=talent.serenity\n# Serenity / Default Priority\nactions+=/call_action_list,name=serenity,strict=1,if=buff.serenity.up\nactions+=/call_action_list,name=heavy_aoe,strict=1,if=active_enemies>4\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies=4\nactions+=/call_action_list,name=cleave,strict=1,if=active_enemies=3\nactions+=/call_action_list,name=st_cleave,strict=1,if=active_enemies=2\nactions+=/call_action_list,name=st,strict=1,if=active_enemies=1\nactions+=/call_action_list,name=fallthru\n\n# >4 Targets\nactions.heavy_aoe+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&spinning_crane_kick.max\nactions.heavy_aoe+=/strike_of_the_windlord,if=talent.thunderfist\nactions.heavy_aoe+=/whirling_dragon_punch,if=active_enemies>8\nactions.heavy_aoe+=/fists_of_fury\nactions.heavy_aoe+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&spinning_crane_kick.max\nactions.heavy_aoe+=/rising_sun_kick,cycle_targets=1,if=buff.bonedust_brew.up&buff.pressure_point.up&set_bonus.tier30_2pc\nactions.heavy_aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.heavy_aoe+=/whirling_dragon_punch,if=active_enemies>=5\nactions.heavy_aoe+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&set_bonus.tier30_2pc\nactions.heavy_aoe+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.heavy_aoe+=/rising_sun_kick,cycle_targets=1,if=talent.whirling_dragon_punch&cooldown.whirling_dragon_punch.remains<3&cooldown.fists_of_fury.remains>3&!buff.kicks_of_flowing_momentum.up\nactions.heavy_aoe+=/spinning_crane_kick,if=combo_strike&cooldown.fists_of_fury.remains<5&buff.chi_energy.stack>10\nactions.heavy_aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>2)&spinning_crane_kick.max&buff.bloodlust.up\nactions.heavy_aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>2)&spinning_crane_kick.max&buff.invokers_delight.up\nactions.heavy_aoe+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike&set_bonus.tier30_2pc&!buff.bonedust_brew.up&active_enemies<15&!talent.crane_vortex\nactions.heavy_aoe+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike&set_bonus.tier30_2pc&!buff.bonedust_brew.up&active_enemies<8\nactions.heavy_aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>4)&spinning_crane_kick.max\nactions.heavy_aoe+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.heavy_aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.heavy_aoe+=/strike_of_the_windlord\nactions.heavy_aoe+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&combo_strike&!spinning_crane_kick.max\nactions.heavy_aoe+=/chi_burst,if=chi.max-chi>=1&active_enemies=1&raid_event.adds.in>20||chi.max-chi>=2\n\n# 4 Targets\nactions.aoe+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&spinning_crane_kick.max\nactions.aoe+=/strike_of_the_windlord,if=talent.thunderfist\nactions.aoe+=/fists_of_fury\nactions.aoe+=/rising_sun_kick,cycle_targets=1,if=buff.bonedust_brew.up&buff.pressure_point.up&set_bonus.tier30_2pc\nactions.aoe+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&spinning_crane_kick.max\nactions.aoe+=/rising_sun_kick,cycle_targets=1,if=!buff.bonedust_brew.up&buff.pressure_point.up&cooldown.fists_of_fury.remains>5\nactions.aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.aoe+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.aoe+=/spinning_crane_kick,if=combo_strike&cooldown.fists_of_fury.remains>3&buff.chi_energy.stack>10\nactions.aoe+=/blackout_kick,cycle_targets=1,if=combo_strike&set_bonus.tier30_2pc\nactions.aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>4)&spinning_crane_kick.max\nactions.aoe+=/whirling_dragon_punch\nactions.aoe+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.aoe+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.aoe+=/strike_of_the_windlord\nactions.aoe+=/spinning_crane_kick,if=combo_strike&(cooldown.fists_of_fury.remains>3||chi>4)\nactions.aoe+=/blackout_kick,cycle_targets=1,if=combo_strike\n\n# 3 Targets\nactions.cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.cleave+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.cleave+=/strike_of_the_windlord,if=talent.thunderfist\nactions.cleave+=/fists_of_fury\nactions.cleave+=/rising_sun_kick,cycle_targets=1,if=buff.bonedust_brew.up&buff.pressure_point.up&set_bonus.tier30_2pc\nactions.cleave+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike\nactions.cleave+=/rising_sun_kick,cycle_targets=1,if=!buff.bonedust_brew.up&buff.pressure_point.up\nactions.cleave+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2\nactions.cleave+=/strike_of_the_windlord\nactions.cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(talent.shadowboxing_treads||cooldown.rising_sun_kick.remains>1)\nactions.cleave+=/whirling_dragon_punch\nactions.cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.cleave+=/spinning_crane_kick,if=combo_strike&cooldown.fists_of_fury.remains<3&buff.chi_energy.stack>15\nactions.cleave+=/rising_sun_kick,cycle_targets=1,if=cooldown.fists_of_fury.remains>4&chi>3\nactions.cleave+=/spinning_crane_kick,if=combo_strike&cooldown.rising_sun_kick.remains&cooldown.fists_of_fury.remains&chi>4&(talent.storm_earth_and_fire&!talent.bonedust_brew||talent.serenity)\nactions.cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.fists_of_fury.remains\nactions.cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&talent.shadowboxing_treads&!spinning_crane_kick.max\nactions.cleave+=/spinning_crane_kick,if=(combo_strike&chi>5&talent.storm_earth_and_fire||combo_strike&chi>4&talent.serenity)\n\n# 2 Targets\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.st_cleave+=/strike_of_the_windlord,if=talent.thunderfist\nactions.st_cleave+=/fists_of_fury\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=buff.kicks_of_flowing_momentum.up||buff.pressure_point.up\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2\nactions.st_cleave+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.st_cleave+=/strike_of_the_windlord\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(talent.shadowboxing_treads||cooldown.rising_sun_kick.remains>1)\nactions.st_cleave+=/whirling_dragon_punch\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=!talent.shadowboxing_treads&cooldown.fists_of_fury.remains>4&talent.xuens_battlegear\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&cooldown.rising_sun_kick.remains&cooldown.fists_of_fury.remains&(!buff.bonedust_brew.up||spinning_crane_kick.modifier<1.5)\nactions.st_cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.st_cleave+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&spinning_crane_kick.modifier>=2.7\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.st_cleave+=/spinning_crane_kick,if=(combo_strike&chi>5&talent.storm_earth_and_fire||combo_strike&chi>4&talent.serenity)\n\n# 1 Target\nactions.st+=/fists_of_fury,if=!buff.pressure_point.up&!cooldown.rising_sun_kick.remains\nactions.st+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up\nactions.st+=/strike_of_the_windlord,if=talent.thunderfist\nactions.st+=/rising_sun_kick,cycle_targets=1,if=buff.kicks_of_flowing_momentum.up||buff.pressure_point.up\nactions.st+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.st+=/fists_of_fury\nactions.st+=/rising_sun_kick\nactions.st+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2\nactions.st+=/strike_of_the_windlord\nactions.st+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.st+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&cooldown.rising_sun_kick.remains>1\nactions.st+=/rising_sun_kick,cycle_targets=1\nactions.st+=/whirling_dragon_punch\nactions.st+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.st+=/blackout_kick,cycle_targets=1,if=combo_strike\n\n# Bonedust Brew Setup\nactions.bdb_setup+=/strike_of_the_windlord,if=talent.thunderfist&active_enemies>3\nactions.bdb_setup+=/bonedust_brew,if=spinning_crane_kick.max&chi>=4\nactions.bdb_setup+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=2&buff.storm_earth_and_fire.up\nactions.bdb_setup+=/blackout_kick,cycle_targets=1,if=combo_strike&!talent.whirling_dragon_punch&!spinning_crane_kick.max\nactions.bdb_setup+=/rising_sun_kick,cycle_targets=1,if=combo_strike&chi>=5&talent.whirling_dragon_punch\nactions.bdb_setup+=/rising_sun_kick,cycle_targets=1,if=combo_strike&active_enemies>=2&talent.whirling_dragon_punch\n\n# Storm, Earth and Fire Cooldowns\nactions.cd_sef+=/call_action_list,name=sef_trinkets\nactions.cd_sef+=/summon_white_tiger_statue,if=pet.xuen_the_white_tiger.active\nactions.cd_sef+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&fight_remains>25&talent.bonedust_brew&cooldown.bonedust_brew.remains<=5&(active_enemies<3&chi>=3||active_enemies>=3&chi>=2)||boss&fight_remains<25\nactions.cd_sef+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&fight_remains>25&!talent.bonedust_brew&(cooldown.rising_sun_kick.remains<2)&chi>=3\nactions.cd_sef+=/storm_earth_and_fire,if=talent.bonedust_brew&(fight_remains<30&cooldown.bonedust_brew.remains<4&chi>=4||buff.bonedust_brew.up||!spinning_crane_kick.max&active_enemies>=3&cooldown.bonedust_brew.remains<=2&chi>=2)&(pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>cooldown.storm_earth_and_fire.full_recharge_time)\nactions.cd_sef+=/bonedust_brew,if=(!buff.bonedust_brew.up&buff.storm_earth_and_fire.up&buff.storm_earth_and_fire.remains<11&spinning_crane_kick.max)||(!buff.bonedust_brew.up&fight_remains<30&fight_remains>10&spinning_crane_kick.max&chi>=4)||fight_remains<10||(!debuff.skyreach_exhaustion.up&active_enemies>=4&spinning_crane_kick.modifier>=2)||(pet.xuen_the_white_tiger.active&spinning_crane_kick.max&active_enemies>=4)\nactions.cd_sef+=/call_action_list,name=bdb_setup,if=!buff.bonedust_brew.up&talent.bonedust_brew&cooldown.bonedust_brew.remains<=2&(fight_remains>60&(cooldown.storm_earth_and_fire.charges>0||cooldown.storm_earth_and_fire.remains>10)&(pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>10||variable.hold_xuen)||((pet.xuen_the_white_tiger.active||cooldown.invoke_xuen_the_white_tiger.remains>13)&(cooldown.storm_earth_and_fire.charges>0||cooldown.storm_earth_and_fire.remains>13||buff.storm_earth_and_fire.up)))\nactions.cd_sef+=/storm_earth_and_fire,if=boss&fight_remains<20||(cooldown.storm_earth_and_fire.charges=2&cooldown.invoke_xuen_the_white_tiger.remains>cooldown.storm_earth_and_fire.full_recharge_time)&cooldown.fists_of_fury.remains<=9&chi>=2&cooldown.whirling_dragon_punch.remains<=12\nactions.cd_sef+=/storm_earth_and_fire,if=!talent.bonedust_brew&(pet.xuen_the_white_tiger.active||fight_remains>15&cooldown.storm_earth_and_fire.full_recharge_time<cooldown.invoke_xuen_the_white_tiger.remains)\n## actions.cd_sef+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&target.health<health\n## actions.cd_sef+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&(target.time_to_die>60||debuff.bonedust_brew_debuff.up||fight_remains<10)\nactions.cd_sef+=/touch_of_death,cycle_targets=1,if=combo_strike\nactions.cd_sef+=/touch_of_karma,cycle_targets=1,if=fight_remains>90||pet.xuen_the_white_tiger.active||variable.hold_xuen||boss&fight_remains<16\nactions.cd_sef+=/touch_of_karma,if=fight_remains>159||variable.hold_xuen\nactions.cd_sef+=/blood_fury,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<20\nactions.cd_sef+=/berserking,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<15\nactions.cd_sef+=/lights_judgment\nactions.cd_sef+=/fireblood,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<10\nactions.cd_sef+=/ancestral_call,if=cooldown.invoke_xuen_the_white_tiger.remains>30||variable.hold_xuen||boss&fight_remains<20\nactions.cd_sef+=/bag_of_tricks,if=buff.storm_earth_and_fire.down\n\n# Serenity Cooldowns\nactions.cd_serenity+=/call_action_list,name=serenity_trinkets\nactions.cd_serenity+=/summon_white_tiger_statue,if=!cooldown.invoke_xuen_the_white_tiger.remains||active_enemies>4||cooldown.invoke_xuen_the_white_tiger.remains>50||boss&fight_remains<=30\nactions.cd_serenity+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&talent.bonedust_brew&cooldown.bonedust_brew.remains<=5&target.time_to_die>25||boss&fight_remains<25\nactions.cd_serenity+=/invoke_xuen_the_white_tiger,if=!variable.hold_xuen&!talent.bonedust_brew&(cooldown.rising_sun_kick.remains<2)&target.time_to_die>25||boss&fight_remains<25\nactions.cd_serenity+=/bonedust_brew,if=!buff.bonedust_brew.up&(cooldown.serenity.up||cooldown.serenity.remains>15||boss&fight_remains<30&fight_remains>10)||boss&fight_remains<10\nactions.cd_serenity+=/serenity,if=pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger||boss&fight_remains<15\n## actions.cd_serenity+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&target.health<health\n## actions.cd_serenity+=/touch_of_death,cycle_targets=1,if=!boss&combo_strike&(target.time_to_die>60||debuff.bonedust_brew_debuff.up||fight_remains<10)\nactions.cd_serenity+=/touch_of_death,cycle_targets=1,if=combo_strike&!buff.serenity.up&(target.health.current<health||buff.hidden_masters_forbidden_touch.up&(buff.hidden_masters_forbidden_touch.remains<2||buff.hidden_masters_forbidden_touch.remains>target.time_to_die)||target.time_to_die>60||debuff.bonedust_brew_debuff.up||boss&fight_remains<10)\nactions.cd_serenity+=/touch_of_karma,if=fight_remains>90||boss&fight_remains<10\nactions.cd_serenity+=/blood_fury,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/berserking,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/lights_judgment\nactions.cd_serenity+=/fireblood,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/ancestral_call,if=buff.serenity.up||boss&fight_remains<20\nactions.cd_serenity+=/bag_of_tricks,if=buff.serenity.up||boss&fight_remains<20\n\n# Fallthru\nactions.fallthru+=/crackling_jade_lightning,if=buff.the_emperors_capacitor.stack>19&energy.time_to_max>execute_time-1&cooldown.rising_sun_kick.remains>execute_time||buff.the_emperors_capacitor.stack>14&(cooldown.serenity.remains<5&talent.serenity||boss&fight_remains<5)\nactions.fallthru+=/faeline_stomp,if=combo_strike\nactions.fallthru+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=(2+buff.power_strikes.up)\nactions.fallthru+=/expel_harm,if=chi.max-chi>=1&active_enemies>2\nactions.fallthru+=/chi_burst,if=chi.max-chi>=1&active_enemies=1&raid_event.adds.in>20||chi.max-chi>=2&active_enemies>=2\nactions.fallthru+=/chi_wave\nactions.fallthru+=/expel_harm,if=chi.max-chi>=1\nactions.fallthru+=/blackout_kick,cycle_targets=1,if=combo_strike&active_enemies>=5\nactions.fallthru+=/spinning_crane_kick,if=combo_strike&buff.chi_energy.stack>30-5*active_enemies&buff.storm_earth_and_fire.down&(cooldown.rising_sun_kick.remains>2&cooldown.fists_of_fury.remains>2||cooldown.rising_sun_kick.remains<3&cooldown.fists_of_fury.remains>3&chi>3||cooldown.rising_sun_kick.remains>3&cooldown.fists_of_fury.remains<3&chi>4||chi.max-chi<=1&energy.time_to_max<2)||buff.chi_energy.stack>10&fight_remains<7\nactions.fallthru+=/arcane_torrent,if=chi.max-chi>=1\nactions.fallthru+=/flying_serpent_kick,interrupt=1\nactions.fallthru+=/tiger_palm\n\n# Opener\nactions.opener+=/summon_white_tiger_statue\nactions.opener+=/expel_harm,if=talent.chi_burst.enabled&chi.max-chi>=3\nactions.opener+=/tiger_palm,cycle_targets=1,if=combo_strike&chi.max-chi>=(2+buff.power_strikes.up)\nactions.opener+=/expel_harm,if=talent.chi_burst.enabled&chi=3\nactions.opener+=/chi_wave,if=chi.max-chi=2\nactions.opener+=/expel_harm\nactions.opener+=/chi_burst,if=chi>1&chi.max-chi>=2\n\n# Serenity Priority\nactions.serenity+=/fists_of_fury,if=buff.serenity.remains<1\nactions.serenity+=/blackout_kick,cycle_targets=1,if=combo_strike&!spinning_crane_kick.max&active_enemies>4&talent.shdaowboxing_treads\nactions.serenity+=/blackout_kick,cycle_targets=1,if=combo_strike&buff.teachings_of_the_monastery.stack=3&buff.teachings_of_the_monastery.remains<1\nactions.serenity+=/rising_sun_kick,cycle_targets=1,if=active_enemies=4&buff.pressure_point.up&!talent.bonedust_brew\nactions.serenity+=/rising_sun_kick,cycle_targets=1,if=active_enemies=1\nactions.serenity+=/rising_sun_kick,cycle_targets=1,if=active_enemies<=3&buff.pressure_point.up\nactions.serenity+=/rising_sun_kick,cycle_targets=1,if=buff.pressure_point.up&set_bonus.tier30_2pc\nactions.serenity+=/rising_sun_kick,cycle_targets=1,if=set_bonus.tier30_2pc\nactions.serenity+=/fists_of_fury,if=buff.invokers_delight.up&active_enemies<3&talent.jade_ignition\nactions.serenity+=/fists_of_fury,if=buff.bloodlust.up\nactions.serenity+=/fists_of_fury,if=buff.invokers_delight.up&active_enemies>4\nactions.serenity+=/fists_of_fury,if=active_enemies=2,interrupt_if=buff.serenity.up&(buff.invokers_delight.up&(active_enemies<3&talent.jade_ignition||active_enemies>4)||buff.bloodlust.up||active_enemies=2)\nactions.serenity+=/strike_of_the_windlord,if=talent.thunderfist\nactions.serenity+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up&active_enemies>=2\nactions.serenity+=/rising_sun_kick,cycle_targets=1,if=active_enemies=4&buff.pressure_point.up\nactions.serenity+=/blackout_kick,cycle_targets=1,if=active_enemies<6&combo_strike&set_bonus.tier30_2pc\nactions.serenity+=/spinning_crane_kick,if=combo_strike&active_enemies>=3&spinning_crane_kick.max\nactions.serenity+=/blackout_kick,cycle_targets=1,if=combo_strike&active_enemies>1&active_enemies<4&buff.teachings_of_the_monastery.stack=2\nactions.serenity+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up&active_enemies>=5\nactions.serenity+=/blackout_kick,cycle_targets=1,if=talent.shadowboxing_treads&active_enemies>=3&combo_strike\nactions.serenity+=/spinning_crane_kick,if=combo_strike&(active_enemies>3||active_enemies>2&spinning_crane_kick.modifier>=2.3)\nactions.serenity+=/strike_of_the_windlord,if=active_enemies>=3\nactions.serenity+=/rising_sun_kick,cycle_targets=1,if=active_enemies=2&cooldown.fists_of_fury.remains>5\nactions.serenity+=/blackout_kick,cycle_targets=1,if=active_enemies=2&cooldown.fists_of_fury.remains>5&talent.shadowboxing_treads&buff.teachings_of_the_monastery.stack=1&combo_strike\nactions.serenity+=/spinning_crane_kick,if=combo_strike&active_enemies>1\nactions.serenity+=/whirling_dragon_punch,if=active_enemies>1\nactions.serenity+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up&active_enemies>=3\nactions.serenity+=/rising_sun_kick,cycle_targets=1\nactions.serenity+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.serenity+=/blackout_kick,cycle_targets=1,if=combo_strike\nactions.serenity+=/whirling_dragon_punch\nactions.serenity+=/tiger_palm,cycle_targets=1,if=talent.teachings_of_the_monastery&buff.teachings_of_the_monastery.stack<3\n\n# ST Priority (<3 Targets)\nactions.st_cleave=blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3&talent.shadowboxing_treads\nactions.st_cleave+=/spinning_crane_kick,if=combo_strike&buff.dance_of_chiji.up\nactions.st_cleave+=/strike_of_the_windlord,if=talent.thunderfist\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=active_enemies=1&buff.kicks_of_flowing_momentum.up||buff.pressure_point.up\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=2&talent.shadowboxing_treads\nactions.st_cleave+=/strike_of_the_windlord\nactions.st_cleave+=/fists_of_fury\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.up&(talent.shadowboxing_treads&active_enemies>1||cooldown.rising_sun_kick.remains>1)\nactions.st_cleave+=/whirling_dragon_punch,if=active_enemies=2\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=buff.teachings_of_the_monastery.stack=3\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1,if=(active_enemies=1||!talent.shadowboxing_treads)&cooldown.fists_of_fury.remains>4&talent.xuens_battlegear\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike&active_enemies=2&cooldown.rising_sun_kick.remains&cooldown.fists_of_fury.remains&(!buff.bonedust_brew.up||spinning_crane_kick.modifier<1.5)\nactions.st_cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up&active_enemies=2\nactions.st_cleave+=/spinning_crane_kick,if=buff.bonedust_brew.up&combo_strike&(active_enemies>1||spinning_crane_kick.modifier>=2.7)\nactions.st_cleave+=/rising_sun_kick,cycle_targets=1\nactions.st_cleave+=/whirling_dragon_punch\nactions.st_cleave+=/rushing_jade_wind,if=!buff.rushing_jade_wind.up\nactions.st_cleave+=/blackout_kick,cycle_targets=1,if=combo_strike\n\n# SEF Trinkets\nactions.sef_trinkets+=/horn_of_valor,if=pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger&buff.storm_earth_and_fire.up||boss&fight_remains<30\nactions.sef_trinkets+=/manic_grieftorch,if=(boss||target.time_to_die>1+cast_time)&(trinket.1.is.manic_grieftorch&!trinket.2.has_use_buff||trinket.2.is.manic_grieftorch&!trinket.1.has_use_buff)\nactions.sef_trinkets+=/algethar_puzzle_box,if=(pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger)&!buff.storm_earth_and_fire.up||boss&fight_remains<25\nactions.sef_trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.sef_trinkets+=/use_item,slot=trinket1,if=!trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.sef_trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||cooldown<=60&buff.storm_earth_and_fire.remains>10||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.sef_trinkets+=/use_item,slot=trinket2,if=!trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\n\n# Serenity Trinkets\nactions.serenity_trinkets+=/horn_of_valor,if=pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger&buff.storm_earth_and_fire.up||boss&fight_remains<30\nactions.serenity_trinkets+=/manic_grieftorch,if=(boss||target.time_to_die>1+cast_time)&(trinket.1.is.manic_grieftorch&!trinket.2.has_use_buff||trinket.2.is.manic_grieftorch&!trinket.1.has_use_buff)\nactions.serenity_trinkets+=/algethar_puzzle_box,if=(pet.xuen_the_white_tiger.active||!talent.invoke_xuen_the_white_tiger)&!buff.storm_earth_and_fire.up||boss&fight_remains<25\nactions.serenity_trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&buff.serenity.remains>10||boss&fight_remains<30\nactions.serenity_trinkets+=/use_item,slot=trinket1,if=!trinket.1.has_use_buff&!(trinket.1.is.horn_of_valor||trinket.1.is.manic_grieftorch||trinket.1.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.serenity_trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&buff.serenity.remains>10||boss&fight_remains<30\nactions.serenity_trinkets+=/use_item,slot=trinket2,if=!trinket.2.has_use_buff&!(trinket.2.is.horn_of_valor||trinket.2.is.manic_grieftorch||trinket.2.is.algethar_puzzle_box)&(cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger)||boss&fight_remains<30\nactions.serenity_trinkets+=/use_items,if=cooldown.invoke_xuen_the_white_tiger.remains>cooldown%%120||cooldown<=60&variable.hold_xuen||!talent.invoke_xuen_the_white_tiger",
["author"] = "SimC",
},
["Beast Mastery"] = {
["source"] = "# https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240110,
["author"] = "SimC",
["desc"] = "2023-12-28 & 2024-01-10: Minor sim update.\n\n2023-12-10 & 12: Remove Scent of Blood checks on Barbed Shot.\n\n2023-12-06: Minor sim update; Hunter's Mark setting.\n\n2023-11-16: Hunter's Mark.\n\n2023-11-07: Further 10.2 updates.\n\n2023-11-05: Patch 10.2.\n\n2023-06-24: Use Kill Command in Cleave with Kill Cleave talent.\n\n2023-04-26: Update from SimulationCraft.\n\n2023-03-28:  Racial cooldown usage adjusted for Call of the Wild vs. Bestial Wrath.",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "counter_shot",
},
{
["action"] = "tranquilizing_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( settings.mark_any || target.is_boss ) & active_dot.hunters_mark = 0 & target.health_pct > 80 & ( group || target.time_to_pct_80 > gcd.max * 20 )",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! raid_event.adds.exists & ( ( ! trinket.t1.has_use_buff || trinket.t1.cooldown.remains > 30 || trinket.t1.cooldown.ready || trinket.t1.cooldown.remains + cooldown.call_of_the_wild.duration + 15 > fight_remains ) & ( ! trinket.t2.has_use_buff || trinket.t2.cooldown.remains > 30 || trinket.t2.cooldown.ready || trinket.t2.cooldown.remains + cooldown.call_of_the_wild.duration + 15 > fight_remains ) || fight_remains < cooldown.call_of_the_wild.duration + 20 ) || raid_event.adds.exists & ( ! raid_event.adds.up & ( raid_event.adds.duration + raid_event.adds.in < 25 || raid_event.adds.in > 60 ) || raid_event.adds.up & raid_event.adds.remains > 10 ) || boss & fight_remains < 25",
["var_name"] = "cotw_ready",
["description"] = "Determine if it is a good time to use Call of the Wild. Raid event optimization takes priority so usage is saved for multiple targets as long as it won't delay over half its duration. Otherwise allow for small delays to line up with buff effect trinkets if it won't lose a usage.",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 2 || ! talent.beast_cleave.enabled & active_enemies < 3",
["list_name"] = "st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2 || talent.beast_cleave.enabled & active_enemies > 1",
["list_name"] = "cleave",
},
},
["precombat"] = {
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["action"] = "bottled_flayedwing_toxin",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! trinket.t2.has_cooldown || trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff || ! trinket.t1.is.mirror_of_fractured_tomorrows & ( trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) ) || ! trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) )",
["var_name"] = "trinket_1_stronger",
["description"] = "Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! variable.trinket_1_stronger",
["var_name"] = "trinket_2_stronger",
},
{
["enabled"] = true,
["precast_time"] = "1.5",
["action"] = "steel_trap",
["criteria"] = "! talent.wailing_arrow.enabled & talent.steel_trap.enabled",
},
},
["trinkets"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.call_of_the_wild.enabled & ( prev_gcd.1.call_of_the_wild ) || ! talent.call_of_the_wild.enabled & ( buff.bestial_wrath.up || cooldown.bestial_wrath.remains_guess < 5 )",
["var_name"] = "sync_ready",
["description"] = "True if effects that are desirable to sync a trinket buff with are ready.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.call_of_the_wild.enabled & buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up",
["var_name"] = "sync_active",
["description"] = "True if effecs that are desirable to sync a trinket buff with are active.",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Time until the effects that are desirable to sync a trinket buff with will be ready.",
["var_name"] = "sync_remains",
["value"] = "cooldown.bestial_wrath.remains_guess",
["action"] = "variable",
["value_else"] = "cooldown.call_of_the_wild.remains",
["criteria"] = "! talent.call_of_the_wild.enabled",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.",
["criteria"] = "trinket.t1.has_use_buff & ( variable.sync_ready & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_1_stronger & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 & fight_remains > trinket.t1.cooldown.duration + 20 || trinket.t2.has_use_buff & trinket.t2.cooldown.remains > variable.sync_remains - 15 & trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_2_stronger & ( trinket.t2.cooldown.remains & ( trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t2.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 || trinket.t1.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t1.cooldown.duration > fight_remains ) ) ) || trinket.t2.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t2.cooldown.duration / 3 ) ) ) || ! trinket.t1.has_use_buff & ( trinket.t1.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t2.has_use_buff & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || trinket.t2.has_use_buff & ( ! variable.sync_active & variable.sync_remains > 20 || trinket.t2.cooldown.remains > 20 ) ) || fight_remains < 25 & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t2.has_use_buff & ( variable.sync_ready & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_2_stronger & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 & fight_remains > trinket.t2.cooldown.duration + 20 || trinket.t1.has_use_buff & trinket.t1.cooldown.remains > variable.sync_remains - 15 & trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_1_stronger & ( trinket.t1.cooldown.remains & ( trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t1.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 || trinket.t2.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t2.cooldown.duration > fight_remains ) ) ) || trinket.t1.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t1.cooldown.duration / 3 ) ) ) || ! trinket.t2.has_use_buff & ( trinket.t2.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t1.has_use_buff & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || trinket.t1.has_use_buff & ( ! variable.sync_active & variable.sync_remains > 20 || trinket.t1.cooldown.remains > 20 ) ) || fight_remains < 25 & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains )",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 13",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 16",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 16",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 9",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || ! talent.call_of_the_wild.enabled & buff.bestial_wrath.up || boss & fight_remains < 31",
["action"] = "potion",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || buff.frenzy.stack < 3 & ( cooldown.bestial_wrath.ready || cooldown.call_of_the_wild.ready )",
["action"] = "barbed_shot",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.wild_instincts.enabled & full_recharge_time < gcd.max & talent.alpha_predator.enabled",
["action"] = "kill_command",
},
{
["enabled"] = true,
["criteria"] = "! talent.wild_instincts.enabled & variable.cotw_ready",
["action"] = "call_of_the_wild",
},
{
["action"] = "stampede",
["enabled"] = true,
},
{
["action"] = "bloodshed",
["enabled"] = true,
},
{
["action"] = "bestial_wrath",
["enabled"] = true,
},
{
["action"] = "death_chakram",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "variable.cotw_ready",
["action"] = "call_of_the_wild",
},
{
["action"] = "kill_command",
["enabled"] = true,
},
{
["action"] = "a_murder_of_crows",
["enabled"] = true,
},
{
["action"] = "steel_trap",
["enabled"] = true,
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.wild_call.enabled & charges_fractional > 1.4 || buff.call_of_the_wild.up || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains || ( cooldown.bestial_wrath.remains < 12 + gcd.max ) || talent.savagery.enabled || fight_remains < 9",
["action"] = "barbed_shot",
["cycle_targets"] = 1,
},
{
["action"] = "dire_beast",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > duration",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["action"] = "kill_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "lights_judgment",
},
{
["action"] = "cobra_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.frenzy.remains > execute_time || target.time_to_die < 5",
["action"] = "wailing_arrow",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "( focus + focus.regen + 15 ) < focus.max",
["action"] = "arcane_torrent",
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "debuff.latent_poison.stack > 9 & ( buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || cooldown.bestial_wrath.remains < 12 + gcd.max || buff.frenzy.stack < 3 & ( cooldown.bestial_wrath.ready || cooldown.call_of_the_wild.ready ) || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains )",
["action"] = "barbed_shot",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.frenzy.up & buff.frenzy.remains <= gcd.max + 0.25 || cooldown.bestial_wrath.remains < 12 + gcd.max || buff.frenzy.stack < 3 & ( cooldown.bestial_wrath.ready || cooldown.call_of_the_wild.ready ) || full_recharge_time < gcd.max & cooldown.bestial_wrath.remains",
["action"] = "barbed_shot",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.beast_cleave.remains < 0.25 + gcd.max & ( ! talent.bloody_frenzy.enabled || cooldown.call_of_the_wild.remains )",
["action"] = "multishot",
},
{
["action"] = "bestial_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "variable.cotw_ready",
["action"] = "call_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "talent.kill_cleave.enabled",
["action"] = "kill_command",
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["action"] = "stampede",
["enabled"] = true,
},
{
["action"] = "bloodshed",
["enabled"] = true,
},
{
["action"] = "death_chakram",
["enabled"] = true,
},
{
["action"] = "steel_trap",
["enabled"] = true,
},
{
["action"] = "a_murder_of_crows",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.latent_poison.stack > 9 & ( buff.call_of_the_wild.up || fight_remains < 9 || talent.wild_call.enabled & charges_fractional > 1.2 || talent.savagery.enabled )",
["action"] = "barbed_shot",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.call_of_the_wild.up || fight_remains < 9 || talent.wild_call.enabled & charges_fractional > 1.2 || talent.savagery.enabled",
["action"] = "barbed_shot",
["cycle_targets"] = 1,
},
{
["action"] = "kill_command",
["enabled"] = true,
},
{
["action"] = "dire_beast",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > duration",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.frenzy.remains > execute_time",
["action"] = "barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.beast_cleave.remains < gcd.max * 2",
["action"] = "multishot",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || target.time_to_die < 5",
["action"] = "lights_judgment",
},
{
["action"] = "kill_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "focus.time_to_max < gcd.max * 2",
["action"] = "cobra_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.frenzy.remains > execute_time || boss & fight_remains < 5",
["action"] = "wailing_arrow",
},
{
["enabled"] = true,
["criteria"] = "buff.bestial_wrath.down || boss & fight_remains < 5",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "( focus + focus.regen + 30 ) < focus.max",
["action"] = "arcane_torrent",
},
},
},
["version"] = 20240110,
["warnings"] = "The import for 'default' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'talent.beast_cleave' to 'talent.beast_cleave.enabled' (1x).\nLine 8: Converted 'talent.beast_cleave' to 'talent.beast_cleave.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'talent.wailing_arrow' to 'talent.wailing_arrow.enabled' (1x).\nLine 5: Converted 'talent.steel_trap' to 'talent.steel_trap.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 2: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 2: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 3: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted operations in 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration%3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration%3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration%3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t2.cooldown.remains>20))||fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)' to 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration/3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration/3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration/3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t2.cooldown.remains>20))||fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted operations in 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration%3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration%3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration%3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t1.cooldown.remains>20))||fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)' to 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration/3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration/3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration/3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.t1.cooldown.remains>20))||fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)'.\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 2: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 3: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 4: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\nLine 5: Converted 'talent.call_of_the_wild' to 'talent.call_of_the_wild.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 1: Converted 'pet.main.buff.frenzy.up' to 'buff.frenzy.up' (1x).\nLine 1: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 1: Converted 'pet.main.buff.frenzy.stack' to 'buff.frenzy.stack' (1x).\nLine 2: Converted 'talent.wild_instincts' to 'talent.wild_instincts.enabled' (1x).\nLine 2: Converted 'talent.alpha_predator' to 'talent.alpha_predator.enabled' (1x).\nLine 3: Converted 'talent.wild_instincts' to 'talent.wild_instincts.enabled' (1x).\nLine 13: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 13: Converted 'talent.savagery' to 'talent.savagery.enabled' (1x).\nLine 19: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 1: Converted 'pet.main.buff.frenzy.up' to 'buff.frenzy.up' (1x).\nLine 1: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 1: Converted 'pet.main.buff.frenzy.stack' to 'buff.frenzy.stack' (1x).\nLine 2: Converted 'pet.main.buff.frenzy.up' to 'buff.frenzy.up' (1x).\nLine 2: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 2: Converted 'pet.main.buff.frenzy.stack' to 'buff.frenzy.stack' (1x).\nLine 3: Converted 'pet.main.buff.beast_cleave.remains' to 'buff.beast_cleave.remains' (1x).\nLine 3: Converted 'talent.bloody_frenzy' to 'talent.bloody_frenzy.enabled' (1x).\nLine 6: Converted 'talent.kill_cleave' to 'talent.kill_cleave.enabled' (1x).\nLine 13: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 13: Converted 'talent.savagery' to 'talent.savagery.enabled' (1x).\nLine 14: Converted 'talent.wild_call' to 'talent.wild_call.enabled' (1x).\nLine 14: Converted 'talent.savagery' to 'talent.savagery.enabled' (1x).\nLine 18: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\nLine 19: Converted 'pet.main.buff.beast_cleave.remains' to 'buff.beast_cleave.remains' (1x).\nLine 23: Converted 'pet.main.buff.frenzy.remains' to 'buff.frenzy.remains' (1x).\n\nImported 6 action lists.\n",
["spec"] = 253,
["profile"] = "actions.precombat+=/summon_pet\nactions.precombat+=/bottled_flayedwing_toxin\n# Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.\nactions.precombat+=/variable,name=trinket_1_stronger,value=!trinket.2.has_cooldown||trinket.1.has_use_buff&(!trinket.2.has_use_buff||!trinket.1.is.mirror_of_fractured_tomorrows&(trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))||!trinket.1.has_use_buff&(!trinket.2.has_use_buff&(trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))\nactions.precombat+=/variable,name=trinket_2_stronger,value=!variable.trinket_1_stronger\nactions.precombat+=/steel_trap,precast_time=1.5,if=!talent.wailing_arrow&talent.steel_trap\n\n# Executed every time the actor is available.\nactions=counter_shot\nactions+=/tranquilizing_shot\nactions+=/hunters_mark,if=(settings.mark_any||target.is_boss)&active_dot.hunters_mark=0&target.health_pct>80&(group||target.time_to_pct_80>gcd.max*20)\n# Determine if it is a good time to use Call of the Wild. Raid event optimization takes priority so usage is saved for multiple targets as long as it won't delay over half its duration. Otherwise allow for small delays to line up with buff effect trinkets if it won't lose a usage.\nactions+=/variable,name=cotw_ready,value=!raid_event.adds.exists&((!trinket.1.has_use_buff||trinket.1.cooldown.remains>30||trinket.1.cooldown.ready||trinket.1.cooldown.remains+cooldown.call_of_the_wild.duration+15>fight_remains)&(!trinket.2.has_use_buff||trinket.2.cooldown.remains>30||trinket.2.cooldown.ready||trinket.2.cooldown.remains+cooldown.call_of_the_wild.duration+15>fight_remains)||fight_remains<cooldown.call_of_the_wild.duration+20)||raid_event.adds.exists&(!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10)||boss&fight_remains<25\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<2||!talent.beast_cleave&active_enemies<3\nactions+=/call_action_list,name=cleave,strict=1,if=active_enemies>2||talent.beast_cleave&active_enemies>1\n\n## Call for Power Infusion when Bestial Wrath is running, or is close to coming off cooldown (PI lasts 20 seconds and Bestial Wrath lasts 15, so 30 seconds when accounting for Barbed Shot reduction of Bestial Wrath is a good approximate fit).\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&(buff.bestial_wrath.up||cooldown.bestial_wrath.remains<30)||fight_remains<16\nactions.cds+=/berserking,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<13\nactions.cds+=/blood_fury,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<16\nactions.cds+=/ancestral_call,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<16\nactions.cds+=/fireblood,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<9\nactions.cds+=/potion,if=buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up||boss&fight_remains<31\n\nactions.st+=/barbed_shot,cycle_targets=1,if=pet.main.buff.frenzy.up&pet.main.buff.frenzy.remains<=gcd+0.25||pet.main.buff.frenzy.stack<3&(cooldown.bestial_wrath.ready||cooldown.call_of_the_wild.ready)\nactions.st+=/kill_command,if=!talent.wild_instincts&full_recharge_time<gcd&talent.alpha_predator\nactions.st+=/call_of_the_wild,if=!talent.wild_instincts&variable.cotw_ready\nactions.st+=/stampede\nactions.st+=/bloodshed\nactions.st+=/bestial_wrath\nactions.st+=/death_chakram\nactions.st+=/call_of_the_wild,if=variable.cotw_ready\nactions.st+=/kill_command\nactions.st+=/a_murder_of_crows\nactions.st+=/steel_trap\nactions.st+=/explosive_shot\nactions.st+=/barbed_shot,cycle_targets=1,if=talent.wild_call&charges_fractional>1.4||buff.call_of_the_wild.up||full_recharge_time<gcd&cooldown.bestial_wrath.remains||(cooldown.bestial_wrath.remains<12+gcd)||talent.savagery||fight_remains<9\nactions.st+=/dire_beast\nactions.st+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>duration\nactions.st+=/kill_shot\nactions.st+=/lights_judgment,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.st+=/cobra_shot\nactions.st+=/wailing_arrow,if=pet.main.buff.frenzy.remains>execute_time||target.time_to_die<5\nactions.st+=/bag_of_tricks,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.st+=/arcane_pulse,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.st+=/arcane_torrent,if=(focus+focus.regen+15)<focus.max\n\nactions.cleave+=/barbed_shot,cycle_targets=1,if=debuff.latent_poison.stack>9&(pet.main.buff.frenzy.up&pet.main.buff.frenzy.remains<=gcd+0.25||cooldown.bestial_wrath.remains<12+gcd||pet.main.buff.frenzy.stack<3&(cooldown.bestial_wrath.ready||cooldown.call_of_the_wild.ready)||full_recharge_time<gcd&cooldown.bestial_wrath.remains)\nactions.cleave+=/barbed_shot,cycle_targets=1,if=pet.main.buff.frenzy.up&pet.main.buff.frenzy.remains<=gcd+0.25||cooldown.bestial_wrath.remains<12+gcd||pet.main.buff.frenzy.stack<3&(cooldown.bestial_wrath.ready||cooldown.call_of_the_wild.ready)||full_recharge_time<gcd&cooldown.bestial_wrath.remains\nactions.cleave+=/multishot,if=pet.main.buff.beast_cleave.remains<0.25+gcd&(!talent.bloody_frenzy||cooldown.call_of_the_wild.remains)\nactions.cleave+=/bestial_wrath\nactions.cleave+=/call_of_the_wild,if=variable.cotw_ready\nactions.cleave+=/kill_command,if=talent.kill_cleave\nactions.cleave+=/explosive_shot\nactions.cleave+=/stampede\nactions.cleave+=/bloodshed\nactions.cleave+=/death_chakram\nactions.cleave+=/steel_trap\nactions.cleave+=/a_murder_of_crows\nactions.cleave+=/barbed_shot,cycle_targets=1,if=debuff.latent_poison.stack>9&(buff.call_of_the_wild.up||fight_remains<9||talent.wild_call&charges_fractional>1.2||talent.savagery)\nactions.cleave+=/barbed_shot,cycle_targets=1,if=buff.call_of_the_wild.up||fight_remains<9||talent.wild_call&charges_fractional>1.2||talent.savagery\nactions.cleave+=/kill_command\nactions.cleave+=/dire_beast\nactions.cleave+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>duration\nactions.cleave+=/barrage,if=pet.main.buff.frenzy.remains>execute_time\nactions.cleave+=/multishot,if=pet.main.buff.beast_cleave.remains<gcd*2\nactions.cleave+=/lights_judgment,if=buff.bestial_wrath.down||target.time_to_die<5\nactions.cleave+=/kill_shot\nactions.cleave+=/cobra_shot,if=focus.time_to_max<gcd*2\nactions.cleave+=/wailing_arrow,if=pet.main.buff.frenzy.remains>execute_time||boss&fight_remains<5\nactions.cleave+=/bag_of_tricks,if=buff.bestial_wrath.down||boss&fight_remains<5\nactions.cleave+=/arcane_torrent,if=(focus+focus.regen+30)<focus.max\n\n# True if effects that are desirable to sync a trinket buff with are ready.\nactions.trinkets+=/variable,name=sync_ready,value=talent.call_of_the_wild&(prev_gcd.1.call_of_the_wild)||!talent.call_of_the_wild&(buff.bestial_wrath.up||cooldown.bestial_wrath.remains_guess<5)\n# True if effecs that are desirable to sync a trinket buff with are active.\nactions.trinkets+=/variable,name=sync_active,value=talent.call_of_the_wild&buff.call_of_the_wild.up||!talent.call_of_the_wild&buff.bestial_wrath.up\n# Time until the effects that are desirable to sync a trinket buff with will be ready.\nactions.trinkets+=/variable,name=sync_remains,op=setif,value=cooldown.bestial_wrath.remains_guess,value_else=cooldown.call_of_the_wild.remains,condition=!talent.call_of_the_wild\n# Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=trinket.1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.1.cooldown.duration%3&fight_remains>trinket.1.cooldown.duration+20||trinket.2.has_use_buff&trinket.2.cooldown.remains>variable.sync_remains-15&trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.2.cooldown.remains&(trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.1.cooldown.duration%3||trinket.1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.1.cooldown.duration>fight_remains)))||trinket.2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.2.cooldown.duration%3)))||!trinket.1.has_use_buff&(trinket.1.cast_time=0||!variable.sync_active)&(!trinket.2.has_use_buff&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||trinket.2.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.2.cooldown.remains>20))||fight_remains<25&(variable.trinket_1_stronger||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=trinket.2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.2.cooldown.duration%3&fight_remains>trinket.2.cooldown.duration+20||trinket.1.has_use_buff&trinket.1.cooldown.remains>variable.sync_remains-15&trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.1.cooldown.remains&(trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.2.cooldown.duration%3||trinket.2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.2.cooldown.duration>fight_remains)))||trinket.1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.1.cooldown.duration%3)))||!trinket.2.has_use_buff&(trinket.2.cast_time=0||!variable.sync_active)&(!trinket.1.has_use_buff&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||trinket.1.has_use_buff&(!variable.sync_active&variable.sync_remains>20||trinket.1.cooldown.remains>20))||fight_remains<25&(variable.trinket_2_stronger||trinket.1.cooldown.remains)",
},
["Vengeance"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240121,
["spec"] = 581,
["desc"] = "2024-01-21: Tweaks to Shear, Meta, etc.\n\n2023-11-23: QoL improvements x2.\n\n2023-11-14: More sim updates.\n\n2023-11-13: Sim updates. \n\n2023-11-07: Further 10.2 updates.\n\n2023-11-05: Patch 10.2.\n\n2023-08-26: Update to simplified priority list.\n\n2023-08-07: Beacon/DFB usage adjusted.\n\n2023-07-31: SimC adjusted Meta and Beacon usage.\n\n2023-07-20: Add missing single-target lines and updates.\n\n2023-07-19: Import updates from SimC and flatten priority (don't break out into action lists that don't improve efficiency).\n\n2023-07-16: Implement Vengeance overhaul from SimC.\n\n2023-07-11: Patch 10.1.5 update.\n\n2023-05-20: Added trinkets.",
["profile"] = "actions.precombat+=/sigil_of_flame,line_cd=5\nactions.precombat+=/immolation_aura\n\n# Check if trinkets have buff effects\nactions+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)\nactions+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)\nactions+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Don't spend fury when fel dev soon to maximize fel dev uptime\nactions+=/variable,name=dont_cleave,value=(cooldown.fel_devastation.remains<=(action.soul_cleave.execute_time+gcd.remains))&fury<80\n# Check if fiery demise is active and spread\nactions+=/variable,name=fd_ready,value=talent.fiery_brand&talent.fiery_demise&active_dot.fiery_brand_dot>0\n# Don't spend fury when fel dev soon to maximize fel dev uptime\nactions+=/variable,name=dont_cleave,value=(cooldown.fel_devastation.remains<=(action.soul_cleave.execute_time+gcd.remains))&fury<80\n# When to use Spirit Bomb with Focused Cleave\nactions+=/variable,name=single_target,value=spell_targets.spirit_bomb=1\nactions+=/variable,name=small_aoe,value=spell_targets.spirit_bomb>=2&spell_targets.spirit_bomb<=5\nactions+=/variable,name=big_aoe,value=spell_targets.spirit_bomb>=6\nactions+=/variable,name=can_spb,op=setif,condition=variable.fd_ready,value=(variable.single_target&soul_fragments>=5)||(variable.small_aoe&soul_fragments>=4)||(variable.big_aoe&soul_fragments>=3),value_else=(variable.small_aoe&soul_fragments>=5)||(variable.big_aoe&soul_fragments>=4)\n\nactions+=/disrupt\nactions+=/consume_magic\nactions+=/infernal_strike\nactions+=/demon_spikes,use_off_gcd=1,if=!buff.demon_spikes.up&tanking\nactions+=/metamorphosis,use_off_gcd=1,if=!buff.metamorphosis.up&(!talent.demonic||cooldown.fel_devastation.remains>12)\nactions+=/potion\n## actions+=/call_action_list,name=externals\nactions+=/use_items\nactions+=/call_action_list,name=fiery_demise,strict=1,if=talent.fiery_brand&talent.fiery_demise&active_dot.fiery_brand_dot>0\nactions+=/call_action_list,name=maintenance\nactions+=/run_action_list,name=single_target,strict=1,if=variable.single_target\nactions+=/run_action_list,name=small_aoe,strict=1,if=variable.small_aoe\nactions+=/run_action_list,name=big_aoe,strict=1,if=variable.big_aoe\n\n## actions.externals+=/invoke_external_buff,name=symbol_of_hope\n## actions.externals+=/invoke_external_buff,name=power_infusion\n\n# Fiery demise window\nactions.fiery_demise+=/immolation_aura\nactions.fiery_demise+=/sigil_of_flame,if=talent.ascending_flame&!talent.illuminated_sigils||!sigil_placed&active_dot.sigil_of_flame=0\nactions.fiery_demise+=/felblade,if=(!talent.spirit_bomb||(cooldown.fel_devastation.remains<=(execute_time+gcd.remains)))&fury<50\nactions.fiery_demise+=/fel_devastation\nactions.fiery_demise+=/soul_carver,if=soul_fragments<3\nactions.fiery_demise+=/the_hunt\nactions.fiery_demise+=/elysian_decree,line_cd=1.85,if=fury>=40\nactions.fiery_demise+=/spirit_bomb,if=variable.can_spb\n\nactions.filler+=/sigil_of_chains,if=talent.cycle_of_binding.enabled&talent.sigil_of_chains.enabled\nactions.filler+=/sigil_of_misery,if=talent.cycle_of_binding.enabled&talent.sigil_of_misery.enabled\nactions.filler+=/sigil_of_silence,if=talent.cycle_of_binding.enabled&talent.sigil_of_silence.enabled\nactions.filler+=/throw_glaive\n\n# Maintenance & upkeep\nactions.maintenance+=/fiery_brand,if=talent.fiery_brand&((active_dot.fiery_brand_dot=0&(cooldown.sigil_of_flame.remains<=(execute_time+gcd.remains)||cooldown.soul_carver.remains<=(execute_time+gcd.remains)||cooldown.fel_devastation.remains<=(execute_time+gcd.remains)))||(talent.down_in_flames&full_recharge_time<=(execute_time+gcd.remains)))\nactions.maintenance+=/sigil_of_flame,if=talent.ascending_flame&!talent.illuminated_sigils||!sigil_placed&active_dot.sigil_of_flame=0\nactions.maintenance+=/immolation_aura\nactions.maintenance+=/bulk_extraction,if=((5-soul_fragments)<=spell_targets)&soul_fragments<=2\nactions.maintenance+=/spirit_bomb,if=variable.can_spb\nactions.maintenance+=/felblade,if=((!talent.spirit_bomb||active_enemies=1)&fury.deficit>=40)||((cooldown.fel_devastation.remains<=(execute_time+gcd.remains))&fury<50)\nactions.maintenance+=/fracture,if=(cooldown.fel_devastation.remains<=(execute_time+gcd.remains))&fury<50\nactions.maintenance+=/shear,if=(cooldown.fel_devastation.remains<=(execute_time+gcd.remains))&fury<50\n# Don't overcap fury\nactions.maintenance+=/spirit_bomb,if=fury.deficit<=30&spell_targets>1&soul_fragments>=4\nactions.maintenance+=/soul_cleave,if=fury.deficit<=40\n\n# Single Target\nactions.single_target+=/the_hunt\nactions.single_target+=/soul_carver\nactions.single_target+=/fel_devastation,if=talent.collective_anguish||(talent.stoke_the_flames&talent.burning_blood)\nactions.single_target+=/elysian_decree\nactions.single_target+=/fel_devastation\nactions.single_target+=/soul_cleave,if=!variable.dont_cleave\nactions.single_target+=/fracture\nactions.single_target+=/call_action_list,name=filler\n\n# 2-5 targets\nactions.small_aoe+=/the_hunt\nactions.small_aoe+=/fel_devastation,if=talent.collective_anguish.enabled||(talent.stoke_the_flames.enabled&talent.burning_blood.enabled)\nactions.small_aoe+=/elysian_decree,line_cd=1.85,if=fury>=40&(soul_fragments<=1||soul_fragments>=4)\nactions.small_aoe+=/fel_devastation\nactions.small_aoe+=/soul_carver,if=soul_fragments<3\nactions.small_aoe+=/soul_cleave,if=(soul_fragments<=1||!talent.spirit_bomb)&!variable.dont_cleave\nactions.small_aoe+=/fracture\nactions.small_aoe+=/call_action_list,name=filler\n\n# 6+ targets\nactions.big_aoe+=/fel_devastation,if=talent.collective_anguish||talent.stoke_the_flames\nactions.big_aoe+=/the_hunt\nactions.big_aoe+=/elysian_decree,line_cd=1.85,if=fury>=40&(soul_fragments<=1||soul_fragments>=4)\nactions.big_aoe+=/fel_devastation\nactions.big_aoe+=/soul_carver,if=soul_fragments<3\nactions.big_aoe+=/spirit_bomb,if=soul_fragments>=4\nactions.big_aoe+=/soul_cleave,if=!talent.spirit_bomb&!variable.dont_cleave\nactions.big_aoe+=/fracture\nactions.big_aoe+=/soul_cleave,if=!variable.dont_cleave\nactions.big_aoe+=/call_action_list,name=filler\n\n# Filler\nactions.filler+=/sigil_of_chains,if=talent.cycle_of_binding&talent.sigil_of_chains\nactions.filler+=/sigil_of_misery,if=talent.cycle_of_binding&talent.sigil_of_misery\nactions.filler+=/sigil_of_silence,if=talent.cycle_of_binding&talent.sigil_of_silence\nactions.filler+=/felblade\nactions.filler+=/shear\nactions.filler+=/throw_glaive\n\n## # External buffs\n## actions.externals+=/invoke_external_buff,name=symbol_of_hope\n## actions.externals+=/invoke_external_buff,name=power_infusion",
["version"] = 20240121,
["warnings"] = "The import for 'filler' required some automated changes.\nLine 5: Converted 'talent.cycle_of_binding' to 'talent.cycle_of_binding.enabled' (1x).\nLine 5: Converted 'talent.sigil_of_chains' to 'talent.sigil_of_chains.enabled' (1x).\nLine 6: Converted 'talent.cycle_of_binding' to 'talent.cycle_of_binding.enabled' (1x).\nLine 6: Converted 'talent.sigil_of_misery' to 'talent.sigil_of_misery.enabled' (1x).\nLine 7: Converted 'talent.cycle_of_binding' to 'talent.cycle_of_binding.enabled' (1x).\nLine 7: Converted 'talent.sigil_of_silence' to 'talent.sigil_of_silence.enabled' (1x).\n\nThe import for 'big_aoe' required some automated changes.\nLine 1: Converted 'talent.collective_anguish' to 'talent.collective_anguish.enabled' (1x).\nLine 1: Converted 'talent.stoke_the_flames' to 'talent.stoke_the_flames.enabled' (1x).\nLine 7: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 1: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 1: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 1: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 1: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 1: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 1: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 2: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 2: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 2: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 3: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 4: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 4: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 6: Converted 'talent.fiery_brand' to 'talent.fiery_brand.enabled' (1x).\nLine 6: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nLine 16: Converted 'talent.demonic' to 'talent.demonic.enabled' (1x).\nLine 19: Converted 'talent.fiery_brand' to 'talent.fiery_brand.enabled' (1x).\nLine 19: Converted 'talent.fiery_demise' to 'talent.fiery_demise.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'fiery_demise' required some automated changes.\nLine 2: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 2: Converted 'talent.illuminated_sigils' to 'talent.illuminated_sigils.enabled' (1x).\nLine 3: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\n\nThe import for 'single_target' required some automated changes.\nLine 3: Converted 'talent.collective_anguish' to 'talent.collective_anguish.enabled' (1x).\nLine 3: Converted 'talent.stoke_the_flames' to 'talent.stoke_the_flames.enabled' (1x).\nLine 3: Converted 'talent.burning_blood' to 'talent.burning_blood.enabled' (1x).\n\nThe import for 'small_aoe' required some automated changes.\nLine 6: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\n\nThe import for 'maintenance' required some automated changes.\nLine 1: Converted 'talent.fiery_brand' to 'talent.fiery_brand.enabled' (1x).\nLine 1: Converted 'talent.down_in_flames' to 'talent.down_in_flames.enabled' (1x).\nLine 2: Converted 'talent.ascending_flame' to 'talent.ascending_flame.enabled' (1x).\nLine 2: Converted 'talent.illuminated_sigils' to 'talent.illuminated_sigils.enabled' (1x).\nLine 6: Converted 'talent.spirit_bomb' to 'talent.spirit_bomb.enabled' (1x).\n\nImported 8 action lists.\n",
["author"] = "SimC",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["description"] = "Single Target",
["action"] = "the_hunt",
},
{
["action"] = "soul_carver",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.collective_anguish.enabled || ( talent.stoke_the_flames.enabled & talent.burning_blood.enabled )",
["action"] = "fel_devastation",
},
{
["action"] = "elysian_decree",
["enabled"] = true,
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! variable.dont_cleave",
["action"] = "soul_cleave",
},
{
["action"] = "fracture",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["big_aoe"] = {
{
["enabled"] = true,
["action"] = "fel_devastation",
["description"] = "6+ targets",
["criteria"] = "talent.collective_anguish.enabled || talent.stoke_the_flames.enabled",
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "elysian_decree",
["criteria"] = "fury >= 40 & ( soul_fragments <= 1 || soul_fragments >= 4 )",
["line_cd"] = "1.85",
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "soul_fragments < 3",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "soul_fragments >= 4",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "! talent.spirit_bomb.enabled & ! variable.dont_cleave",
["action"] = "soul_cleave",
},
{
["action"] = "fracture",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! variable.dont_cleave",
["action"] = "soul_cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["maintenance"] = {
{
["enabled"] = true,
["action"] = "fiery_brand",
["description"] = "Maintenance & upkeep",
["criteria"] = "talent.fiery_brand.enabled & ( ( active_dot.fiery_brand_dot = 0 & ( cooldown.sigil_of_flame.remains <= ( execute_time + gcd.remains ) || cooldown.soul_carver.remains <= ( execute_time + gcd.remains ) || cooldown.fel_devastation.remains <= ( execute_time + gcd.remains ) ) ) || ( talent.down_in_flames.enabled & full_recharge_time <= ( execute_time + gcd.remains ) ) )",
},
{
["enabled"] = true,
["criteria"] = "talent.ascending_flame.enabled & ! talent.illuminated_sigils.enabled || ! sigil_placed & active_dot.sigil_of_flame = 0",
["action"] = "sigil_of_flame",
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( 5 - soul_fragments ) <= spell_targets ) & soul_fragments <= 2",
["action"] = "bulk_extraction",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spb",
["action"] = "spirit_bomb",
},
{
["enabled"] = true,
["criteria"] = "( ( ! talent.spirit_bomb.enabled || active_enemies = 1 ) & fury.deficit >= 40 ) || ( ( cooldown.fel_devastation.remains <= ( execute_time + gcd.remains ) ) & fury < 50 )",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.fel_devastation.remains <= ( execute_time + gcd.remains ) ) & fury < 50",
["action"] = "fracture",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.fel_devastation.remains <= ( execute_time + gcd.remains ) ) & fury < 50",
["action"] = "shear",
},
{
["enabled"] = true,
["action"] = "spirit_bomb",
["description"] = "Don't overcap fury",
["criteria"] = "fury.deficit <= 30 & spell_targets > 1 & soul_fragments >= 4",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit <= 40",
["action"] = "soul_cleave",
},
},
["precombat"] = {
{
["enabled"] = true,
["action"] = "sigil_of_flame",
["line_cd"] = "5",
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
},
["fiery_demise"] = {
{
["enabled"] = true,
["description"] = "Fiery demise window",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.ascending_flame.enabled & ! talent.illuminated_sigils.enabled || ! sigil_placed & active_dot.sigil_of_flame = 0",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.spirit_bomb.enabled || ( cooldown.fel_devastation.remains <= ( execute_time + gcd.remains ) ) ) & fury < 50",
["action"] = "felblade",
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "soul_fragments < 3",
["action"] = "soul_carver",
},
{
["action"] = "the_hunt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "elysian_decree",
["criteria"] = "fury >= 40",
["line_cd"] = "1.85",
},
{
["enabled"] = true,
["criteria"] = "variable.can_spb",
["action"] = "spirit_bomb",
},
},
["default"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff )",
["description"] = "Check if trinkets have buff effects",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.fel_devastation.remains <= ( action.soul_cleave.execute_time + gcd.remains ) ) & fury < 80",
["description"] = "Don't spend fury when fel dev soon to maximize fel dev uptime",
["var_name"] = "dont_cleave",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.fiery_brand.enabled & talent.fiery_demise.enabled & active_dot.fiery_brand_dot > 0",
["description"] = "Check if fiery demise is active and spread",
["var_name"] = "fd_ready",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.fel_devastation.remains <= ( action.soul_cleave.execute_time + gcd.remains ) ) & fury < 80",
["description"] = "Don't spend fury when fel dev soon to maximize fel dev uptime",
["var_name"] = "dont_cleave",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.spirit_bomb = 1",
["description"] = "When to use Spirit Bomb with Focused Cleave",
["var_name"] = "single_target",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.spirit_bomb >= 2 & spell_targets.spirit_bomb <= 5",
["var_name"] = "small_aoe",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.spirit_bomb >= 6",
["var_name"] = "big_aoe",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "can_spb",
["criteria"] = "variable.fd_ready",
["value_else"] = "( variable.small_aoe & soul_fragments >= 5 ) || ( variable.big_aoe & soul_fragments >= 4 )",
["value"] = "( variable.single_target & soul_fragments >= 5 ) || ( variable.small_aoe & soul_fragments >= 4 ) || ( variable.big_aoe & soul_fragments >= 3 )",
},
{
["action"] = "disrupt",
["enabled"] = true,
},
{
["action"] = "consume_magic",
["enabled"] = true,
},
{
["action"] = "infernal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.demon_spikes.up & tanking",
["action"] = "demon_spikes",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.metamorphosis.up & ( ! talent.demonic.enabled || cooldown.fel_devastation.remains > 12 )",
["action"] = "metamorphosis",
["use_off_gcd"] = 1,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.fiery_brand.enabled & talent.fiery_demise.enabled & active_dot.fiery_brand_dot > 0",
["list_name"] = "fiery_demise",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "maintenance",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "variable.single_target",
["list_name"] = "single_target",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "variable.small_aoe",
["list_name"] = "small_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "variable.big_aoe",
["list_name"] = "big_aoe",
},
},
["small_aoe"] = {
{
["enabled"] = true,
["description"] = "2-5 targets",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "talent.collective_anguish.enabled || ( talent.stoke_the_flames.enabled & talent.burning_blood.enabled )",
["action"] = "fel_devastation",
},
{
["enabled"] = true,
["action"] = "elysian_decree",
["criteria"] = "fury >= 40 & ( soul_fragments <= 1 || soul_fragments >= 4 )",
["line_cd"] = "1.85",
},
{
["action"] = "fel_devastation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "soul_fragments < 3",
["action"] = "soul_carver",
},
{
["enabled"] = true,
["criteria"] = "( soul_fragments <= 1 || ! talent.spirit_bomb.enabled ) & ! variable.dont_cleave",
["action"] = "soul_cleave",
},
{
["action"] = "fracture",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["filler"] = {
{
["enabled"] = true,
["criteria"] = "talent.cycle_of_binding.enabled & talent.sigil_of_chains.enabled",
["action"] = "sigil_of_chains",
},
{
["enabled"] = true,
["criteria"] = "talent.cycle_of_binding.enabled & talent.sigil_of_misery.enabled",
["action"] = "sigil_of_misery",
},
{
["enabled"] = true,
["criteria"] = "talent.cycle_of_binding.enabled & talent.sigil_of_silence.enabled",
["action"] = "sigil_of_silence",
},
{
["action"] = "throw_glaive",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "sigil_of_chains",
["description"] = "Filler",
["criteria"] = "talent.cycle_of_binding.enabled & talent.sigil_of_chains.enabled",
},
{
["enabled"] = true,
["criteria"] = "talent.cycle_of_binding.enabled & talent.sigil_of_misery.enabled",
["action"] = "sigil_of_misery",
},
{
["enabled"] = true,
["criteria"] = "talent.cycle_of_binding.enabled & talent.sigil_of_silence.enabled",
["action"] = "sigil_of_silence",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["action"] = "shear",
["enabled"] = true,
},
{
["action"] = "throw_glaive",
["enabled"] = true,
},
},
},
},
["Unholy"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240410,
["spec"] = 252,
["desc"] = "2024-03-17, 04-10: Minor SimC updates.\n\n2024-03-10: Resync with sim.\n\n2024-01-26: Tweak Fyralath.\n\n2024-01-21: Tweak Epidemic.\n\n2024-01-16: Minor SimC update.\n\n2023-12-18 & 28: Minor SimC updates.\n\n2023-12-04: Epidemic as filler when there are no runes.\n\n2023-11-27: There's this axe...\n\n2023-11-17:  SimC update.\n\n2023-11-15: Fix trinket variables.\n\n2023-11-14: Fix trinkets.\n\n2023-11-05: Patch 10.2 updates.\n\n2023-09-10: Patch 10.1.7 updates.\n\n2023-07-11: Patch 10.1.5 launch.\n\n2023-06-24: Resync with SimC.\n\n2023-05-20: Add Vial trinket.\n\n2023-05-17: Update trinkets again.\n\n2023-04-30: Update trinket logic from SimC.\n\n2023-04-15: Minor tweak to use Festering Strike in preparation for Apocalypse.\n\n2023-04-04: Unholy update from SimC.\n\n2023-03-20: More updates for 10.0.7.\n\n2023-03-13: Update for 10.0.7.",
["lists"] = {
["aoe_setup"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.bursting_sores.enabled || death_knight.fwounded_targets >= cycle_enemies || death_knight.fwounded_targets >= 8 || raid_event.adds.exists & raid_event.adds.remains <= 11 & raid_event.adds.remains > 5 ) & ( ! talent.defile.enabled || talent.defile.enabled & buff.defile.remains < gcd.max )",
["action"] = "any_dnd",
["description"] = "AoE Setup",
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "( debuff.festering_wound.down || death_knight.fwounded_targets < cycle_enemies ) & talent.bursting_sores.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power || fight_remains < 10",
["action"] = "epidemic",
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "( debuff.festering_wound.down || death_knight.fwounded_targets < cycle_enemies )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "cooldown.apocalypse.remains < variable.apoc_timing & debuff.festering_wound.stack < 4",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.epidemic.enabled",
["action"] = "death_coil",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "! variable.epidemic_priority & ( ! variable.pooling_runic_power & variable.spend_rp || boss & fight_remains < 10 )",
["action"] = "death_coil",
["description"] = "Single Target",
},
{
["enabled"] = true,
["criteria"] = "variable.epidemic_priority & ( ! variable.pooling_runic_power & variable.spend_rp || boss & fight_remains < 10 )",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & ( active_enemies >= 2 || talent.unholy_ground.enabled & ( pet.apoc_ghoul.active & pet.apoc_ghoul.remains >= 13 || pet.gargoyle.active & pet.gargoyle.remains > 8 || pet.army_ghoul.active & pet.army_ghoul.remains > 8 || ! variable.pop_wounds & debuff.festering_wound.stack >= 4 ) || talent.defile.enabled & ( pet.gargoyle.active || pet.apoc_ghoul.active || pet.army_ghoul.active || buff.dark_transformation.up ) ) & ( death_knight.fwounded_targets >= cycle_enemies || active_enemies = 1 )",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "variable.pop_wounds || active_enemies >= 2 & death_and_decay.ticking",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack < 4",
["cycle_targets"] = 1,
},
{
["action"] = "death_coil",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "! variable.pop_wounds & debuff.festering_wound.stack >= 4",
["cycle_targets"] = 1,
},
},
["aoe_burst"] = {
{
["enabled"] = true,
["criteria"] = "( rune < 1 || talent.bursting_sores.enabled & death_knight.fwounded_targets = 0 || ! talent.bursting_sores.enabled ) & ! variable.pooling_runic_power & ( active_enemies >= 6 || runic_power.deficit < 30 || buff.festermight.stack = 20 )",
["action"] = "epidemic",
["description"] = "AoE Burst",
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "debuff.festering_wound.stack >= 1",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power || fight_remains < 10",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.epidemic.enabled",
["action"] = "death_coil",
},
{
["action"] = "wound_spender",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["action"] = "strangulate",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 40 & ( pet.gargoyle.active || ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > cooldown.antimagic_shell.duration )",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["criteria"] = "death_knight.amz_absorb_percent > 0 & runic_power.deficit > 70 & talent.assimilation.enabled & ( pet.gargoyle.active || ! talent.summon_gargoyle.enabled )",
["action"] = "antimagic_zone",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Variables",
["criteria"] = "talent.improved_death_coil.enabled & ! talent.coil_of_devastation.enabled & active_enemies >= 3 || talent.coil_of_devastation.enabled & active_enemies >= 4 || ! talent.improved_death_coil.enabled & active_enemies >= 2",
["var_name"] = "epidemic_priority",
["action"] = "variable",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "garg_setup_complete",
["criteria"] = "active_enemies >= 3 || cooldown.summon_gargoyle.remains > 1 & ( cooldown.apocalypse.remains > 1 || ! talent.apocalypse.enabled ) || ! talent.summon_gargoyle.enabled || time > 20",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "apoc_timing",
["criteria"] = "cooldown.apocalypse.remains < 10 & debuff.festering_wound.stack <= 4 & cooldown.unholy_assault.remains > 10",
["value_else"] = "3",
["value"] = "7",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "festermight_tracker",
["criteria"] = "! pet.gargoyle.active & talent.festermight.enabled & buff.festermight.up & ( buff.festermight.remains / ( 5 * gcd.max ) ) >= 1",
["value_else"] = "debuff.festering_wound.stack >= ( 3 - talent.infected_claws.enabled )",
["value"] = "debuff.festering_wound.stack >= 1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "pop_wounds",
["criteria"] = "( cooldown.apocalypse.remains > variable.apoc_timing || ! talent.apocalypse.enabled ) & ( variable.festermight_tracker || debuff.festering_wound.stack >= 1 & ! talent.apocalypse.enabled || debuff.festering_wound.stack >= 1 & cooldown.unholy_assault.remains < 20 & talent.unholy_assault.enabled & variable.st_planning || debuff.rotten_touch.up & debuff.festering_wound.stack >= 1 || debuff.festering_wound.stack > 4 ) || fight_remains < 5 & debuff.festering_wound.stack >= 1",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "pooling_runic_power",
["criteria"] = "talent.vile_contagion.enabled & cooldown.vile_contagion.remains < 3 & runic_power < 60 & ! variable.st_planning",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "st_planning",
["criteria"] = "active_enemies = 1 & ( ! raid_event.adds.exists || raid_event.adds.in > 15 )",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "adds_remain",
["criteria"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 6 )",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "spend_rp",
["criteria"] = "( ! talent.rotten_touch.enabled || talent.rotten_touch.enabled & ! debuff.rotten_touch.up || runic_power.deficit < 15 ) & ( ( talent.improved_death_coil.enabled & ( active_enemies = 2 || talent.coil_of_devastation.enabled ) || rune < 3 || pet.gargoyle.active || buff.sudden_doom.react || cooldown.apocalypse.remains < 10 & debuff.festering_wound.stack > 3 || ! variable.pop_wounds & debuff.festering_wound.stack >= 4 ) )",
["value_else"] = "0",
["value"] = "1",
},
{
["enabled"] = true,
["criteria"] = "pet.gargoyle.remains <= 30 || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 || cooldown.summon_gargoyle.ready ) & ( buff.dark_transformation.up & 30 >= buff.dark_transformation.remains || pet.army_ghoul.active & pet.army_ghoul.remains <= 30 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 30 ) || boss & fight_remains <= 30",
["action"] = "potion",
["description"] = "Call Action Lists",
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & ! death_and_decay.ticking & ! talent.bursting_sores.enabled & talent.defile.enabled & buff.defile.remains < gcd.max",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "talent.summon_gargoyle.enabled & cooldown.summon_gargoyle.remains < 3 * gcd.max || ! talent.summon_gargoyle.enabled || boss & fight_remains < 35",
["action"] = "army_of_the_dead",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 3 || ! talent.epidemic.enabled ) & ( pet.gargoyle.active & talent.commander_of_the_dead.enabled & buff.commander_of_the_dead.up & cooldown.apocalypse.remains < 5 & buff.commander_of_the_dead.remains > 26 || debuff.death_rot.up & debuff.death_rot.remains < gcd.max )",
["action"] = "death_coil",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4 & ( talent.commander_of_the_dead.enabled & buff.commander_of_the_dead.up & cooldown.apocalypse.remains < 5 || debuff.death_rot.up & debuff.death_rot.remains < gcd.max )",
["action"] = "epidemic",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.apocalypse.remains > variable.apoc_timing + 3 || cooldown.unholy_assault.ready || active_enemies >= 3 ) & talent.plaguebringer.enabled & ( talent.superstrain.enabled || talent.unholy_blight.enabled ) & buff.plaguebringer.remains < gcd.max",
["action"] = "wound_spender",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( ( ! talent.apocalypse.enabled || cooldown.apocalypse.remains || ! talent.summon_gargoyle.enabled ) & talent.morbidity.enabled || ! talent.morbidity.enabled ) || variable.adds_remain || fight_remains < 21",
["action"] = "unholy_blight",
},
{
["enabled"] = true,
["action"] = "outbreak",
["criteria"] = "target.time_to_die > dot.virulent_plague.remains & ( dot.virulent_plague.refreshable || talent.superstrain.enabled & ( dot.frost_fever_superstrain.refreshable || dot.blood_plague_superstrain.refreshable ) ) & ( ! talent.unholy_blight.enabled || talent.unholy_blight.enabled & cooldown.unholy_blight.remains > 15 / ( ( talent.superstrain.enabled * 3 ) + ( talent.plaguebringer.enabled * 2 ) + ( talent.ebon_fever.enabled * 2 ) ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff ) & ! variable.trinket_1_exclude",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff ) & ! variable.trinket_2_exclude",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % 45 = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % 45 = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box || trinket.t1.is.irideus_fragment || trinket.t1.is.vial_of_animated_blood",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box || trinket.t2.is.irideus_fragment || trinket.t2.is.vial_of_animated_blood",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown & ! variable.trinket_2_exclude || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["action"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking & ( active_enemies < 5 || active_enemies > 21 || fight_remains < 4 ) & ( debuff.festering_wound.stack >= 2 || time > 15 )",
},
{
["enabled"] = true,
["name"] = "gavel_of_the_first_arbiter",
["action"] = "gavel_of_the_first_arbiter",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["action"] = "algethar_puzzle_box",
["criteria"] = "cooldown.summon_gargoyle.remains < 5 & rune <= 4 || ! talent.summon_gargoyle.enabled & pet.army_ghoul.active || active_enemies > 3 & variable.adds_remain & ( buff.dark_transformation.up || talent.bursting_sores.enabled & cooldown.any_dnd.remains < 10 & ! death_and_decay.ticking )",
},
{
["enabled"] = true,
["name"] = "irideus_fragment",
["use_off_gcd"] = 1,
["action"] = "irideus_fragment",
["criteria"] = "( pet.gargoyle.active & pet.gargoyle.remains < 16 || ! talent.summon_gargoyle.enabled & pet.army_ghoul.active & pet.army_ghoul.remains < 16 ) || active_enemies > 3 & variable.adds_remain & ( buff.dark_transformation.up || talent.bursting_sores.enabled & death_and_decay.ticking )",
},
{
["enabled"] = true,
["name"] = "vial_of_animated_blood",
["use_off_gcd"] = 1,
["action"] = "vial_of_animated_blood",
["criteria"] = "pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 18 || ! talent.apocalypse.enabled & buff.dark_transformation.up || active_enemies > 3 & variable.adds_remain & ( buff.dark_transformation.up || talent.bursting_sores.enabled & death_and_decay.ticking )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_manual & variable.trinket_1_buffs & ( ( ! talent.summon_gargoyle.enabled & ( ( ! talent.army_of_the_dead.enabled || cooldown.army_of_the_dead.remains_expected > 60 || death_knight.disable_aotd ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) || pet.army_ghoul.active ) || talent.summon_gargoyle.enabled & pet.gargoyle.active || cooldown.summon_gargoyle.remains > 80 ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) & ( variable.trinket_2_exclude || variable.trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown ) ) || boss & trinket.t1.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_manual & variable.trinket_2_buffs & ( ( ! talent.summon_gargoyle.enabled & ( ( ! talent.army_of_the_dead.enabled || cooldown.army_of_the_dead.remains_expected > 60 || death_knight.disable_aotd ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) || pet.army_ghoul.active ) || talent.summon_gargoyle.enabled & pet.gargoyle.active || cooldown.summon_gargoyle.remains > 80 ) & ( pet.apoc_ghoul.active || ( ! talent.apocalypse.enabled || active_enemies >= 2 ) & buff.dark_transformation.up ) & ( variable.trinket_1_exclude || variable.trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown ) ) || boss & trinket.t2.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_manual & ! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & cooldown.army_of_the_dead.remains_expected > 20 || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & cooldown.dark_transformation.remains > 20 || cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_manual & ! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled || ! talent.summon_gargoyle.enabled & talent.army_of_the_dead.enabled & cooldown.army_of_the_dead.remains_expected > 20 || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_dead.enabled & cooldown.dark_transformation.remains > 20 || cooldown.summon_gargoyle.remains > 20 & ! pet.gargoyle.active ) || fight_remains < 15",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["action"] = "use_items",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "variable.garg_setup_complete = 0",
["list_name"] = "garg_setup",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "variable.st_planning",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "variable.adds_remain",
["list_name"] = "aoe_cooldowns",
},
{
["enabled"] = true,
["criteria"] = "variable.adds_remain & cooldown.any_dnd.remains < 10 & ! death_and_decay.ticking",
["action"] = "call_action_list",
["list_name"] = "aoe_setup",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 4 & death_and_decay.ticking",
["list_name"] = "aoe_burst",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4 & ( cooldown.any_dnd.remains > 10 & ! death_and_decay.ticking || ! variable.adds_remain )",
["action"] = "call_action_list",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies <= 3",
["list_name"] = "st",
},
},
["aoe_cooldowns"] = {
{
["enabled"] = true,
["action"] = "vile_contagion",
["cycle_targets"] = 1,
["criteria"] = "debuff.festering_wound.stack >= 4 & cooldown.any_dnd.remains < 3",
["description"] = "AoE Cooldowns",
},
{
["action"] = "summon_gargoyle",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rune < 2 || buff.festermight.stack > 10 || ! talent.festermight.enabled || buff.festermight.up & buff.festermight.remains < 12",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["action"] = "apocalypse",
["criteria"] = "talent.bursting_sores.enabled & debuff.festering_wound.up & ( ! death_and_decay.ticking & cooldown.death_and_decay.remains & rune < 3 || death_and_decay.ticking & rune = 0 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "apocalypse",
["criteria"] = "! talent.bursting_sores.enabled & debuff.festering_wound.stack >= 4 || set_bonus.tier31_2pc & debuff.festering_wound.stack >= 1",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "unholy_assault",
["criteria"] = "debuff.festering_wound.stack <= 2 || buff.dark_transformation.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! pet.ghoul.active",
["action"] = "raise_dead",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.any_dnd.remains < 10 & talent.infected_claws.enabled & ( ( cooldown.vile_contagion.remains || raid_event.adds.exists & raid_event.adds.in > 10 ) & death_knight.fwounded_targets < active_enemies || ! talent.vile_contagion.enabled ) & ( raid_event.adds.remains > 5 || ! raid_event.adds.exists ) || ! talent.infected_claws.enabled )",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "buff.dark_transformation.up",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "! buff.dark_transformation.up & cooldown.dark_transformation.remains > 6 || boss & fight_remains < gcd.max",
["action"] = "sacrificial_pact",
},
},
["precombat"] = {
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "army_of_the_dead",
["criteria"] = "! equipped.fyralath_the_dreamrender || active_enemies > 1",
["precombat_time"] = "2",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power || fight_remains < 10",
["action"] = "epidemic",
["description"] = "Generic AoE",
},
{
["enabled"] = true,
["action"] = "wound_spender",
["criteria"] = "variable.pop_wounds",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "festering_strike",
["criteria"] = "! variable.pop_wounds",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.epidemic.enabled",
["action"] = "death_coil",
},
},
["racials"] = {
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20 & ( cooldown.summon_gargoyle.remains < gcd.max & time > 15 || ! talent.summon_gargoyle.enabled || pet.gargoyle.active & rune < 2 & debuff.festering_wound.stack < 1 )",
["action"] = "arcane_torrent",
["description"] = "Racials",
},
{
["enabled"] = true,
["criteria"] = "( buff.blood_fury.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.blood_fury.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.blood_fury.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.blood_fury.duration + 3",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserking.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.berserking.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.berserking.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.berserking.duration + 3",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.unholy_strength.up & ( ! talent.festermight.enabled || buff.festermight.remains < target.time_to_die || buff.unholy_strength.remains < target.time_to_die )",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "( 18 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= 18 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= 18 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= 18",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 || ( rune.deficit >= 5 & runic_power.deficit >= 60 )",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "( buff.fireblood.duration + 3 >= pet.gargoyle.remains & pet.gargoyle.active ) || ( ! talent.summon_gargoyle.enabled || cooldown.summon_gargoyle.remains > 60 ) & ( pet.army_ghoul.active & pet.army_ghoul.remains <= buff.fireblood.duration + 3 || pet.apoc_ghoul.active & pet.apoc_ghoul.remains <= buff.fireblood.duration + 3 || active_enemies >= 2 & death_and_decay.ticking ) || boss & fight_remains <= buff.fireblood.duration + 3",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ( buff.unholy_strength.up || boss & fight_remains < 5 )",
["action"] = "bag_of_tricks",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "buff.commander_of_the_dead.up || ! talent.commander_of_the_dead.enabled",
["action"] = "summon_gargoyle",
["description"] = "ST/Cleave Cooldowns",
},
{
["enabled"] = true,
["criteria"] = "! pet.ghoul.active",
["action"] = "raise_dead",
},
{
["enabled"] = true,
["criteria"] = "cooldown.apocalypse.remains < 5",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["action"] = "apocalypse",
["criteria"] = "variable.st_planning & debuff.festering_wound.stack >= 4",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & ( pet.gargoyle.active & pet.gargoyle.remains <= 23 || ! talent.summon_gargoyle.enabled & talent.army_of_the_damned.enabled & pet.army_ghoul.active & pet.apoc_ghoul.active || ! talent.summon_gargoyle.enabled & ! talent.army_of_the_damned.enabled & buff.dark_transformation.up || ! talent.summon_gargoyle.enabled & ! talent.summon_gargoyle.enabled & buff.dark_transformation.up ) || boss & fight_remains <= 21",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "rune < 3 & variable.st_planning",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["action"] = "unholy_assault",
["criteria"] = "variable.st_planning",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["action"] = "soul_reaper",
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["cycle_targets"] = 1,
},
},
["garg_setup"] = {
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack >= 4 & ( buff.commander_of_the_dead.up & pet.gargoyle.remains < 23 || ! talent.commander_of_the_dead.enabled )",
["action"] = "apocalypse",
["description"] = "Garg Setup",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > 5",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & debuff.festering_wound.stack > 1",
["action"] = "any_dnd",
},
{
["enabled"] = true,
["criteria"] = "buff.commander_of_the_dead.up || ! talent.commander_of_the_dead.enabled & runic_power >= 40",
["action"] = "summon_gargoyle",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "pet.gargoyle.active & pet.gargoyle.remains <= 23",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "pet.gargoyle.active & pet.gargoyle.remains <= 23",
["action"] = "unholy_assault",
},
{
["enabled"] = true,
["criteria"] = "talent.commander_of_the_dead.enabled & runic_power >= 40 || ! talent.commander_of_the_dead.enabled",
["action"] = "dark_transformation",
},
{
["enabled"] = true,
["criteria"] = "debuff.festering_wound.stack = 0 || talent.apocalypse.enabled & cooldown.apocalypse.remains < 3 * gcd.max & debuff.festering_wound.stack < 4 || runic_power < 40 || ! talent.apocalypse.enabled & ! pet.gargoyle.active",
["action"] = "festering_strike",
},
{
["enabled"] = true,
["criteria"] = "rune <= 1",
["action"] = "death_coil",
},
},
},
["version"] = 20240410,
["warnings"] = "The import for 'aoe_setup' required some automated changes.\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 1: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\nLine 1: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\nLine 2: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 6: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\n\nThe import for 'aoe_burst' required some automated changes.\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 1: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 4: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 3: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 3: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\n\nThe import for 'racials' required some automated changes.\nLine 2: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 7: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nThe import for 'aoe_cooldowns' required some automated changes.\nLine 3: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 4: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 5: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 8: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\n\nThe import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.army_of_the_damned' to 'talent.army_of_the_damned.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\n\nThe import for 'garg_setup' required some automated changes.\nLine 1: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 4: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 7: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 7: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 8: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 8: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 4: Converted 'talent.assimilation' to 'talent.assimilation.enabled' (1x).\nLine 4: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 5: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 5: Converted 'talent.coil_of_devastation' to 'talent.coil_of_devastation.enabled' (1x).\nLine 5: Converted 'talent.coil_of_devastation' to 'talent.coil_of_devastation.enabled' (1x).\nLine 5: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 6: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 6: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 8: Converted 'talent.infected_claws' to 'talent.infected_claws.enabled' (1x).\nLine 8: Converted 'talent.festermight' to 'talent.festermight.enabled' (1x).\nLine 8: Converted operations in '!pet.gargoyle.active&talent.festermight.enabled&buff.festermight.up&(buff.festermight.remains%(5*gcd.max))>=1' to '!pet.gargoyle.active&talent.festermight.enabled&buff.festermight.up&(buff.festermight.remains/(5*gcd.max))>=1'.\nLine 9: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 9: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 9: Converted 'talent.unholy_assault' to 'talent.unholy_assault.enabled' (1x).\nLine 10: Converted 'talent.vile_contagion' to 'talent.vile_contagion.enabled' (1x).\nLine 13: Converted 'talent.rotten_touch' to 'talent.rotten_touch.enabled' (1x).\nLine 13: Converted 'talent.rotten_touch' to 'talent.rotten_touch.enabled' (1x).\nLine 13: Converted 'talent.improved_death_coil' to 'talent.improved_death_coil.enabled' (1x).\nLine 13: Converted 'talent.coil_of_devastation' to 'talent.coil_of_devastation.enabled' (1x).\nLine 14: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 15: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 15: Converted 'talent.defile' to 'talent.defile.enabled' (1x).\nLine 16: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 16: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 17: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\nLine 17: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 18: Converted 'talent.commander_of_the_dead' to 'talent.commander_of_the_dead.enabled' (1x).\nLine 19: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 19: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 19: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 20: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 20: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 20: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 20: Converted 'talent.morbidity' to 'talent.morbidity.enabled' (1x).\nLine 21: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 21: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 21: Converted 'talent.unholy_blight' to 'talent.unholy_blight.enabled' (1x).\nLine 21: Converted 'talent.superstrain' to 'talent.superstrain.enabled' (1x).\nLine 21: Converted 'talent.plaguebringer' to 'talent.plaguebringer.enabled' (1x).\nLine 21: Converted 'talent.ebon_fever' to 'talent.ebon_fever.enabled' (1x).\nLine 21: Converted operations in 'target.time_to_die>dot.virulent_plague.remains&(dot.virulent_plague.refreshable||talent.superstrain.enabled&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.unholy_blight.remains>15%((talent.superstrain.enabled*3)+(talent.plaguebringer.enabled*2)+(talent.ebon_fever.enabled*2)))' to 'target.time_to_die>dot.virulent_plague.remains&(dot.virulent_plague.refreshable||talent.superstrain.enabled&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight.enabled||talent.unholy_blight.enabled&cooldown.unholy_blight.remains>15/((talent.superstrain.enabled*3)+(talent.plaguebringer.enabled*2)+(talent.ebon_fever.enabled*2)))'.\nLine 22: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 22: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 23: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 23: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 24: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 24: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 24: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 24: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 24: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 24: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 24: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 25: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 25: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 25: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 25: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 25: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 25: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 26: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 26: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 26: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%45=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%45=0)'.\nLine 27: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 27: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 27: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%45=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%45=0)'.\nLine 28: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 28: Converted 'trinket.1.is.irideus_fragment' to 'trinket.t1.is.irideus_fragment' (1x).\nLine 28: Converted 'trinket.1.is.vial_of_animated_blood' to 'trinket.t1.is.vial_of_animated_blood' (1x).\nLine 29: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 29: Converted 'trinket.2.is.irideus_fragment' to 'trinket.t2.is.irideus_fragment' (1x).\nLine 29: Converted 'trinket.2.is.vial_of_animated_blood' to 'trinket.t2.is.vial_of_animated_blood' (1x).\nLine 30: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 30: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 30: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 30: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 30: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 30: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 30: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 30: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 30: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 30: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 30: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 30: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 30: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 30: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 30: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 30: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 30: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 31: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 31: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 34: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 34: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 35: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 35: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 36: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 36: Converted 'talent.bursting_sores' to 'talent.bursting_sores.enabled' (1x).\nLine 37: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 37: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 37: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 37: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 37: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 37: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 37: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 37: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 37: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 37: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 38: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 38: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 38: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 38: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 38: Converted 'talent.apocalypse' to 'talent.apocalypse.enabled' (1x).\nLine 38: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 38: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 38: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 38: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 38: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 39: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 39: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 39: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 39: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 39: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 39: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 39: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 39: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 39: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 40: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 40: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 40: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 40: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 40: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 40: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 40: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 40: Converted 'talent.summon_gargoyle' to 'talent.summon_gargoyle.enabled' (1x).\nLine 40: Converted 'talent.army_of_the_dead' to 'talent.army_of_the_dead.enabled' (1x).\nLine 41: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 41: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 41: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 41: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 42: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 42: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 42: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 42: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.epidemic' to 'talent.epidemic.enabled' (1x).\n\nImported 10 action lists.\n",
["author"] = "SimulationCraft",
["profile"] = "actions.precombat+=/raise_dead\nactions.precombat+=/army_of_the_dead,precombat_time=2,if=!equipped.fyralath_the_dreamrender||active_enemies>1\n\nactions+=/mind_freeze\nactions+=/strangulate\nactions+=/antimagic_shell,if=runic_power.deficit>40&(pet.gargoyle.active||!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>cooldown.antimagic_shell.duration)\nactions+=/antimagic_zone,if=death_knight.amz_absorb_percent>0&runic_power.deficit>70&talent.assimilation&(pet.gargoyle.active||!talent.summon_gargoyle)\n# Variables\nactions+=/variable,name=epidemic_priority,op=setif,value=1,value_else=0,condition=talent.improved_death_coil&!talent.coil_of_devastation&active_enemies>=3||talent.coil_of_devastation&active_enemies>=4||!talent.improved_death_coil&active_enemies>=2\nactions+=/variable,name=garg_setup_complete,op=setif,value=1,value_else=0,condition=active_enemies>=3||cooldown.summon_gargoyle.remains>1&(cooldown.apocalypse.remains>1||!talent.apocalypse)||!talent.summon_gargoyle||time>20\nactions+=/variable,name=apoc_timing,op=setif,value=7,value_else=3,condition=cooldown.apocalypse.remains<10&debuff.festering_wound.stack<=4&cooldown.unholy_assault.remains>10\nactions+=/variable,name=festermight_tracker,op=setif,value=debuff.festering_wound.stack>=1,value_else=debuff.festering_wound.stack>=(3-talent.infected_claws),condition=!pet.gargoyle.active&talent.festermight&buff.festermight.up&(buff.festermight.remains%(5*gcd.max))>=1\nactions+=/variable,name=pop_wounds,op=setif,value=1,value_else=0,condition=(cooldown.apocalypse.remains>variable.apoc_timing||!talent.apocalypse)&(variable.festermight_tracker||debuff.festering_wound.stack>=1&!talent.apocalypse||debuff.festering_wound.stack>=1&cooldown.unholy_assault.remains<20&talent.unholy_assault&variable.st_planning||debuff.rotten_touch.up&debuff.festering_wound.stack>=1||debuff.festering_wound.stack>4)||fight_remains<5&debuff.festering_wound.stack>=1\nactions+=/variable,name=pooling_runic_power,op=setif,value=1,value_else=0,condition=talent.vile_contagion&cooldown.vile_contagion.remains<3&runic_power<60&!variable.st_planning\nactions+=/variable,name=st_planning,op=setif,value=1,value_else=0,condition=active_enemies=1&(!raid_event.adds.exists||raid_event.adds.in>15)\nactions+=/variable,name=adds_remain,op=setif,value=1,value_else=0,condition=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>6)\nactions+=/variable,name=spend_rp,op=setif,value=1,value_else=0,condition=(!talent.rotten_touch||talent.rotten_touch&!debuff.rotten_touch.up||runic_power.deficit<15)&((talent.improved_death_coil&(active_enemies=2||talent.coil_of_devastation)||rune<3||pet.gargoyle.active||buff.sudden_doom.react||cooldown.apocalypse.remains<10&debuff.festering_wound.stack>3||!variable.pop_wounds&debuff.festering_wound.stack>=4))\n# Call Action Lists\n### Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> is up, as well as <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or with <a href='https://www.wowhead.com/spell=63560/dark-transformation'>Dark Transformation</a> if <a href='https://www.wowhead.com/spell=275699/apocalypse'>Apocalypse</a> or <a href='https://www.wowhead.com/spell=49206/summon-gargoyle'>Gargoyle</a> are not talented\n## actions+=/invoke_external_buff,name=power_infusion,if=variable.st_planning&(pet.gargoyle.active&pet.gargoyle.remains<=22||!talent.summon_gargoyle&talent.army_of_the_dead&pet.army_ghoul.active&pet.army_ghoul.remains<=18||!talent.summon_gargoyle&!talent.army_of_the_dead&buff.dark_transformation.up||!talent.summon_gargoyle&buff.dark_transformation.up||!pet.gargoyle.active&cooldown.summon_gargoyle.remains+10>cooldown.invoke_external_buff.duration||active_enemies>=3&(buff.dark_transformation.up||death_and_decay.ticking))\nactions+=/potion,if=pet.gargoyle.remains<=30||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60||cooldown.summon_gargoyle.ready)&(buff.dark_transformation.up&30>=buff.dark_transformation.remains||pet.army_ghoul.active&pet.army_ghoul.remains<=30||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=30)||boss&fight_remains<=30\nactions+=/any_dnd,if=variable.adds_remain&!death_and_decay.ticking&!talent.bursting_sores&talent.defile&buff.defile.remains<gcd\nactions+=/army_of_the_dead,if=talent.summon_gargoyle&cooldown.summon_gargoyle.remains<3*gcd.max||!talent.summon_gargoyle||boss&fight_remains<35\nactions+=/death_coil,if=(active_enemies<=3||!talent.epidemic)&(pet.gargoyle.active&talent.commander_of_the_dead&buff.commander_of_the_dead.up&cooldown.apocalypse.remains<5&buff.commander_of_the_dead.remains>26||debuff.death_rot.up&debuff.death_rot.remains<gcd)\nactions+=/epidemic,if=active_enemies>=4&(talent.commander_of_the_dead&buff.commander_of_the_dead.up&cooldown.apocalypse.remains<5||debuff.death_rot.up&debuff.death_rot.remains<gcd.max)\nactions+=/wound_spender,if=(cooldown.apocalypse.remains>variable.apoc_timing+3||cooldown.unholy_assault.ready||active_enemies>=3)&talent.plaguebringer&(talent.superstrain||talent.unholy_blight)&buff.plaguebringer.remains<gcd\nactions+=/unholy_blight,if=variable.st_planning&((!talent.apocalypse||cooldown.apocalypse.remains||!talent.summon_gargoyle)&talent.morbidity||!talent.morbidity)||variable.adds_remain||fight_remains<21\nactions+=/outbreak,cycle_targets=1,if=target.time_to_die>dot.virulent_plague.remains&(dot.virulent_plague.refreshable||talent.superstrain&(dot.frost_fever_superstrain.refreshable||dot.blood_plague_superstrain.refreshable))&(!talent.unholy_blight||talent.unholy_blight&cooldown.unholy_blight.remains>15%((talent.superstrain*3)+(talent.plaguebringer*2)+(talent.ebon_fever*2)))\n## Trinkets\nactions+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions+=/variable,name=trinket_1_buffs,value=(trinket.1.has_use_buff||trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)&!variable.trinket_1_exclude\nactions+=/variable,name=trinket_2_buffs,value=(trinket.2.has_use_buff||trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)&!variable.trinket_2_exclude\nactions+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%45=0)\nactions+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%45=0)\nactions+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box||trinket.1.is.irideus_fragment||trinket.1.is.vial_of_animated_blood\nactions+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box||trinket.2.is.irideus_fragment||trinket.2.is.vial_of_animated_blood\nactions+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown&!variable.trinket_2_exclude||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\nactions+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&(active_enemies<5||active_enemies>21||fight_remains<4)&(debuff.festering_wound.stack>=2||time>15)\nactions+=/use_item,name=gavel_of_the_first_arbiter\nactions+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=cooldown.summon_gargoyle.remains<5&rune<=4||!talent.summon_gargoyle&pet.army_ghoul.active||active_enemies>3&variable.adds_remain&(buff.dark_transformation.up||talent.bursting_sores&cooldown.any_dnd.remains<10&!death_and_decay.ticking)\nactions+=/use_item,use_off_gcd=1,name=irideus_fragment,if=(pet.gargoyle.active&pet.gargoyle.remains<16||!talent.summon_gargoyle&pet.army_ghoul.active&pet.army_ghoul.remains<16)||active_enemies>3&variable.adds_remain&(buff.dark_transformation.up||talent.bursting_sores&death_and_decay.ticking)\nactions+=/use_item,use_off_gcd=1,name=vial_of_animated_blood,if=pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=18||!talent.apocalypse&buff.dark_transformation.up||active_enemies>3&variable.adds_remain&(buff.dark_transformation.up||talent.bursting_sores&death_and_decay.ticking)\nactions+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_manual&variable.trinket_1_buffs&((!talent.summon_gargoyle&((!talent.army_of_the_dead||cooldown.army_of_the_dead.remains_expected>60||death_knight.disable_aotd)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)||pet.army_ghoul.active)||talent.summon_gargoyle&pet.gargoyle.active||cooldown.summon_gargoyle.remains>80)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)&(variable.trinket_2_exclude||variable.trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown))||boss&trinket.1.proc.any_dps.duration>=fight_remains\nactions+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_manual&variable.trinket_2_buffs&((!talent.summon_gargoyle&((!talent.army_of_the_dead||cooldown.army_of_the_dead.remains_expected>60||death_knight.disable_aotd)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)||pet.army_ghoul.active)||talent.summon_gargoyle&pet.gargoyle.active||cooldown.summon_gargoyle.remains>80)&(pet.apoc_ghoul.active||(!talent.apocalypse||active_enemies>=2)&buff.dark_transformation.up)&(variable.trinket_1_exclude||variable.trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown))||boss&trinket.2.proc.any_dps.duration>=fight_remains\nactions+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_manual&!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead||!talent.summon_gargoyle&talent.army_of_the_dead&cooldown.army_of_the_dead.remains_expected>20||!talent.summon_gargoyle&!talent.army_of_the_dead&cooldown.dark_transformation.remains>20||cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_manual&!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown||!talent.summon_gargoyle&!talent.army_of_the_dead||!talent.summon_gargoyle&talent.army_of_the_dead&cooldown.army_of_the_dead.remains_expected>20||!talent.summon_gargoyle&!talent.army_of_the_dead&cooldown.dark_transformation.remains>20||cooldown.summon_gargoyle.remains>20&!pet.gargoyle.active)||fight_remains<15\nactions+=/use_items,use_off_gcd=1,if=(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions+=/call_action_list,name=racials\nactions+=/run_action_list,name=garg_setup,strict=1,if=variable.garg_setup_complete=0\nactions+=/call_action_list,name=cooldowns,strict=1,if=variable.st_planning\nactions+=/call_action_list,name=aoe_cooldowns,strict=1,if=variable.adds_remain\nactions+=/call_action_list,name=aoe_setup,if=variable.adds_remain&cooldown.any_dnd.remains<10&!death_and_decay.ticking\nactions+=/call_action_list,name=aoe_burst,strict=1,if=active_enemies>=4&death_and_decay.ticking\nactions+=/call_action_list,name=aoe,if=active_enemies>=4&(cooldown.any_dnd.remains>10&!death_and_decay.ticking||!variable.adds_remain)\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<=3\n\n# Generic AoE\nactions.aoe+=/epidemic,if=!variable.pooling_runic_power||fight_remains<10\nactions.aoe+=/wound_spender,cycle_targets=1,if=variable.pop_wounds\nactions.aoe+=/festering_strike,cycle_targets=1,if=!variable.pop_wounds\nactions.aoe+=/death_coil,if=!variable.pooling_runic_power&!talent.epidemic\n\n# AoE Burst\nactions.aoe_burst+=/epidemic,if=(rune<1||talent.bursting_sores&death_knight.fwounded_targets=0||!talent.bursting_sores)&!variable.pooling_runic_power&(active_enemies>=6||runic_power.deficit<30||buff.festermight.stack=20)\nactions.aoe_burst+=/wound_spender,cycle_targets=1,if=debuff.festering_wound.stack>=1\nactions.aoe_burst+=/epidemic,if=!variable.pooling_runic_power||fight_remains<10\nactions.aoe_burst+=/death_coil,if=!variable.pooling_runic_power&!talent.epidemic\nactions.aoe_burst+=/wound_spender\n\n# AoE Cooldowns\nactions.aoe_cooldowns+=/vile_contagion,cycle_targets=1,if=debuff.festering_wound.stack>=4&cooldown.any_dnd.remains<3\nactions.aoe_cooldowns+=/summon_gargoyle\nactions.aoe_cooldowns+=/abomination_limb,if=rune<2||buff.festermight.stack>10||!talent.festermight||buff.festermight.up&buff.festermight.remains<12\nactions.aoe_cooldowns+=/apocalypse,cycle_targets=1,if=talent.bursting_sores&debuff.festering_wound.up&(!death_and_decay.ticking&cooldown.death_and_decay.remains&rune<3||death_and_decay.ticking&rune=0)\nactions.aoe_cooldowns+=/apocalypse,cycle_targets=1,if=!talent.bursting_sores&debuff.festering_wound.stack>=4||set_bonus.tier31_2pc&debuff.festering_wound.stack>=1\nactions.aoe_cooldowns+=/unholy_assault,cycle_targets=1,if=debuff.festering_wound.stack<=2||buff.dark_transformation.up\nactions.aoe_cooldowns+=/raise_dead,if=!pet.ghoul.active\nactions.aoe_cooldowns+=/dark_transformation,if=(cooldown.any_dnd.remains<10&talent.infected_claws&((cooldown.vile_contagion.remains||raid_event.adds.exists&raid_event.adds.in>10)&death_knight.fwounded_targets<active_enemies||!talent.vile_contagion)&(raid_event.adds.remains>5||!raid_event.adds.exists)||!talent.infected_claws)\nactions.aoe_cooldowns+=/empower_rune_weapon,if=buff.dark_transformation.up\nactions.aoe_cooldowns+=/sacrificial_pact,if=!buff.dark_transformation.up&cooldown.dark_transformation.remains>6||boss&fight_remains<gcd\n\n# AoE Setup\nactions.aoe_setup+=/any_dnd,if=(!talent.bursting_sores||death_knight.fwounded_targets>=cycle_enemies||death_knight.fwounded_targets>=8||raid_event.adds.exists&raid_event.adds.remains<=11&raid_event.adds.remains>5)&(!talent.defile||talent.defile&buff.defile.remains<gcd)\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=(debuff.festering_wound.down||death_knight.fwounded_targets<cycle_enemies)&talent.bursting_sores\nactions.aoe_setup+=/epidemic,if=!variable.pooling_runic_power||fight_remains<10\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=(debuff.festering_wound.down||death_knight.fwounded_targets<cycle_enemies)\nactions.aoe_setup+=/festering_strike,cycle_targets=1,if=cooldown.apocalypse.remains<variable.apoc_timing&debuff.festering_wound.stack<4\nactions.aoe_setup+=/death_coil,if=!variable.pooling_runic_power&!talent.epidemic\n\n# ST/Cleave Cooldowns\nactions.cooldowns+=/summon_gargoyle,if=buff.commander_of_the_dead.up||!talent.commander_of_the_dead\nactions.cooldowns+=/raise_dead,if=!pet.ghoul.active\nactions.cooldowns+=/dark_transformation,if=cooldown.apocalypse.remains<5\nactions.cooldowns+=/apocalypse,cycle_targets=1,if=variable.st_planning&debuff.festering_wound.stack>=4\nactions.cooldowns+=/empower_rune_weapon,if=variable.st_planning&(pet.gargoyle.active&pet.gargoyle.remains<=23||!talent.summon_gargoyle&talent.army_of_the_damned&pet.army_ghoul.active&pet.apoc_ghoul.active||!talent.summon_gargoyle&!talent.army_of_the_damned&buff.dark_transformation.up||!talent.summon_gargoyle&!talent.summon_gargoyle&buff.dark_transformation.up)||boss&fight_remains<=21\nactions.cooldowns+=/abomination_limb,if=rune<3&variable.st_planning\nactions.cooldowns+=/unholy_assault,cycle_targets=1,if=variable.st_planning\nactions.cooldowns+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>5\nactions.cooldowns+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\n\n# Garg Setup\nactions.garg_setup+=/apocalypse,if=debuff.festering_wound.stack>=4&(buff.commander_of_the_dead.up&pet.gargoyle.remains<23||!talent.commander_of_the_dead)\nactions.garg_setup+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>5\nactions.garg_setup+=/any_dnd,if=!death_and_decay.ticking&debuff.festering_wound.stack>1\nactions.garg_setup+=/summon_gargoyle,use_off_gcd=1,if=buff.commander_of_the_dead.up||!talent.commander_of_the_dead&runic_power>=40\nactions.garg_setup+=/empower_rune_weapon,if=pet.gargoyle.active&pet.gargoyle.remains<=23\nactions.garg_setup+=/unholy_assault,if=pet.gargoyle.active&pet.gargoyle.remains<=23\nactions.garg_setup+=/dark_transformation,if=talent.commander_of_the_dead&runic_power>=40||!talent.commander_of_the_dead\nactions.garg_setup+=/festering_strike,if=debuff.festering_wound.stack=0||talent.apocalypse&cooldown.apocalypse.remains<3*gcd.max&debuff.festering_wound.stack<4||runic_power<40||!talent.apocalypse&!pet.gargoyle.active\nactions.garg_setup+=/death_coil,if=rune<=1\n\n# Racials\nactions.racials+=/arcane_torrent,if=runic_power.deficit>20&(cooldown.summon_gargoyle.remains<gcd&time>15||!talent.summon_gargoyle.enabled||pet.gargoyle.active&rune<2&debuff.festering_wound.stack<1)\nactions.racials+=/blood_fury,if=(buff.blood_fury.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.blood_fury.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.blood_fury.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.blood_fury.duration+3\nactions.racials+=/berserking,if=(buff.berserking.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.berserking.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.berserking.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.berserking.duration+3\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up&(!talent.festermight||buff.festermight.remains<target.time_to_die||buff.unholy_strength.remains<target.time_to_die)\nactions.racials+=/ancestral_call,if=(18>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=18||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=18||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=18\nactions.racials+=/arcane_pulse,if=active_enemies>=2||(rune.deficit>=5&runic_power.deficit>=60)\nactions.racials+=/fireblood,if=(buff.fireblood.duration+3>=pet.gargoyle.remains&pet.gargoyle.active)||(!talent.summon_gargoyle||cooldown.summon_gargoyle.remains>60)&(pet.army_ghoul.active&pet.army_ghoul.remains<=buff.fireblood.duration+3||pet.apoc_ghoul.active&pet.apoc_ghoul.remains<=buff.fireblood.duration+3||active_enemies>=2&death_and_decay.ticking)||boss&fight_remains<=buff.fireblood.duration+3\nactions.racials+=/bag_of_tricks,if=active_enemies=1&(buff.unholy_strength.up||boss&fight_remains<5)\n\n# Single Target\nactions.st+=/death_coil,if=!variable.epidemic_priority&(!variable.pooling_runic_power&variable.spend_rp||boss&fight_remains<10)\nactions.st+=/epidemic,if=variable.epidemic_priority&(!variable.pooling_runic_power&variable.spend_rp||boss&fight_remains<10)\nactions.st+=/any_dnd,if=!death_and_decay.ticking&(active_enemies>=2||talent.unholy_ground&(pet.apoc_ghoul.active&pet.apoc_ghoul.remains>=13||pet.gargoyle.active&pet.gargoyle.remains>8||pet.army_ghoul.active&pet.army_ghoul.remains>8||!variable.pop_wounds&debuff.festering_wound.stack>=4)||talent.defile&(pet.gargoyle.active||pet.apoc_ghoul.active||pet.army_ghoul.active||buff.dark_transformation.up))&(death_knight.fwounded_targets>=cycle_enemies||active_enemies=1)\nactions.st+=/wound_spender,cycle_targets=1,if=variable.pop_wounds||active_enemies>=2&death_and_decay.ticking\nactions.st+=/festering_strike,cycle_targets=1,if=!variable.pop_wounds&debuff.festering_wound.stack<4\nactions.st+=/death_coil\nactions.st+=/wound_spender,cycle_targets=1,if=!variable.pop_wounds&debuff.festering_wound.stack>=4",
},
["Frost DK"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240310,
["author"] = "SimC",
["desc"] = "2024-03-10: Resync with sim.\n\n2024-01-26: Fyralath tweaks.\n\n2024-01-16: Don't use 'react' when you don't care about stacks.\n\n2024-01-10: Resync with SimC.\n\n2024-01-06: Minor SimC update.\n\n2023-12-28: Update for SimC.\n\n2023-12-24 & 25: Fyralath target-swaps; Obliterate.\n\n2023-11-27: There's this axe...\n\n2023-11-17 & 26:  Sim update.\n\n2023-11-13: Sim update.\n\n2023-11-11:  Incremental update.\n\n2023-11-10:  Incremental update from SimC.\n\n2023-11-05:  Patch 10.2 updates.\n\n2023-09-21: Tier 31 prep.\n\n2023-09-10: Minor change for Gathering Storm.\n\n2023-07-12: Patch 10.1.5 minor update.\n\n2023-06-24: Resynced with SimC.\n\n2023-05-28: Minor priority update.\n\n2023-05-24:  Update Obliterate usage with T30.\n\n2023-05-21:  Minor updates.\n\n2023-04-30:  Trinket logic updated from SimC.\n\n2023-03-27:  Minor SimC updates.\n\n2023-03-25:  Updates (mainly to Obliteration).\n\n2023-03-21:  Fix Breath of Sindragosa.\n\n2023-03-13:  Updates for 10.0.7.\n\n2023-02-20:  Additional adjustments for leveling and/or taking Obliteration without ERW.\n\n2023-02-19:  Adjusted variable.pooling_runes such that you are not pooling when you are already at max runes.  It is unclear why this check isn't needed in SimulationCraft, but is required in-game.",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up < 2 & runic_power.deficit < 20 + ( 4 * buff.rune_of_hysteria.up ) & ! variable.two_hand_check",
["action"] = "frost_strike",
["description"] = "Single Target Rotation",
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & set_bonus.tier30_2pc & buff.killing_machine.stack < 2",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & variable.frostscythe_priority",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & talent.icebreaker.rank = 2",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "rune < 4 & runic_power.deficit > 25 + ( 5 * buff.rune_of_hysteria.up ) & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ( variable.rp_buffs || runic_power.deficit < 25 + ( 5 * buff.rune_of_hysteria.up ) || debuff.razorice.stack = 5 & talent.shattering_blade.enabled )",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "variable.rime_buffs",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! death_knight.runeforge.razorice & ( debuff.razorice.stack < 5 || debuff.razorice.remains < gcd.max * 3 )",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runes",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "rune < 4 & runic_power.deficit > 25 & ( ! talent.breath_of_sindragosa.enabled || cooldown.breath_of_sindragosa.remains > cooldown.horn_of_winter.duration )",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "frost_strike",
},
},
["cold_heart"] = {
{
["enabled"] = true,
["criteria"] = "fight_remains < gcd.max & ( rune < 2 || ! buff.killing_machine.up & ( ! variable.two_hand_check & buff.cold_heart.stack >= 4 || variable.two_hand_check & buff.cold_heart.stack > 8 ) || buff.killing_machine.up & ( ! variable.two_hand_check & buff.cold_heart.stack > 8 || variable.two_hand_check & buff.cold_heart.stack > 10 ) )",
["action"] = "chains_of_ice",
["description"] = "Cold Heart",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & buff.cold_heart.stack >= 10 & ( buff.pillar_of_frost.remains < gcd.max * ( 1 + ( talent.frostwyrms_fury.enabled & cooldown.frostwyrms_fury.ready ) ) || buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max )",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & death_knight.runeforge.fallen_crusader & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains_expected > 15 & ( buff.cold_heart.stack >= 10 & buff.unholy_strength.up || buff.cold_heart.stack >= 13 )",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & ! death_knight.runeforge.fallen_crusader & buff.cold_heart.stack >= 10 & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains_expected > 20",
["action"] = "chains_of_ice",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & ( buff.cold_heart.stack >= 14 & ( buff.unholy_strength.up || buff.chaos_bane.up ) || buff.cold_heart.stack >= 19 || cooldown.pillar_of_frost.remains_expected < 3 & buff.cold_heart.stack >= 14 )",
["action"] = "chains_of_ice",
},
},
["obliteration"] = {
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.stack < 2 & buff.pillar_of_frost.remains < gcd.max & buff.rime.up",
["action"] = "howling_blast",
["description"] = "Obliteration Active Rotation",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 1 || ! talent.glacial_advance.enabled ) & buff.killing_machine.up < 2 & buff.pillar_of_frost.remains < gcd.max & ! death_and_decay.ticking",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up < 2 & buff.pillar_of_frost.remains < gcd.max & ! death_and_decay.ticking",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & ( variable.frostscythe_priority || active_enemies > 3 & ! death_and_decay.ticking & equipped.fyralath_the_dreamrender & ( cooldown.rage_of_fyralath_417131.remains < 3 || ! dot.mark_of_fyralath.ticking ) )",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["action"] = "obliterate",
["criteria"] = "buff.killing_machine.up & ! variable.frostscythe_priority",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( ! dot.frost_fever.ticking || buff.rime.up & set_bonus.tier30_2pc & ! variable.rp_buffs )",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & ( ! death_knight.runeforge.razorice & ( ! talent.avalanche.enabled || debuff.razorice.stack < 5 || debuff.razorice.remains < gcd.max * 3 ) || ( ( variable.rp_buffs || rune < 2 ) & active_enemies > 1 ) )",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "! buff.killing_machine.up & ( rune < 2 || variable.rp_buffs || debuff.razorice.stack = 5 & talent.shattering_blade.enabled ) & ! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up & ! buff.killing_machine.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "! buff.killing_machine.up & ! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up & runic_power < 30",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "rune < 1 & runic_power < 30",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & active_enemies >= 2",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["action"] = "frost_strike",
["criteria"] = "! variable.pooling_runic_power & ( ! talent.glacial_advance.enabled || active_enemies = 1 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["action"] = "obliterate",
["cycle_targets"] = 1,
},
},
["breath"] = {
{
["enabled"] = true,
["criteria"] = "variable.rime_buffs & runic_power > ( 45 - ( ( talent.rage_of_the_frozen_champion.enabled * 8 ) + ( 5 * buff.rune_of_hysteria.up ) ) )",
["action"] = "howling_blast",
["description"] = "Breath Active Rotation",
},
{
["enabled"] = true,
["criteria"] = "rune < 2 & runic_power.deficit > 25 + ( 5 * buff.rune_of_hysteria.up )",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["action"] = "obliterate",
["criteria"] = "buff.killing_machine.up & ! variable.frostscythe_priority",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.frostscythe_priority & ( buff.killing_machine.up || runic_power > 45 )",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["action"] = "obliterate",
["criteria"] = "runic_power.deficit > 40 || buff.pillar_of_frost.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "runic_power < 36 & rune.time_to_2 > runic_power / 18",
["action"] = "remorseless_winter",
},
{
["enabled"] = true,
["criteria"] = "variable.st_planning & talent.unholy_ground.enabled & ! death_and_decay.ticking & runic_power.deficit >= 10 || runic_power < 36 & rune.time_to_2 > runic_power / 18",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "runic_power < 36 & rune.time_to_2 > runic_power / 18",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["action"] = "obliterate",
["criteria"] = "runic_power.deficit > 25",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "runic_power < 60",
["action"] = "arcane_torrent",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "buff.rime.up || ! dot.frost_fever.ticking",
["action"] = "howling_blast",
["description"] = "AoE Action List",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & variable.rp_buffs",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & equipped.fyralath_the_dreamrender & ( cooldown.rage_of_fyralath_417131.remains < 3 || ! dot.mark_of_fyralath.ticking )",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & talent.cleaving_strikes.enabled & death_and_decay.ticking & ! variable.frostscythe_priority",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "variable.frostscythe_priority",
["action"] = "frostscythe",
},
{
["enabled"] = true,
["criteria"] = "! variable.frostscythe_priority",
["action"] = "obliterate",
},
{
["enabled"] = true,
["criteria"] = "! variable.pooling_runic_power & ! talent.glacial_advance.enabled",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "rune < 2 & runic_power.deficit > 25",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 25",
["action"] = "arcane_torrent",
},
},
["high_prio"] = {
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.up",
["action"] = "mind_freeze",
["description"] = "Interrupt",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 40 & death_knight.first_ams_cast < time",
["action"] = "antimagic_shell",
},
{
["enabled"] = true,
["criteria"] = "! death_knight.amz_specified & ( death_knight.amz_absorb_percent > 0 & runic_power.deficit > 70 & talent.assimilation.enabled & ( buff.breath_of_sindragosa.up || cooldown.breath_of_sindragosa.ready || ! talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up ) )",
["action"] = "antimagic_zone",
},
{
["enabled"] = true,
["criteria"] = "! dot.frost_fever.ticking & active_enemies >= 2 & ( ( ! talent.obliteration.enabled || talent.obliteration.enabled & ( ! cooldown.pillar_of_frost.ready || buff.pillar_of_frost.up & ! buff.killing_machine.up ) ) || ( equipped.fyralath_the_dreamrender & ! dot.mark_of_fyralath.ticking ) )",
["action"] = "howling_blast",
["description"] = "Maintain Frost Fever, Icy Talons and Unleashed Frenzy",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up",
["action"] = "glacial_advance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.obliteration.enabled & talent.breath_of_sindragosa.enabled & ! buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & variable.rp_buffs & talent.breath_of_sindragosa.enabled & ! buff.breath_of_sindragosa.up & cooldown.breath_of_sindragosa.remains > variable.breath_pooling_time",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & variable.rp_buffs & ! talent.breath_of_sindragosa.enabled & talent.obliteration.enabled & ! buff.pillar_of_frost.up",
["action"] = "frost_strike",
},
{
["enabled"] = true,
["criteria"] = "variable.rw_buffs || variable.adds_remain",
["action"] = "remorseless_winter",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.rime.up & ( talent.rage_of_the_frozen_champion.enabled || talent.avalanche.enabled || talent.icebreaker.enabled )",
["var_name"] = "rime_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.unleashed_frenzy.enabled & ( buff.unleashed_frenzy.remains < gcd.max * 3 || buff.unleashed_frenzy.stack < 3 ) || talent.icy_talons.enabled & ( buff.icy_talons.remains < gcd.max * 3 || buff.icy_talons.stack < 3 )",
["var_name"] = "rp_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ( talent.obliteration.enabled & buff.pillar_of_frost.remains > 10 || ! talent.obliteration.enabled ) || ! talent.pillar_of_frost.enabled & buff.empower_rune_weapon.up || ! talent.pillar_of_frost.enabled & ! talent.empower_rune_weapon.enabled || active_enemies >= 2 & buff.pillar_of_frost.up",
["var_name"] = "cooldown_check",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.frostscythe.enabled & ( buff.killing_machine.up || active_enemies >= 3 ) & ( ! talent.improved_obliterate.enabled & ! talent.frigid_executioner.enabled || ! talent.cleaving_strikes.enabled || talent.cleaving_strikes.enabled & ( active_enemies > 8 || ! death_and_decay.ticking & active_enemies > 4 ) )",
["var_name"] = "frostscythe_priority",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.",
["criteria"] = "runic_power < 35 & rune < 2 & cooldown.pillar_of_frost.remains_expected < 10",
["var_name"] = "oblit_pooling_time",
["action"] = "variable",
["value_else"] = "3",
["value"] = "( ( cooldown.pillar_of_frost.remains_expected + 1 ) / gcd.max ) / ( ( rune + 3 ) * ( runic_power + 5 ) ) * 100",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "breath_pooling_time",
["criteria"] = "runic_power.deficit > 10 & cooldown.breath_of_sindragosa.remains < 10",
["value_else"] = "2",
["value"] = "( ( cooldown.breath_of_sindragosa.remains + 1 ) / gcd.max ) / ( ( rune + 1 ) * ( runic_power + 20 ) ) * 100",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "rune < 4 & talent.obliteration.enabled & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
["var_name"] = "pooling_runes",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.breath_of_sindragosa.enabled & cooldown.breath_of_sindragosa.remains < variable.breath_pooling_time || talent.obliteration.enabled & runic_power < 35 & cooldown.pillar_of_frost.remains_expected < variable.oblit_pooling_time",
["var_name"] = "pooling_runic_power",
},
},
["default"] = {
{
["action"] = "mind_freeze",
["enabled"] = true,
},
{
["action"] = "strangulate",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Choose Action list to run",
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "high_prio",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "racials",
},
{
["enabled"] = true,
["criteria"] = "talent.cold_heart.enabled & ( ! buff.killing_machine.up || talent.breath_of_sindragosa.enabled ) & ( ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled & ! talent.avalanche.enabled ) || fight_remains <= gcd.max )",
["action"] = "call_action_list",
["list_name"] = "cold_heart",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.breath_of_sindragosa.up & talent.obliteration.enabled & buff.pillar_of_frost.up",
["list_name"] = "breath_oblit",
},
{
["enabled"] = true,
["criteria"] = "buff.breath_of_sindragosa.up & ( ! talent.obliteration.enabled || talent.obliteration.enabled & ! buff.pillar_of_frost.up )",
["action"] = "run_action_list",
["list_name"] = "breath",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & buff.pillar_of_frost.up & ! buff.breath_of_sindragosa.up",
["action"] = "run_action_list",
["list_name"] = "obliteration",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by pillar of frost, empower rune weapon, or breath of sindragosa's cooldown. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t1.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t1.cooldown.duration = 0 ) )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( talent.pillar_of_frost.enabled & ! talent.breath_of_sindragosa.enabled & ( trinket.t2.cooldown.duration % cooldown.pillar_of_frost.duration = 0 ) || talent.breath_of_sindragosa.enabled & ( cooldown.breath_of_sindragosa.duration % trinket.t2.cooldown.duration = 0 ) )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs & ( trinket.t2.has_cooldown & ! variable.trinket_2_exclude || ! trinket.t1.has_cooldown ) || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.gathering_storm.enabled || talent.everfrost.enabled",
["var_name"] = "rw_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "main_hand.2h",
["var_name"] = "two_hand_check",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Protects Breath from starving itself on ERW charges depending on anticipated resource gains. More resources enable more aggressive use.",
["criteria"] = "death_knight.ams_absorb_percent > 0.59",
["var_name"] = "erw_pooling_time",
["action"] = "variable",
["value_else"] = "45",
["value"] = "30",
},
},
["racials"] = {
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "blood_fury",
["description"] = "Racial Abilities",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "variable.cooldown_check",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & buff.unholy_strength.up",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "! talent.obliteration.enabled & buff.pillar_of_frost.up & ( buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max * 3 || buff.pillar_of_frost.remains < gcd.max * 3 )",
["action"] = "bag_of_tricks",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["description"] = "Trinkets",
["criteria"] = "dot.mark_of_fyralath.ticking & ! buff.pillar_of_frost.up & ! buff.empower_rune_weapon.up & ! death_and_decay.ticking & ( active_enemies < 2 || dot.frost_fever.ticking )",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["action"] = "algethar_puzzle_box",
["criteria"] = "! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains < 2 & ( ! talent.breath_of_sindragosa.enabled || runic_power > 60 & ( buff.breath_of_sindragosa.up || cooldown.breath_of_sindragosa.remains < 2 ) )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( talent.obliteration.enabled & buff.pillar_of_frost.remains > 10 & ( ! variable.rp_buffs || cooldown.empower_rune_weapon.max_charges < 2 & buff.empower_rune_weapon.up ) || ! talent.obliteration.enabled ) & ( ! buff.pillar_of_frost.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( buff.breath_of_sindragosa.up || buff.pillar_of_frost.up ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( talent.obliteration.enabled & buff.pillar_of_frost.remains > 10 & ( ! variable.rp_buffs || cooldown.empower_rune_weapon.max_charges < 2 & buff.empower_rune_weapon.up ) || ! talent.obliteration.enabled ) & ( ! buff.pillar_of_frost.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( buff.breath_of_sindragosa.up || buff.pillar_of_frost.up ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains ) || ( trinket.t1.cast_time > 0 & ! buff.pillar_of_frost.up || ! trinket.t1.cast_time > 0 & cooldown.pillar_of_frost.remains > 20 ) || talent.pillar_of_frost.enabled & cooldown.pillar_of_frost.remains_expected > 20 || ! talent.pillar_of_frost.enabled )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains ) || ( trinket.t2.cast_time > 0 & ! buff.pillar_of_frost.up || ! trinket.t2.cast_time > 0 & cooldown.pillar_of_frost.remains > 20 ) || talent.pillar_of_frost.enabled & cooldown.pillar_of_frost.remains_expected > 20 || ! talent.pillar_of_frost.enabled )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ( talent.obliteration.enabled & buff.pillar_of_frost.remains < 6 || ! talent.obliteration.enabled ) || ! talent.pillar_of_frost.enabled & buff.empower_rune_weapon.up || ! talent.pillar_of_frost.enabled & ! talent.empower_rune_weapon.enabled || active_enemies >= 2 & buff.pillar_of_frost.up ) || fight_remains < 25",
["action"] = "potion",
["description"] = "Cooldowns",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.empower_rune_weapon.up & rune < 6 & ( ( cooldown.pillar_of_frost.remains_expected < 7 & buff.bloodlust.up ) || ( ( active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 12 ) || variable.st_planning ) & cooldown.pillar_of_frost.ready ) ) || fight_remains < 20",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["criteria"] = "buff.breath_of_sindragosa.up & ! buff.empower_rune_weapon.up & ( ( time < 10 & buff.bloodlust.up ) || ( runic_power < 70 & rune < 3 & ( cooldown.breath_of_sindragosa.remains > variable.erw_pooling_time || full_recharge_time < 10 ) ) )",
["action"] = "empower_rune_weapon",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & ! buff.empower_rune_weapon.up & rune < 5 & ( cooldown.pillar_of_frost.remains_expected < 7 || buff.pillar_of_frost.up || ! talent.pillar_of_frost.enabled )",
["action"] = "empower_rune_weapon",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains < 3 & ( variable.adds_remain || variable.st_planning ) || fight_remains < 15",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning )",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled & ( variable.adds_remain || variable.st_planning )",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc & buff.chilling_rage.remains < 3",
["action"] = "chill_streak",
},
{
["enabled"] = true,
["criteria"] = "! set_bonus.tier31_2pc & active_enemies >= 2 & ( ! death_and_decay.ticking & talent.cleaving_strikes.enabled || ! talent.cleaving_strikes.enabled || active_enemies <= 5 )",
["action"] = "chill_streak",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ( variable.adds_remain || variable.st_planning ) & ( buff.empower_rune_weapon.up || cooldown.empower_rune_weapon.remains ) || fight_remains < 12",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning ) & ( ! talent.icecap.enabled & ( runic_power > 70 || cooldown.breath_of_sindragosa.remains > 40 ) || talent.icecap.enabled & ( cooldown.breath_of_sindragosa.remains > 5 ) ) || buff.breath_of_sindragosa.up",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "talent.icecap.enabled & ! talent.obliteration.enabled & ! talent.breath_of_sindragosa.enabled & ( variable.adds_remain || variable.st_planning )",
["action"] = "pillar_of_frost",
},
{
["enabled"] = true,
["criteria"] = "! buff.breath_of_sindragosa.up & ( runic_power > 50 & cooldown.empower_rune_weapon.ready || runic_power > 60 & cooldown.empower_rune_weapon.remains_expected < 30 || runic_power > 80 & cooldown.empower_rune_weapon.remains_expected > 30 ) & ( variable.adds_remain || variable.st_planning || fight_remains < 30 )",
["action"] = "breath_of_sindragosa",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.remains < gcd.max * 2 & buff.pillar_of_frost.up & ! talent.obliteration.enabled || ! talent.pillar_of_frost.enabled ) & ( ! raid_event.adds.exists || ( raid_event.adds.in > 15 + raid_event.adds.duration || talent.absolute_zero.enabled & raid_event.adds.in > 15 + raid_event.adds.duration ) ) || fight_remains < 3",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up || raid_event.adds.exists & raid_event.adds.up & raid_event.adds.in > cooldown.pillar_of_frost.remains_expected - raid_event.adds.in - raid_event.adds.duration ) & ( buff.pillar_of_frost.remains < gcd.max * 2 || raid_event.adds.exists & raid_event.adds.remains < gcd.max * 2 )",
["action"] = "frostwyrms_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.obliteration.enabled & ( talent.pillar_of_frost.enabled & buff.pillar_of_frost.up & ! variable.two_hand_check || ! buff.pillar_of_frost.up & variable.two_hand_check & cooldown.pillar_of_frost.remains || ! talent.pillar_of_frost.enabled ) & ( ( buff.pillar_of_frost.remains < gcd.max || buff.unholy_strength.up & buff.unholy_strength.remains < gcd.max ) & ( debuff.razorice.stack = 5 || ! death_knight.runeforge.razorice & ! talent.glacial_advance.enabled ) )",
["action"] = "frostwyrms_fury",
},
{
["action"] = "raise_dead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 5 & target.time_to_pct_35 < 5 & active_enemies <= 2 & ( talent.obliteration.enabled & ( buff.pillar_of_frost.up & ! buff.killing_machine.up & rune > 2 || ! buff.pillar_of_frost.up ) || talent.breath_of_sindragosa.enabled & ( buff.breath_of_sindragosa.up & runic_power > 50 || ! buff.breath_of_sindragosa.up ) || ! talent.breath_of_sindragosa.enabled & ! talent.obliteration.enabled )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & variable.adds_remain & ( buff.pillar_of_frost.up & buff.pillar_of_frost.remains > 5 & buff.pillar_of_frost.remains < 11 || ! buff.pillar_of_frost.up & cooldown.pillar_of_frost.remains > 10 || fight_remains < 11 ) & ( active_enemies > 5 || talent.cleaving_strikes.enabled & active_enemies >= 2 )",
["action"] = "any_dnd",
},
},
["breath_oblit"] = {
{
["enabled"] = true,
["criteria"] = "buff.killing_machine.up & variable.frostscythe_priority",
["action"] = "frostscythe",
["description"] = "Breath & Obliteration Active Rotation",
},
{
["enabled"] = true,
["action"] = "obliterate",
["criteria"] = "buff.killing_machine.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.rime.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "! buff.killing_machine.up",
["action"] = "howling_blast",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 25",
["action"] = "horn_of_winter",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
},
},
["version"] = 20240310,
["warnings"] = "The import for 'single_target' required some automated changes.\nLine 6: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 11: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\n\nThe import for 'cold_heart' required some automated changes.\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 2: Converted 'talent.frostwyrms_fury' to 'talent.frostwyrms_fury.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'breath' required some automated changes.\nLine 1: Converted 'talent.rage_of_the_frozen_champion' to 'talent.rage_of_the_frozen_champion.enabled' (1x).\nLine 6: Converted operations in 'runic_power<36&rune.time_to_2>runic_power%18' to 'runic_power<36&rune.time_to_2>runic_power/18'.\nLine 7: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 7: Converted operations in 'variable.st_planning&talent.unholy_ground.enabled&!death_and_decay.ticking&runic_power.deficit>=10||runic_power<36&rune.time_to_2>runic_power%18' to 'variable.st_planning&talent.unholy_ground.enabled&!death_and_decay.ticking&runic_power.deficit>=10||runic_power<36&rune.time_to_2>runic_power/18'.\nLine 8: Converted operations in 'runic_power<36&rune.time_to_2>runic_power%18' to 'runic_power<36&rune.time_to_2>runic_power/18'.\n\nThe import for 'variables' required some automated changes.\nLine 3: Converted 'talent.rage_of_the_frozen_champion' to 'talent.rage_of_the_frozen_champion.enabled' (1x).\nLine 3: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 3: Converted 'talent.icebreaker' to 'talent.icebreaker.enabled' (1x).\nLine 4: Converted 'talent.unleashed_frenzy' to 'talent.unleashed_frenzy.enabled' (1x).\nLine 4: Converted 'talent.icy_talons' to 'talent.icy_talons.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.empower_rune_weapon' to 'talent.empower_rune_weapon.enabled' (1x).\nLine 6: Converted 'talent.frostscythe' to 'talent.frostscythe.enabled' (1x).\nLine 6: Converted 'talent.improved_obliterate' to 'talent.improved_obliterate.enabled' (1x).\nLine 6: Converted 'talent.frigid_executioner' to 'talent.frigid_executioner.enabled' (1x).\nLine 6: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 6: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 7: Converted operations in '((cooldown.pillar_of_frost.remains_expected+1)%gcd.max)%((rune+3)*(runic_power+5))*100' to '((cooldown.pillar_of_frost.remains_expected+1)/gcd.max)/((rune+3)*(runic_power+5))*100'.\nLine 8: Converted operations in '((cooldown.breath_of_sindragosa.remains+1)%gcd.max)%((rune+1)*(runic_power+20))*100' to '((cooldown.breath_of_sindragosa.remains+1)/gcd.max)/((rune+1)*(runic_power+20))*100'.\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'obliteration' required some automated changes.\nLine 2: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 7: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 8: Converted 'talent.shattering_blade' to 'talent.shattering_blade.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 10: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 14: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\n\nThe import for 'racials' required some automated changes.\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 8: Converted 'talent.cold_heart' to 'talent.cold_heart.enabled' (1x).\nLine 8: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 8: Converted 'talent.avalanche' to 'talent.avalanche.enabled' (1x).\nLine 9: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 11: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 1: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 2: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 2: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted operations in 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t1.cooldown.duration=0))' to 'trinket.t1.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t1.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t1.cooldown.duration=0))'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted operations in 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%%trinket.t2.cooldown.duration=0))' to 'trinket.t2.has_use_buff&(talent.pillar_of_frost.enabled&!talent.breath_of_sindragosa.enabled&(trinket.t2.cooldown.duration%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa.enabled&(cooldown.breath_of_sindragosa.duration%trinket.t2.cooldown.duration=0))'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 5: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 5: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 5: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 6: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 6: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 6: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 6: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 6: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 7: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 7: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 7: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.t2.has_cooldown&!variable.trinket_2_exclude||!trinket.t1.has_cooldown)||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync)*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\nLine 8: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 8: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 9: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 10: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'talent.gathering_storm' to 'talent.gathering_storm.enabled' (1x).\nLine 11: Converted 'talent.everfrost' to 'talent.everfrost.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 1: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 1: Converted 'talent.empower_rune_weapon' to 'talent.empower_rune_weapon.enabled' (1x).\nLine 2: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 9: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 9: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 11: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 11: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 11: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 12: Converted 'talent.icecap' to 'talent.icecap.enabled' (1x).\nLine 12: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 12: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 14: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 14: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 14: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 14: Converted 'talent.absolute_zero' to 'talent.absolute_zero.enabled' (1x).\nLine 15: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 16: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 16: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 16: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 16: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\nLine 18: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 18: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 18: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 18: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 19: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 3: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 5: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 6: Converted 'talent.pillar_of_frost' to 'talent.pillar_of_frost.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'high_prio' required some automated changes.\nLine 3: Converted 'talent.assimilation' to 'talent.assimilation.enabled' (1x).\nLine 3: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 4: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 5: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 6: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 7: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\nLine 8: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 9: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 10: Converted 'talent.breath_of_sindragosa' to 'talent.breath_of_sindragosa.enabled' (1x).\nLine 10: Converted 'talent.obliteration' to 'talent.obliteration.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.cleaving_strikes' to 'talent.cleaving_strikes.enabled' (1x).\nLine 8: Converted 'talent.glacial_advance' to 'talent.glacial_advance.enabled' (1x).\n\nImported 13 action lists.\n",
["spec"] = 251,
["profile"] = "actions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Evaluates a trinkets cooldown, divided by pillar of frost, empower rune weapon, or breath of sindragosa's cooldown. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.1.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.1.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(talent.pillar_of_frost&!talent.breath_of_sindragosa&(trinket.2.cooldown.duration%%cooldown.pillar_of_frost.duration=0)||talent.breath_of_sindragosa&(cooldown.breath_of_sindragosa.duration%%trinket.2.cooldown.duration=0))\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs&(trinket.2.has_cooldown&!variable.trinket_2_exclude||!trinket.1.has_cooldown)||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync)*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\nactions.precombat+=/variable,name=rw_buffs,value=talent.gathering_storm||talent.everfrost\nactions.precombat+=/variable,name=two_hand_check,value=main_hand.2h\n# Protects Breath from starving itself on ERW charges depending on anticipated resource gains. More resources enable more aggressive use.\nactions.precombat+=/variable,name=erw_pooling_time,op=setif,value=30,value_else=45,condition=death_knight.ams_absorb_percent>0.59\n\nactions+=/mind_freeze\nactions+=/strangulate\n# Choose Action list to run\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=high_prio\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=racials\nactions+=/call_action_list,name=cold_heart,if=talent.cold_heart&(!buff.killing_machine.up||talent.breath_of_sindragosa)&((debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance&!talent.avalanche)||fight_remains<=gcd)\nactions+=/run_action_list,name=breath_oblit,strict=1,if=buff.breath_of_sindragosa.up&talent.obliteration&buff.pillar_of_frost.up\nactions+=/run_action_list,name=breath,if=buff.breath_of_sindragosa.up&(!talent.obliteration||talent.obliteration&!buff.pillar_of_frost.up)\nactions+=/run_action_list,name=obliteration,if=talent.obliteration&buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=2\nactions+=/call_action_list,name=single_target,strict=1,if=active_enemies=1\n\n# AoE Action List\nactions.aoe+=/howling_blast,if=buff.rime.up||!dot.frost_fever.ticking\nactions.aoe+=/glacial_advance,if=!variable.pooling_runic_power&variable.rp_buffs\nactions.aoe+=/frostscythe,if=!death_and_decay.ticking&equipped.fyralath_the_dreamrender&(cooldown.rage_of_fyralath_417131.remains<3||!dot.mark_of_fyralath.ticking)\nactions.aoe+=/obliterate,if=buff.killing_machine.up&talent.cleaving_strikes&death_and_decay.ticking&!variable.frostscythe_priority\nactions.aoe+=/glacial_advance,if=!variable.pooling_runic_power\nactions.aoe+=/frostscythe,if=variable.frostscythe_priority\nactions.aoe+=/obliterate,if=!variable.frostscythe_priority\nactions.aoe+=/frost_strike,if=!variable.pooling_runic_power&!talent.glacial_advance\nactions.aoe+=/horn_of_winter,if=rune<2&runic_power.deficit>25\nactions.aoe+=/arcane_torrent,if=runic_power.deficit>25\n\n# Breath Active Rotation\nactions.breath+=/howling_blast,if=variable.rime_buffs&runic_power>(45-((talent.rage_of_the_frozen_champion*8)+(5*buff.rune_of_hysteria.up)))\nactions.breath+=/horn_of_winter,if=rune<2&runic_power.deficit>25+(5*buff.rune_of_hysteria.up)\nactions.breath+=/obliterate,cycle_targets=1,if=buff.killing_machine.up&!variable.frostscythe_priority\nactions.breath+=/frostscythe,if=variable.frostscythe_priority&(buff.killing_machine.up||runic_power>45)\nactions.breath+=/obliterate,cycle_targets=1,if=runic_power.deficit>40||buff.pillar_of_frost.up\nactions.breath+=/remorseless_winter,if=runic_power<36&rune.time_to_2>runic_power%18\nactions.breath+=/death_and_decay,if=variable.st_planning&talent.unholy_ground&!death_and_decay.ticking&runic_power.deficit>=10||runic_power<36&rune.time_to_2>runic_power%18\nactions.breath+=/howling_blast,if=runic_power<36&rune.time_to_2>runic_power%18\nactions.breath+=/obliterate,cycle_targets=1,if=runic_power.deficit>25\nactions.breath+=/howling_blast,if=buff.rime.up\nactions.breath+=/arcane_torrent,if=runic_power<60\n\n# Breath & Obliteration Active Rotation\nactions.breath_oblit+=/frostscythe,if=buff.killing_machine.up&variable.frostscythe_priority\nactions.breath_oblit+=/obliterate,cycle_targets=1,if=buff.killing_machine.up\nactions.breath_oblit+=/howling_blast,if=buff.rime.up\nactions.breath_oblit+=/howling_blast,if=!buff.killing_machine.up\nactions.breath_oblit+=/horn_of_winter,if=runic_power.deficit>25\nactions.breath_oblit+=/arcane_torrent,if=runic_power.deficit>20\n\n# Cold Heart\nactions.cold_heart+=/chains_of_ice,if=fight_remains<gcd&(rune<2||!buff.killing_machine.up&(!variable.two_hand_check&buff.cold_heart.stack>=4||variable.two_hand_check&buff.cold_heart.stack>8)||buff.killing_machine.up&(!variable.two_hand_check&buff.cold_heart.stack>8||variable.two_hand_check&buff.cold_heart.stack>10))\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&buff.pillar_of_frost.up&buff.cold_heart.stack>=10&(buff.pillar_of_frost.remains<gcd*(1+(talent.frostwyrms_fury&cooldown.frostwyrms_fury.ready))||buff.unholy_strength.up&buff.unholy_strength.remains<gcd)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&death_knight.runeforge.fallen_crusader&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains_expected>15&(buff.cold_heart.stack>=10&buff.unholy_strength.up||buff.cold_heart.stack>=13)\nactions.cold_heart+=/chains_of_ice,if=!talent.obliteration&!death_knight.runeforge.fallen_crusader&buff.cold_heart.stack>=10&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains_expected>20\nactions.cold_heart+=/chains_of_ice,if=talent.obliteration&!buff.pillar_of_frost.up&(buff.cold_heart.stack>=14&(buff.unholy_strength.up||buff.chaos_bane.up)||buff.cold_heart.stack>=19||cooldown.pillar_of_frost.remains_expected<3&buff.cold_heart.stack>=14)\n\n# Cooldowns\nactions.cooldowns+=/potion,if=(talent.pillar_of_frost&buff.pillar_of_frost.up&(talent.obliteration&buff.pillar_of_frost.remains<6||!talent.obliteration)||!talent.pillar_of_frost&buff.empower_rune_weapon.up||!talent.pillar_of_frost&!talent.empower_rune_weapon||active_enemies>=2&buff.pillar_of_frost.up)||fight_remains<25\nactions.cooldowns+=/empower_rune_weapon,if=talent.obliteration&!buff.empower_rune_weapon.up&rune<6&((cooldown.pillar_of_frost.remains_expected<7&buff.bloodlust.up)||((active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>12)||variable.st_planning)&cooldown.pillar_of_frost.ready))||fight_remains<20\nactions.cooldowns+=/empower_rune_weapon,use_off_gcd=1,if=buff.breath_of_sindragosa.up&!buff.empower_rune_weapon.up&((time<10&buff.bloodlust.up)||(runic_power<70&rune<3&(cooldown.breath_of_sindragosa.remains>variable.erw_pooling_time||full_recharge_time<10)))\nactions.cooldowns+=/empower_rune_weapon,use_off_gcd=1,if=!talent.breath_of_sindragosa&!talent.obliteration&!buff.empower_rune_weapon.up&rune<5&(cooldown.pillar_of_frost.remains_expected<7||buff.pillar_of_frost.up||!talent.pillar_of_frost)\nactions.cooldowns+=/abomination_limb,if=talent.obliteration&!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains<3&(variable.adds_remain||variable.st_planning)||fight_remains<15\nactions.cooldowns+=/abomination_limb,if=talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/abomination_limb,if=!talent.breath_of_sindragosa&!talent.obliteration&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/chill_streak,if=set_bonus.tier31_2pc&buff.chilling_rage.remains<3\nactions.cooldowns+=/chill_streak,if=!set_bonus.tier31_2pc&active_enemies>=2&(!death_and_decay.ticking&talent.cleaving_strikes||!talent.cleaving_strikes||active_enemies<=5)\nactions.cooldowns+=/pillar_of_frost,if=talent.obliteration&(variable.adds_remain||variable.st_planning)&(buff.empower_rune_weapon.up||cooldown.empower_rune_weapon.remains)||fight_remains<12\nactions.cooldowns+=/pillar_of_frost,if=talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)&(!talent.icecap&(runic_power>70||cooldown.breath_of_sindragosa.remains>40)||talent.icecap&(cooldown.breath_of_sindragosa.remains>5))||buff.breath_of_sindragosa.up\nactions.cooldowns+=/pillar_of_frost,if=talent.icecap&!talent.obliteration&!talent.breath_of_sindragosa&(variable.adds_remain||variable.st_planning)\nactions.cooldowns+=/breath_of_sindragosa,if=!buff.breath_of_sindragosa.up&(runic_power>50&cooldown.empower_rune_weapon.ready||runic_power>60&cooldown.empower_rune_weapon.remains_expected<30||runic_power>80&cooldown.empower_rune_weapon.remains_expected>30)&(variable.adds_remain||variable.st_planning||fight_remains<30)\nactions.cooldowns+=/frostwyrms_fury,if=active_enemies=1&(talent.pillar_of_frost&buff.pillar_of_frost.remains<gcd*2&buff.pillar_of_frost.up&!talent.obliteration||!talent.pillar_of_frost)&(!raid_event.adds.exists||(raid_event.adds.in>15+raid_event.adds.duration||talent.absolute_zero&raid_event.adds.in>15+raid_event.adds.duration))||fight_remains<3\nactions.cooldowns+=/frostwyrms_fury,if=active_enemies>=2&(talent.pillar_of_frost&buff.pillar_of_frost.up||raid_event.adds.exists&raid_event.adds.up&raid_event.adds.in>cooldown.pillar_of_frost.remains_expected-raid_event.adds.in-raid_event.adds.duration)&(buff.pillar_of_frost.remains<gcd*2||raid_event.adds.exists&raid_event.adds.remains<gcd*2)\nactions.cooldowns+=/frostwyrms_fury,if=talent.obliteration&(talent.pillar_of_frost&buff.pillar_of_frost.up&!variable.two_hand_check||!buff.pillar_of_frost.up&variable.two_hand_check&cooldown.pillar_of_frost.remains||!talent.pillar_of_frost)&((buff.pillar_of_frost.remains<gcd||buff.unholy_strength.up&buff.unholy_strength.remains<gcd)&(debuff.razorice.stack=5||!death_knight.runeforge.razorice&!talent.glacial_advance))\nactions.cooldowns+=/raise_dead\nactions.cooldowns+=/soul_reaper,if=fight_remains>5&target.time_to_pct_35<5&active_enemies<=2&(talent.obliteration&(buff.pillar_of_frost.up&!buff.killing_machine.up&rune>2||!buff.pillar_of_frost.up)||talent.breath_of_sindragosa&(buff.breath_of_sindragosa.up&runic_power>50||!buff.breath_of_sindragosa.up)||!talent.breath_of_sindragosa&!talent.obliteration)\nactions.cooldowns+=/any_dnd,if=!death_and_decay.ticking&variable.adds_remain&(buff.pillar_of_frost.up&buff.pillar_of_frost.remains>5&buff.pillar_of_frost.remains<11||!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains>10||fight_remains<11)&(active_enemies>5||talent.cleaving_strikes&active_enemies>=2)\n\n### High Priority Actions Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=51271/pillar-of-frost'>Pillar of Frost</a> is up, as well as <a href='https://www.wowhead.com/spell=152279/breath-of-sindragosa'>Breath of Sindragosa</a> or on cooldown if <a href='https://www.wowhead.com/spell=51271/pillar-of-frost'>Pillar of Frost</a> and <a href='https://www.wowhead.com/spell=152279/breath-of-sindragosa'>Breath of Sindragosa</a> are not talented\n## ctions.high_prio+=/invoke_external_buff,name=power_infusion,if=(buff.pillar_of_frost.up||!talent.pillar_of_frost)&(talent.obliteration||talent.breath_of_sindragosa&buff.breath_of_sindragosa.up||!talent.breath_of_sindragosa&!talent.obliteration)\n# Interrupt\nactions.high_prio+=/mind_freeze,if=target.debuff.casting.up\nactions.high_prio+=/antimagic_shell,if=runic_power.deficit>40&death_knight.first_ams_cast<time\nactions.high_prio+=/antimagic_zone,if=!death_knight.amz_specified&(death_knight.amz_absorb_percent>0&runic_power.deficit>70&talent.assimilation&(buff.breath_of_sindragosa.up||cooldown.breath_of_sindragosa.ready||!talent.breath_of_sindragosa&!buff.pillar_of_frost.up))\n## actions.high_prio+=/antimagic_zone,if=death_knight.amz_specified&buff.amz_timing.up\n# Maintain Frost Fever, Icy Talons and Unleashed Frenzy\nactions.high_prio+=/howling_blast,if=!dot.frost_fever.ticking&active_enemies>=2&((!talent.obliteration||talent.obliteration&(!cooldown.pillar_of_frost.ready||buff.pillar_of_frost.up&!buff.killing_machine.up))||(equipped.fyralath_the_dreamrender&!dot.mark_of_fyralath.ticking))\nactions.high_prio+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/glacial_advance,if=active_enemies>=2&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up\nactions.high_prio+=/frost_strike,if=active_enemies=1&variable.rp_buffs&talent.obliteration&talent.breath_of_sindragosa&!buff.pillar_of_frost.up&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/frost_strike,if=active_enemies=1&variable.rp_buffs&talent.breath_of_sindragosa&!buff.breath_of_sindragosa.up&cooldown.breath_of_sindragosa.remains>variable.breath_pooling_time\nactions.high_prio+=/frost_strike,if=active_enemies=1&variable.rp_buffs&!talent.breath_of_sindragosa&talent.obliteration&!buff.pillar_of_frost.up\nactions.high_prio+=/remorseless_winter,if=variable.rw_buffs||variable.adds_remain\n\n# Obliteration Active Rotation\nactions.obliteration+=/howling_blast,if=buff.killing_machine.stack<2&buff.pillar_of_frost.remains<gcd&buff.rime.up\nactions.obliteration+=/frost_strike,if=(active_enemies<=1||!talent.glacial_advance)&buff.killing_machine.up<2&buff.pillar_of_frost.remains<gcd&!death_and_decay.ticking\nactions.obliteration+=/glacial_advance,if=buff.killing_machine.up<2&buff.pillar_of_frost.remains<gcd&!death_and_decay.ticking\nactions.obliteration+=/frostscythe,if=buff.killing_machine.up&(variable.frostscythe_priority||active_enemies>3&!death_and_decay.ticking&equipped.fyralath_the_dreamrender&(cooldown.rage_of_fyralath_417131.remains<3||!dot.mark_of_fyralath.ticking))\nactions.obliteration+=/obliterate,cycle_targets=1,if=buff.killing_machine.up&!variable.frostscythe_priority\nactions.obliteration+=/howling_blast,if=!buff.killing_machine.up&(!dot.frost_fever.ticking||buff.rime.up&set_bonus.tier30_2pc&!variable.rp_buffs)\nactions.obliteration+=/glacial_advance,if=!buff.killing_machine.up&(!death_knight.runeforge.razorice&(!talent.avalanche||debuff.razorice.stack<5||debuff.razorice.remains<gcd*3)||((variable.rp_buffs||rune<2)&active_enemies>1))\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!buff.killing_machine.up&(rune<2||variable.rp_buffs||debuff.razorice.stack=5&talent.shattering_blade)&!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=buff.rime.up&!buff.killing_machine.up\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!buff.killing_machine.up&!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=!buff.killing_machine.up&runic_power<30\nactions.obliteration+=/arcane_torrent,if=rune<1&runic_power<30\nactions.obliteration+=/glacial_advance,if=!variable.pooling_runic_power&active_enemies>=2\nactions.obliteration+=/frost_strike,cycle_targets=1,if=!variable.pooling_runic_power&(!talent.glacial_advance||active_enemies=1)\nactions.obliteration+=/howling_blast,if=buff.rime.up\nactions.obliteration+=/obliterate,cycle_targets=1\n\n# Racial Abilities\nactions.racials+=/blood_fury,if=variable.cooldown_check\nactions.racials+=/berserking,if=variable.cooldown_check\nactions.racials+=/arcane_pulse,if=variable.cooldown_check\nactions.racials+=/lights_judgment,if=variable.cooldown_check\nactions.racials+=/ancestral_call,if=variable.cooldown_check\nactions.racials+=/fireblood,if=variable.cooldown_check\nactions.racials+=/bag_of_tricks,if=talent.obliteration&!buff.pillar_of_frost.up&buff.unholy_strength.up\nactions.racials+=/bag_of_tricks,if=!talent.obliteration&buff.pillar_of_frost.up&(buff.unholy_strength.up&buff.unholy_strength.remains<gcd*3||buff.pillar_of_frost.remains<gcd*3)\n\n# Single Target Rotation\nactions.single_target+=/frost_strike,if=buff.killing_machine.up<2&runic_power.deficit<20+(4*buff.rune_of_hysteria.up)&!variable.two_hand_check\nactions.single_target+=/howling_blast,if=buff.rime.up&set_bonus.tier30_2pc&buff.killing_machine.stack<2\nactions.single_target+=/frostscythe,if=buff.killing_machine.up&variable.frostscythe_priority\nactions.single_target+=/obliterate,if=buff.killing_machine.up\nactions.single_target+=/howling_blast,if=buff.rime.up&talent.icebreaker.rank=2\nactions.single_target+=/horn_of_winter,if=rune<4&runic_power.deficit>25+(5*buff.rune_of_hysteria.up)&talent.obliteration&talent.breath_of_sindragosa\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power&(variable.rp_buffs||runic_power.deficit<25+(5*buff.rune_of_hysteria.up)||debuff.razorice.stack=5&talent.shattering_blade)\nactions.single_target+=/howling_blast,if=variable.rime_buffs\nactions.single_target+=/glacial_advance,if=!variable.pooling_runic_power&!death_knight.runeforge.razorice&(debuff.razorice.stack<5||debuff.razorice.remains<gcd*3)\nactions.single_target+=/obliterate,if=!variable.pooling_runes\nactions.single_target+=/horn_of_winter,if=rune<4&runic_power.deficit>25&(!talent.breath_of_sindragosa||cooldown.breath_of_sindragosa.remains>cooldown.horn_of_winter.duration)\nactions.single_target+=/arcane_torrent,if=runic_power.deficit>20\nactions.single_target+=/frost_strike,if=!variable.pooling_runic_power\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&!buff.pillar_of_frost.up&!buff.empower_rune_weapon.up&!death_and_decay.ticking&(active_enemies<2||dot.frost_fever.ticking)\nactions.trinkets+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=!buff.pillar_of_frost.up&cooldown.pillar_of_frost.remains<2&(!talent.breath_of_sindragosa||runic_power>60&(buff.breath_of_sindragosa.up||cooldown.breath_of_sindragosa.remains<2))\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Pillar of Frost.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(talent.obliteration&buff.pillar_of_frost.remains>10&(!variable.rp_buffs||cooldown.empower_rune_weapon.max_charges<2&buff.empower_rune_weapon.up)||!talent.obliteration)&(!buff.pillar_of_frost.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&(buff.breath_of_sindragosa.up||buff.pillar_of_frost.up)&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(talent.obliteration&buff.pillar_of_frost.remains>10&(!variable.rp_buffs||cooldown.empower_rune_weapon.max_charges<2&buff.empower_rune_weapon.up)||!talent.obliteration)&(!buff.pillar_of_frost.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&(buff.breath_of_sindragosa.up||buff.pillar_of_frost.up)&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&((variable.damage_trinket_priority=1||trinket.2.cooldown.remains)||(trinket.1.cast_time>0&!buff.pillar_of_frost.up||!trinket.1.cast_time>0&cooldown.pillar_of_frost.remains>20)||talent.pillar_of_frost&cooldown.pillar_of_frost.remains_expected>20||!talent.pillar_of_frost)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&((variable.damage_trinket_priority=2||trinket.1.cooldown.remains)||(trinket.2.cast_time>0&!buff.pillar_of_frost.up||!trinket.2.cast_time>0&cooldown.pillar_of_frost.remains>20)||talent.pillar_of_frost&cooldown.pillar_of_frost.remains_expected>20||!talent.pillar_of_frost)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=rime_buffs,value=buff.rime.up&(talent.rage_of_the_frozen_champion||talent.avalanche||talent.icebreaker)\nactions.variables+=/variable,name=rp_buffs,value=talent.unleashed_frenzy&(buff.unleashed_frenzy.remains<gcd.max*3||buff.unleashed_frenzy.stack<3)||talent.icy_talons&(buff.icy_talons.remains<gcd.max*3||buff.icy_talons.stack<3)\nactions.variables+=/variable,name=cooldown_check,value=talent.pillar_of_frost&buff.pillar_of_frost.up&(talent.obliteration&buff.pillar_of_frost.remains>10||!talent.obliteration)||!talent.pillar_of_frost&buff.empower_rune_weapon.up||!talent.pillar_of_frost&!talent.empower_rune_weapon||active_enemies>=2&buff.pillar_of_frost.up\nactions.variables+=/variable,name=frostscythe_priority,value=talent.frostscythe&(buff.killing_machine.up||active_enemies>=3)&(!talent.improved_obliterate&!talent.frigid_executioner||!talent.cleaving_strikes||talent.cleaving_strikes&(active_enemies>8||!death_and_decay.ticking&active_enemies>4))\n# Formulaic approach to determine the time before these abilities come off cooldown that the simulation should star to pool resources. Capped at 15s in the run_action_list call.\nactions.variables+=/variable,name=oblit_pooling_time,op=setif,value=((cooldown.pillar_of_frost.remains_expected+1)%gcd.max)%((rune+3)*(runic_power+5))*100,value_else=3,condition=runic_power<35&rune<2&cooldown.pillar_of_frost.remains_expected<10\nactions.variables+=/variable,name=breath_pooling_time,op=setif,value=((cooldown.breath_of_sindragosa.remains+1)%gcd.max)%((rune+1)*(runic_power+20))*100,value_else=2,condition=runic_power.deficit>10&cooldown.breath_of_sindragosa.remains<10\nactions.variables+=/variable,name=pooling_runes,value=rune<4&talent.obliteration&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time\nactions.variables+=/variable,name=pooling_runic_power,value=talent.breath_of_sindragosa&cooldown.breath_of_sindragosa.remains<variable.breath_pooling_time||talent.obliteration&runic_power<35&cooldown.pillar_of_frost.remains_expected<variable.oblit_pooling_time",
},
["Survival"] = {
["source"] = "# https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231206,
["author"] = "SimC",
["desc"] = "2023-12-06: Tweak Hunter's Mark.\n\n2023-11-17: Tweak Harpoon.\n\n2023-11-16: Hunter's Mark.\n\n2023-11-14: Fix KS macro.\n\n2023-11-13: Overdue 10.2 update.\n\n2023-08-02: Small tweak to Kill Command usage.\n\n2023-07-11: Patch 10.1.5 update.\n\n2023-07-02: Wildfire Bomb in cleave is simplified dramatically.\n\n2023-06-25: Import latest updates (includes use of Djaruun).\n\n2023-05-21: Kill Shot moved higher in priority.\n\n2023-05-12: Added setting to use Kill Shot during Coordinated Assault for folks using Kill Shot macros.\n\n2023-05-08: High priority Kill Command in cleave should be used for targets that will live long enough to matter.\n\n2023-04-26: Update from SimulationCraft.",
["lists"] = {
["default"] = {
{
["action"] = "muzzle",
["enabled"] = true,
},
{
["action"] = "tranquilizing_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( settings.mark_any || target.is_boss ) & active_dot.hunters_mark = 0 & target.health_pct > 80 & ( group || target.time_to_pct_80 > gcd.max * 20 )",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 3",
["list_name"] = "st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "cleave",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault_empower.up & talent.birds_of_prey.enabled || coordinated_assault_kill_shot",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "cooldown.death_chakram.duration = 45",
["action"] = "death_chakram",
},
{
["action"] = "wildfire_bomb",
["enabled"] = true,
},
{
["action"] = "stampede",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.fury_of_the_eagle.remains || ! talent.fury_of_the_eagle.enabled",
["action"] = "coordinated_assault",
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.wildfire_bomb.full_recharge_time > spell_targets / 2",
["action"] = "carve",
},
{
["enabled"] = true,
["name"] = "djaruun_pillar_of_the_elder_flame",
["action"] = "djaruun_pillar_of_the_elder_flame",
},
{
["enabled"] = true,
["criteria"] = "cooldown.butchery.full_recharge_time > cast_time & raid_event.adds.exists || ! talent.butchery.enabled",
["action"] = "fury_of_the_eagle",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.exists",
["action"] = "butchery",
},
{
["enabled"] = true,
["criteria"] = "( full_recharge_time < gcd.max || dot.shrapnel_bomb.ticking & ( dot.internal_bleeding.stack < 2 || dot.shrapnel_bomb.remains < gcd.max || raid_event.adds.remains < 10 ) ) & ! raid_event.adds.exists",
["action"] = "butchery",
},
{
["enabled"] = true,
["criteria"] = "! raid_event.adds.exists",
["action"] = "fury_of_the_eagle",
},
{
["enabled"] = true,
["criteria"] = "dot.shrapnel_bomb.ticking",
["action"] = "carve",
},
{
["enabled"] = true,
["criteria"] = "( ! next_wi_bomb.shrapnel || ! talent.wildfire_infusion.enabled )",
["action"] = "butchery",
},
{
["enabled"] = true,
["criteria"] = "debuff.latent_poison.stack > 8",
["action"] = "mongoose_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.latent_poison.stack > 8",
["action"] = "raptor_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max & full_recharge_time < gcd.max",
["action"] = "kill_command",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max",
["action"] = "flanking_strike",
},
{
["action"] = "carve",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.coordinated_assault.up",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max",
["action"] = "steel_trap",
},
{
["action"] = "spearhead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.spearhead.remains",
["action"] = "mongoose_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 12 & ( ! talent.vipers_venom.enabled || talent.hydras_bite.enabled )",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mongoose_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "raptor_strike",
["cycle_targets"] = 1,
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.terms_of_engagement.enabled & focus < focus.max || ! talent.terms_of_engagement.enabled",
["action"] = "harpoon",
},
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "fireblood",
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.kill_command.full_recharge_time > gcd.max",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled || boss & fight_remains < 13",
["action"] = "berserking",
},
{
["action"] = "muzzle",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.boss & fight_remains < 25 || buff.coordinated_assault.up || buff.spearhead.up || ! talent.spearhead.enabled & ! talent.coordinated_assault.enabled",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > gcd.max - 0.1 || settings.gcdSync",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "manic_grieftorch",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > gcd.max - 0.1 & ! buff.spearhead.up",
["name"] = "manic_grieftorch",
},
{
["enabled"] = true,
["description"] = "Sim would use off GCD just after GCD is invoked, but it is awkward to present in-game.",
["criteria"] = "! buff.spearhead.up",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "target.distance >= 6",
["action"] = "aspect_of_the_eagle",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault_empower.up || coordinated_assault_kill_shot",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "talent.spearhead.enabled & cooldown.spearhead.remains < 2 * gcd.max & full_recharge_time < gcd.max || talent.bombardier.enabled & ( cooldown.coordinated_assault.remains < gcd.max & cooldown.fury_of_the_eagle.remains || buff.coordinated_assault.up & buff.coordinated_assault.remains < 2 * gcd.max ) || full_recharge_time < gcd.max || prev.fury_of_the_eagle & set_bonus.tier31_2pc || buff.contained_explosion.remains & ( next_wi_bomb.pheromone & dot.pheromone_bomb.refreshable || next_wi_bomb.volatile & dot.volatile_bomb.refreshable || next_wi_bomb.shrapnel & dot.shrapnel_bomb.refreshable ) || cooldown.fury_of_the_eagle.remains < gcd.max & full_recharge_time < gcd.max & set_bonus.tier31_2pc || ( cooldown.fury_of_the_eagle.remains < gcd.max & talent.ruthless_marauder.enabled & set_bonus.tier31_2pc ) & ! raid_event.adds.exists",
["action"] = "wildfire_bomb",
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max || talent.spearhead.enabled & ! cooldown.spearhead.remains & cooldown.fury_of_the_eagle.remains || talent.bombardier.enabled & ! cooldown.fury_of_the_eagle.remains",
["action"] = "death_chakram",
},
{
["enabled"] = true,
["criteria"] = "prev.fury_of_the_eagle",
["action"] = "mongoose_bite",
},
{
["enabled"] = true,
["criteria"] = "! talent.fury_of_the_eagle.enabled || talent.spearhead.enabled",
["name"] = "djaruun_pillar_of_the_elder_flame",
["action"] = "djaruun_pillar_of_the_elder_flame",
},
{
["enabled"] = true,
["interrupt_if"] = "(cooldown.wildfire_bomb.full_recharge_time<gcd&talent.ruthless_marauder||!talent.ruthless_marauder)",
["action"] = "fury_of_the_eagle",
["criteria"] = "( ! raid_event.adds.exists & set_bonus.tier31_2pc || raid_event.adds.exists & raid_event.adds.in > 40 & set_bonus.tier31_2pc )",
},
{
["enabled"] = true,
["criteria"] = "focus + action.kill_command.cast_regen > focus.max - 10 & ( cooldown.death_chakram.remains || ! talent.death_chakram.enabled )",
["action"] = "spearhead",
},
{
["enabled"] = true,
["criteria"] = "full_recharge_time < gcd.max & focus + cast_regen < focus.max & ( buff.deadly_duo.stack > 2 || talent.flankers_advantage.enabled & buff.deadly_duo.stack > 1 || buff.spearhead.remains & dot.pheromone_bomb.remains )",
["action"] = "kill_command",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_die < focus / ( variable.mb_rs_cost - cast_regen ) * gcd.max || buff.mongoose_fury.up & buff.mongoose_fury.remains < gcd.max || buff.spearhead.remains",
["action"] = "mongoose_bite",
},
{
["enabled"] = true,
["criteria"] = "! buff.coordinated_assault.up & ! buff.spearhead.up",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "full_recharge_time < gcd.max & focus + cast_regen < focus.max & dot.pheromone_bomb.remains & talent.fury_of_the_eagle.enabled & cooldown.fury_of_the_eagle.remains > gcd.max",
["action"] = "kill_command",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & boss & fight_remains < focus / ( variable.mb_rs_cost - cast_regen ) * gcd.max",
["action"] = "raptor_strike",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 7 & ! talent.vipers_venom.enabled",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "equipped.djaruun_pillar_of_the_elder_flame & buff.seething_rage.up & buff.seething_rage.remains < 3 * gcd.max & ( ! raid_event.adds.exists || active_enemies > 1 ) || raid_event.adds.exists & raid_event.adds.in > 40 & buff.seething_rage.up & buff.seething_rage.remains < 3 * gcd.max",
["action"] = "fury_of_the_eagle",
},
{
["enabled"] = true,
["criteria"] = "talent.coordinated_assault.enabled || talent.fury_of_the_eagle.enabled & cooldown.fury_of_the_eagle.remains < 5",
["name"] = "djaruun_pillar_of_the_elder_flame",
["action"] = "djaruun_pillar_of_the_elder_flame",
},
{
["enabled"] = true,
["criteria"] = "talent.alpha_predator.enabled & buff.mongoose_fury.up & buff.mongoose_fury.remains < focus / ( variable.mb_rs_cost - cast_regen ) * gcd.max || equipped.djaruun_pillar_of_the_elder_flame & buff.seething_rage.remains & active_enemies = 1 || next_wi_bomb.pheromone & cooldown.wildfire_bomb.remains < focus / ( variable.mb_rs_cost - cast_regen ) * gcd.max & set_bonus.tier31_2pc",
["action"] = "mongoose_bite",
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max",
["action"] = "flanking_strike",
},
{
["action"] = "stampede",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ! talent.coordinated_kill.enabled & target.health.pct < 20 & ( ! buff.spearhead.remains & cooldown.spearhead.remains || ! talent.spearhead.enabled ) || talent.coordinated_kill.enabled & ( ! buff.spearhead.remains & cooldown.spearhead.remains || ! talent.spearhead.enabled ) ) & ( ! raid_event.adds.exists || raid_event.adds.in > 90 )",
["action"] = "coordinated_assault",
},
{
["enabled"] = true,
["criteria"] = "next_wi_bomb.pheromone & focus < variable.mb_rs_cost & set_bonus.tier31_2pc",
["action"] = "wildfire_bomb",
},
{
["enabled"] = true,
["criteria"] = "full_recharge_time < gcd.max & focus + cast_regen < focus.max & ( cooldown.flanking_strike.remains || ! talent.flanking_strike.enabled )",
["action"] = "kill_command",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.vipers_venom.enabled",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.shrapnel_bomb.ticking",
["action"] = "mongoose_bite",
},
{
["enabled"] = true,
["criteria"] = "buff.mongoose_fury.up",
["action"] = "mongoose_bite",
["cycle_targets"] = 1,
},
{
["action"] = "steel_trap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.ranger.enabled & ( ! raid_event.adds.exists || raid_event.adds.in > 28 )",
["action"] = "explosive_shot",
},
{
["enabled"] = true,
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.in > 40 )",
["action"] = "fury_of_the_eagle",
},
{
["action"] = "mongoose_bite",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "raptor_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max",
["action"] = "kill_command",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.coordinated_kill.enabled & time_to_die > 140",
["action"] = "coordinated_assault",
},
},
["precombat"] = {
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Snapshot raid buffed stats before combat begins and pre-potting is done.",
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["precast_time"] = "2",
["action"] = "steel_trap",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "mb_rs_cost",
["value"] = "action.mongoose_bite.cost",
["value_else"] = "action.raptor_strike.cost",
["criteria"] = "talent.mongoose_bite.enabled",
},
},
},
["version"] = 20231206,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 4: Converted 'talent.mongoose_bite' to 'talent.mongoose_bite.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 1: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 3: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 3: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 4: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 4: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 7: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 7: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 9: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 9: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 2: Converted 'talent.bombardier' to 'talent.bombardier.enabled' (1x).\nLine 2: Converted 'talent.ruthless_marauder' to 'talent.ruthless_marauder.enabled' (1x).\nLine 3: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 3: Converted 'talent.bombardier' to 'talent.bombardier.enabled' (1x).\nLine 5: Converted 'talent.fury_of_the_eagle' to 'talent.fury_of_the_eagle.enabled' (1x).\nLine 5: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 7: Converted 'talent.death_chakram' to 'talent.death_chakram.enabled' (1x).\nLine 8: Converted 'talent.flankers_advantage' to 'talent.flankers_advantage.enabled' (1x).\nLine 9: Converted operations in 'active_enemies=1&target.time_to_die<focus%(variable.mb_rs_cost-cast_regen)*gcd.max||buff.mongoose_fury.up&buff.mongoose_fury.remains<gcd.max||buff.spearhead.remains' to 'active_enemies=1&target.time_to_die<focus/(variable.mb_rs_cost-cast_regen)*gcd.max||buff.mongoose_fury.up&buff.mongoose_fury.remains<gcd.max||buff.spearhead.remains'.\nLine 11: Converted 'talent.fury_of_the_eagle' to 'talent.fury_of_the_eagle.enabled' (1x).\nLine 12: Converted operations in 'active_enemies=1&boss&fight_remains<focus%(variable.mb_rs_cost-cast_regen)*gcd.max' to 'active_enemies=1&boss&fight_remains<focus/(variable.mb_rs_cost-cast_regen)*gcd.max'.\nLine 13: Converted 'talent.vipers_venom' to 'talent.vipers_venom.enabled' (1x).\nLine 15: Converted 'talent.coordinated_assault' to 'talent.coordinated_assault.enabled' (1x).\nLine 15: Converted 'talent.fury_of_the_eagle' to 'talent.fury_of_the_eagle.enabled' (1x).\nLine 16: Converted 'talent.alpha_predator' to 'talent.alpha_predator.enabled' (1x).\nLine 16: Converted operations in 'talent.alpha_predator.enabled&buff.mongoose_fury.up&buff.mongoose_fury.remains<focus%(variable.mb_rs_cost-cast_regen)*gcd.max||equipped.djaruun_pillar_of_the_elder_flame&buff.seething_rage.remains&active_enemies=1||next_wi_bomb.pheromone&cooldown.wildfire_bomb.remains<focus%(variable.mb_rs_cost-cast_regen)*gcd.max&set_bonus.tier31_2pc' to 'talent.alpha_predator.enabled&buff.mongoose_fury.up&buff.mongoose_fury.remains<focus/(variable.mb_rs_cost-cast_regen)*gcd.max||equipped.djaruun_pillar_of_the_elder_flame&buff.seething_rage.remains&active_enemies=1||next_wi_bomb.pheromone&cooldown.wildfire_bomb.remains<focus/(variable.mb_rs_cost-cast_regen)*gcd.max&set_bonus.tier31_2pc'.\nLine 19: Converted 'talent.coordinated_kill' to 'talent.coordinated_kill.enabled' (1x).\nLine 19: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 19: Converted 'talent.coordinated_kill' to 'talent.coordinated_kill.enabled' (1x).\nLine 19: Converted 'talent.spearhead' to 'talent.spearhead.enabled' (1x).\nLine 21: Converted 'talent.flanking_strike' to 'talent.flanking_strike.enabled' (1x).\nLine 22: Converted 'talent.vipers_venom' to 'talent.vipers_venom.enabled' (1x).\nLine 26: Converted 'talent.ranger' to 'talent.ranger.enabled' (1x).\nLine 31: Converted 'talent.coordinated_kill' to 'talent.coordinated_kill.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 1: Converted 'talent.birds_of_prey' to 'talent.birds_of_prey.enabled' (1x).\nLine 5: Converted 'talent.fury_of_the_eagle' to 'talent.fury_of_the_eagle.enabled' (1x).\nLine 7: Converted operations in 'cooldown.wildfire_bomb.full_recharge_time>spell_targets%2' to 'cooldown.wildfire_bomb.full_recharge_time>spell_targets/2'.\nLine 9: Converted 'talent.butchery' to 'talent.butchery.enabled' (1x).\nLine 14: Converted 'talent.wildfire_infusion' to 'talent.wildfire_infusion.enabled' (1x).\nLine 24: Converted 'talent.vipers_venom' to 'talent.vipers_venom.enabled' (1x).\nLine 24: Converted 'talent.hydras_bite' to 'talent.hydras_bite.enabled' (1x).\n\nImported 5 action lists.\n",
["spec"] = 255,
["profile"] = "actions.precombat+=/summon_pet\n# Snapshot raid buffed stats before combat begins and pre-potting is done.\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/steel_trap,precast_time=2\nactions.precombat+=/variable,name=mb_rs_cost,op=setif,value=action.mongoose_bite.cost,value_else=action.raptor_strike.cost,condition=talent.mongoose_bite\n\nactions+=/muzzle\nactions+=/tranquilizing_shot\nactions+=/hunters_mark,if=(settings.mark_any||target.is_boss)&active_dot.hunters_mark=0&target.health_pct>80&(group||target.time_to_pct_80>gcd.max*20)\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.coordinated_assault&!talent.spearhead\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3\nactions+=/call_action_list,name=cleave,strict=1,if=active_enemies>2\nactions+=/arcane_torrent\n\nactions.cds+=/blood_fury,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/harpoon,if=talent.terms_of_engagement.enabled&focus<focus.max||!talent.terms_of_engagement.enabled\nactions.cds+=/ancestral_call,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/fireblood,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/lights_judgment\nactions.cds+=/bag_of_tricks,if=cooldown.kill_command.full_recharge_time>gcd\nactions.cds+=/berserking,if=buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault||boss&fight_remains<13\nactions.cds+=/muzzle\nactions.cds+=/potion,if=target.boss&fight_remains<25||buff.coordinated_assault.up||buff.spearhead.up||!talent.spearhead&!talent.coordinated_assault\nactions.cds+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=gcd.remains>gcd.max-0.1||settings.gcdSync\nactions.cds+=/use_item,name=manic_grieftorch,use_off_gcd=1,if=gcd.remains>gcd.max-0.1&!buff.spearhead.up\n# Sim would use off GCD just after GCD is invoked, but it is awkward to present in-game.\nactions.cds+=/use_items,if=!buff.spearhead.up\nactions.cds+=/aspect_of_the_eagle,if=target.distance>=6\n\nactions.cleave+=/kill_shot,if=buff.coordinated_assault_empower.up&talent.birds_of_prey||coordinated_assault_kill_shot\nactions.cleave+=/death_chakram,if=cooldown.death_chakram.duration=45\nactions.cleave+=/wildfire_bomb\nactions.cleave+=/stampede\nactions.cleave+=/coordinated_assault,if=cooldown.fury_of_the_eagle.remains||!talent.fury_of_the_eagle\nactions.cleave+=/explosive_shot\nactions.cleave+=/carve,if=cooldown.wildfire_bomb.full_recharge_time>spell_targets%2\nactions.cleave+=/use_item,name=djaruun_pillar_of_the_elder_flame\nactions.cleave+=/fury_of_the_eagle,if=cooldown.butchery.full_recharge_time>cast_time&raid_event.adds.exists||!talent.butchery\nactions.cleave+=/butchery,if=raid_event.adds.exists\nactions.cleave+=/butchery,if=(full_recharge_time<gcd||dot.shrapnel_bomb.ticking&(dot.internal_bleeding.stack<2||dot.shrapnel_bomb.remains<gcd||raid_event.adds.remains<10))&!raid_event.adds.exists\nactions.cleave+=/fury_of_the_eagle,if=!raid_event.adds.exists\nactions.cleave+=/carve,if=dot.shrapnel_bomb.ticking\nactions.cleave+=/butchery,if=(!next_wi_bomb.shrapnel||!talent.wildfire_infusion)\nactions.cleave+=/mongoose_bite,cycle_targets=1,if=debuff.latent_poison.stack>8\nactions.cleave+=/raptor_strike,cycle_targets=1,if=debuff.latent_poison.stack>8\nactions.cleave+=/kill_command,cycle_targets=1,if=focus+cast_regen<focus.max&full_recharge_time<gcd\nactions.cleave+=/flanking_strike,if=focus+cast_regen<focus.max\nactions.cleave+=/carve\nactions.cleave+=/kill_shot,if=!buff.coordinated_assault.up\nactions.cleave+=/steel_trap,if=focus+cast_regen<focus.max\nactions.cleave+=/spearhead\nactions.cleave+=/mongoose_bite,cycle_targets=1,if=buff.spearhead.remains\nactions.cleave+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>12&(!talent.vipers_venom||talent.hydras_bite)\nactions.cleave+=/mongoose_bite,cycle_targets=1\nactions.cleave+=/raptor_strike,cycle_targets=1\n\nactions.st+=/kill_shot,if=buff.coordinated_assault_empower.up||coordinated_assault_kill_shot\nactions.st+=/wildfire_bomb,if=talent.spearhead&cooldown.spearhead.remains<2*gcd&full_recharge_time<gcd||talent.bombardier&(cooldown.coordinated_assault.remains<gcd&cooldown.fury_of_the_eagle.remains||buff.coordinated_assault.up&buff.coordinated_assault.remains<2*gcd)||full_recharge_time<gcd||prev.fury_of_the_eagle&set_bonus.tier31_2pc||buff.contained_explosion.remains&(next_wi_bomb.pheromone&dot.pheromone_bomb.refreshable||next_wi_bomb.volatile&dot.volatile_bomb.refreshable||next_wi_bomb.shrapnel&dot.shrapnel_bomb.refreshable)||cooldown.fury_of_the_eagle.remains<gcd&full_recharge_time<gcd&set_bonus.tier31_2pc||(cooldown.fury_of_the_eagle.remains<gcd&talent.ruthless_marauder&set_bonus.tier31_2pc)&!raid_event.adds.exists\nactions.st+=/death_chakram,if=focus+cast_regen<focus.max||talent.spearhead&!cooldown.spearhead.remains&cooldown.fury_of_the_eagle.remains||talent.bombardier&!cooldown.fury_of_the_eagle.remains\nactions.st+=/mongoose_bite,if=prev.fury_of_the_eagle\nactions.st+=/use_item,name=djaruun_pillar_of_the_elder_flame,if=!talent.fury_of_the_eagle||talent.spearhead\nactions.st+=/fury_of_the_eagle,interrupt_if=(cooldown.wildfire_bomb.full_recharge_time<gcd&talent.ruthless_marauder||!talent.ruthless_marauder),if=(!raid_event.adds.exists&set_bonus.tier31_2pc||raid_event.adds.exists&raid_event.adds.in>40&set_bonus.tier31_2pc)\nactions.st+=/spearhead,if=focus+action.kill_command.cast_regen>focus.max-10&(cooldown.death_chakram.remains||!talent.death_chakram)\nactions.st+=/kill_command,cycle_targets=1,if=full_recharge_time<gcd&focus+cast_regen<focus.max&(buff.deadly_duo.stack>2||talent.flankers_advantage&buff.deadly_duo.stack>1||buff.spearhead.remains&dot.pheromone_bomb.remains)\nactions.st+=/mongoose_bite,if=active_enemies=1&target.time_to_die<focus%(variable.mb_rs_cost-cast_regen)*gcd||buff.mongoose_fury.up&buff.mongoose_fury.remains<gcd||buff.spearhead.remains\nactions.st+=/kill_shot,if=!buff.coordinated_assault.up&!buff.spearhead.up\nactions.st+=/kill_command,cycle_targets=1,if=full_recharge_time<gcd&focus+cast_regen<focus.max&dot.pheromone_bomb.remains&talent.fury_of_the_eagle&cooldown.fury_of_the_eagle.remains>gcd\nactions.st+=/raptor_strike,if=active_enemies=1&boss&fight_remains<focus%(variable.mb_rs_cost-cast_regen)*gcd\nactions.st+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>7&!talent.vipers_venom\nactions.st+=/fury_of_the_eagle,if=equipped.djaruun_pillar_of_the_elder_flame&buff.seething_rage.up&buff.seething_rage.remains<3*gcd&(!raid_event.adds.exists||active_enemies>1)||raid_event.adds.exists&raid_event.adds.in>40&buff.seething_rage.up&buff.seething_rage.remains<3*gcd\nactions.st+=/use_item,name=djaruun_pillar_of_the_elder_flame,if=talent.coordinated_assault||talent.fury_of_the_eagle&cooldown.fury_of_the_eagle.remains<5\nactions.st+=/mongoose_bite,if=talent.alpha_predator&buff.mongoose_fury.up&buff.mongoose_fury.remains<focus%(variable.mb_rs_cost-cast_regen)*gcd||equipped.djaruun_pillar_of_the_elder_flame&buff.seething_rage.remains&active_enemies=1||next_wi_bomb.pheromone&cooldown.wildfire_bomb.remains<focus%(variable.mb_rs_cost-cast_regen)*gcd&set_bonus.tier31_2pc\nactions.st+=/flanking_strike,if=focus+cast_regen<focus.max\nactions.st+=/stampede\nactions.st+=/coordinated_assault,if=(!talent.coordinated_kill&target.health.pct<20&(!buff.spearhead.remains&cooldown.spearhead.remains||!talent.spearhead)||talent.coordinated_kill&(!buff.spearhead.remains&cooldown.spearhead.remains||!talent.spearhead))&(!raid_event.adds.exists||raid_event.adds.in>90)\nactions.st+=/wildfire_bomb,if=next_wi_bomb.pheromone&focus<variable.mb_rs_cost&set_bonus.tier31_2pc\nactions.st+=/kill_command,cycle_targets=1,if=full_recharge_time<gcd&focus+cast_regen<focus.max&(cooldown.flanking_strike.remains||!talent.flanking_strike)\nactions.st+=/serpent_sting,cycle_targets=1,if=refreshable&!talent.vipers_venom\nactions.st+=/mongoose_bite,if=dot.shrapnel_bomb.ticking\nactions.st+=/mongoose_bite,cycle_targets=1,if=buff.mongoose_fury.up\nactions.st+=/steel_trap\nactions.st+=/explosive_shot,if=talent.ranger&(!raid_event.adds.exists||raid_event.adds.in>28)\nactions.st+=/fury_of_the_eagle,if=(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.in>40)\nactions.st+=/mongoose_bite\nactions.st+=/raptor_strike,cycle_targets=1\nactions.st+=/kill_command,cycle_targets=1,if=focus+cast_regen<focus.max\nactions.st+=/coordinated_assault,if=!talent.coordinated_kill&time_to_die>140",
},
["Arms"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimulationCraft",
["desc"] = "2024-05-08: SimC update.\n\n2024-02-03: Minor SimC update.\n\n2023-12-17: Remove raid_event.adds checks in favor of target count.\n\n2023-11-27:  Big axe.\n\n2023-11-22:  Update to SimC.\n\n2023-11-06:  Removed IP from HAC and set HAC to <1 target.\n\n2023-11-05:  Patch 10.2.\n\n2023-07-11:  Update trinkets for 10.1.5.\n\n2023-05-20:  Update trinket/CDs.\n\n2023-05-08:  Use Arcane Torrent at pretty low priority in single-target.\n\n2023-05-02:  Update for 10.1.\n\n2023-03-26:  Include Spell Reflection.",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["criteria"] = "buff.collateral_damage.up & cooldown.sweeping_strikes.remains < 3",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & talent.blood_and_thunder.enabled & talent.blademasters_torment.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "talent.hurricane.enabled & raid_event.add.in > 22 & talent.warlords_torment.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15 || target.time_to_die < 20",
["action"] = "avatar",
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 22",
["action"] = "warbreaker",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( buff.juggernaut.up & buff.juggernaut.remains < gcd.max ) || ( buff.sudden_death.react & dot.deep_wounds.remains & set_bonus.tier31_2pc || buff.sudden_death.react & ! dot.rend.remains & set_bonus.tier31_4pc )",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & talent.blood_and_thunder.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.blood_and_thunder.enabled",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "talent.storm_of_swords.enabled & debuff.colossus_smash.up",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.hurricane.enabled & ( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up ) & buff.hurricane.remains < 2 || talent.unhinged.enabled & ( buff.test_of_might.up || ! talent.test_of_might.enabled & debuff.colossus_smash.up )",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.test_of_might.up || debuff.colossus_smash.up",
["action"] = "champions_spear",
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.sonic_boom.enabled",
["action"] = "shockwave",
},
{
["enabled"] = true,
["criteria"] = "talent.storm_of_swords.enabled & talent.test_of_might.enabled & cooldown.colossus_smash.remains > cooldown.whirlwind.duration",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.react",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "charges = 2 & ! talent.battlelord.enabled || talent.battlelord.enabled",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "talent.storm_of_swords.enabled & ! talent.test_of_might.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.crushing_force.enabled & dot.rend.remains > 12",
["action"] = "slam",
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.merciless_bonegrinder.up",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["action"] = "pummel",
["enabled"] = true,
},
{
["action"] = "spell_reflection",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & debuff.colossus_smash.remains > 8 || target.time_to_die < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "cooldown.mortal_strike.remains > 1.5 & rage < 50",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_die > 180 & buff.avatar.up || target.time_to_die < 180 & ( target.health.pct < 35 & talent.massacre.enabled || target.health.pct < 20 ) & buff.avatar.up || target.time_to_die < 20",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2 || talent.fervor_of_battle.enabled & ( talent.massacre.enabled & target.health.pct > 35 || target.health.pct > 20 ) & active_enemies > 1",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["list_name"] = "execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["action"] = "battle_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["description"] = "Trinkets",
["criteria"] = "dot.mark_of_fyralath.ticking & ! talent.blademasters_torment.enabled || dot.mark_of_fyralath.ticking & cooldown.avatar.remains > 3 & cooldown.bladestorm.remains > 3 & ! debuff.colossus_smash.up",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["action"] = "algethar_puzzle_box",
["criteria"] = "cooldown.avatar.remains <= 3",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["execute"] = {
{
["enabled"] = true,
["criteria"] = "buff.collateral_damage.up & cooldown.sweeping_strikes.remains < 3",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & talent.bloodletting.enabled",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "remains <= gcd.max & ! talent.bloodletting.enabled & ( ! talent.warbreaker.enabled & cooldown.colossus_smash.remains < 4 || talent.warbreaker.enabled & cooldown.warbreaker.remains < 4 ) & target.time_to_die > 12",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.ready || debuff.colossus_smash.up || target.time_to_die < 20",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 22",
["action"] = "warbreaker",
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.test_of_might.enabled & rage < 40 ) || ( ! talent.test_of_might.enabled & ( buff.avatar.up || debuff.colossus_smash.up ) & rage < 70 )",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.whirlwind > 2 & dot.deep_wounds.remains <= gcd.max",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 45 & talent.hurricane.enabled & rage < 40",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.react & dot.deep_wounds.remains",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "rage < 40 & buff.martial_prowess.stack < 2",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "rage < 40",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "rage >= 40",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.sonic_boom.enabled",
["action"] = "shockwave",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.up & buff.juggernaut.remains < gcd.max & set_bonus.tier31_4pc",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.thunder_clap.enabled & talent.blood_and_thunder.enabled & talent.rend.enabled & dot.rend.remains <= dot.rend.duration * 0.3",
["action"] = "whirlwind",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.bladestorm.remains > 15 || talent.improved_sweeping_strikes.enabled & cooldown.bladestorm.remains > 21 || ! talent.bladestorm.enabled || ! talent.bladestorm.enabled & talent.blademasters_torment.enabled & cooldown.avatar.remains > 15 || ! talent.bladestorm.enabled & talent.blademasters_torment.enabled & talent.improved_sweeping_strikes.enabled & cooldown.avatar.remains > 21",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15 || talent.blademasters_torment.enabled || target.time_to_die < 20 || buff.hurricane.remains < 3",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 22 || active_enemies > 1",
["action"] = "warbreaker",
},
{
["enabled"] = true,
["action"] = "colossus_smash",
["criteria"] = "( target.health.pct < 20 || talent.massacre.enabled & target.health.pct < 35 )",
["cycle_targets"] = 1,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.storm_of_swords.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled & buff.sweeping_strikes.up",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.react & set_bonus.tier31_4pc",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.martial_prowess.stack = 2 & ( buff.sweeping_strikes.up & active_enemies > 4 || buff.sweeping_strikes.down ) || buff.merciless_bonegrinder.up",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & buff.martial_prowess.stack = 2 & ( active_enemies <= 4 || ! talent.cleave.enabled )",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.test_of_might.up || debuff.colossus_smash.up || dot.deep_wounds.remains",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.down & ( buff.hurricane.remains < 3 || ! talent.hurricane.enabled )",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled & rage > 70 || buff.merciless_bonegrinder.up",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["enabled"] = true,
["action"] = "mortal_strike",
["criteria"] = "debuff.executioners_precision.stack = 2 || dot.deep_wounds.remains <= gcd.max || active_enemies < 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "execute",
["criteria"] = "buff.sudden_death.react || ( target.health.pct < 20 || talent.massacre.enabled & target.health.pct < 35 ) || buff.sweeping_strikes.up || active_enemies <= 2",
["cycle_targets"] = 1,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3",
["action"] = "thunder_clap",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.crushing_force.enabled",
["action"] = "thunder_clap",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["action"] = "shockwave",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'single_target' required some automated changes.\nLine 3: Converted 'talent.blood_and_thunder' to 'talent.blood_and_thunder.enabled' (1x).\nLine 3: Converted 'talent.blademasters_torment' to 'talent.blademasters_torment.enabled' (1x).\nLine 5: Converted 'talent.hurricane' to 'talent.hurricane.enabled' (1x).\nLine 5: Converted 'talent.warlords_torment' to 'talent.warlords_torment.enabled' (1x).\nLine 11: Converted 'talent.blood_and_thunder' to 'talent.blood_and_thunder.enabled' (1x).\nLine 12: Converted 'talent.blood_and_thunder' to 'talent.blood_and_thunder.enabled' (1x).\nLine 13: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 14: Converted 'talent.hurricane' to 'talent.hurricane.enabled' (1x).\nLine 14: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 14: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 14: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 18: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 18: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 20: Converted 'talent.battlelord' to 'talent.battlelord.enabled' (1x).\nLine 20: Converted 'talent.battlelord' to 'talent.battlelord.enabled' (1x).\nLine 21: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 21: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 22: Converted 'talent.crushing_force' to 'talent.crushing_force.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 9: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 3: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 4: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 4: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 7: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 7: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 7: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 7: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 7: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 8: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 8: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 8: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 8: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 8: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 10: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'aoe' required some automated changes.\nLine 2: Converted 'talent.thunder_clap' to 'talent.thunder_clap.enabled' (1x).\nLine 2: Converted 'talent.blood_and_thunder' to 'talent.blood_and_thunder.enabled' (1x).\nLine 2: Converted 'talent.rend' to 'talent.rend.enabled' (1x).\nLine 4: Converted 'talent.improved_sweeping_strikes' to 'talent.improved_sweeping_strikes.enabled' (1x).\nLine 4: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 4: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 4: Converted 'talent.blademasters_torment' to 'talent.blademasters_torment.enabled' (1x).\nLine 4: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 4: Converted 'talent.blademasters_torment' to 'talent.blademasters_torment.enabled' (1x).\nLine 4: Converted 'talent.improved_sweeping_strikes' to 'talent.improved_sweeping_strikes.enabled' (1x).\nLine 5: Converted 'talent.blademasters_torment' to 'talent.blademasters_torment.enabled' (1x).\nLine 7: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\nLine 9: Converted 'talent.storm_of_swords' to 'talent.storm_of_swords.enabled' (1x).\nLine 10: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 13: Converted 'talent.cleave' to 'talent.cleave.enabled' (1x).\nLine 15: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 16: Converted 'talent.hurricane' to 'talent.hurricane.enabled' (1x).\nLine 17: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 18: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 20: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\nLine 24: Converted 'talent.crushing_force' to 'talent.crushing_force.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 1: Converted 'talent.blademasters_torment' to 'talent.blademasters_torment.enabled' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'execute' required some automated changes.\nLine 3: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\nLine 4: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\nLine 4: Converted 'talent.warbreaker' to 'talent.warbreaker.enabled' (1x).\nLine 4: Converted 'talent.warbreaker' to 'talent.warbreaker.enabled' (1x).\nLine 9: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 9: Converted 'talent.test_of_might' to 'talent.test_of_might.enabled' (1x).\nLine 11: Converted 'talent.hurricane' to 'talent.hurricane.enabled' (1x).\nLine 17: Converted 'talent.sonic_boom' to 'talent.sonic_boom.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/battle_stance\nactions.precombat+=/battle_shout\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\nactions.precombat+=/use_item,name=algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/pummel\nactions+=/spell_reflection\nactions+=/potion,if=gcd.remains=0&debuff.colossus_smash.remains>8||target.time_to_die<25\nactions+=/call_action_list,name=trinkets\nactions+=/arcane_torrent,if=cooldown.mortal_strike.remains>1.5&rage<50\nactions+=/lights_judgment,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/bag_of_tricks,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/berserking,if=target.time_to_die>180&buff.avatar.up||target.time_to_die<180&(target.health.pct<35&talent.massacre||target.health.pct<20)&buff.avatar.up||target.time_to_die<20\nactions+=/blood_fury,if=debuff.colossus_smash.up\nactions+=/fireblood,if=debuff.colossus_smash.up\nactions+=/ancestral_call,if=debuff.colossus_smash.up\n## actions+=/invoke_external_buff,name=power_infusion,if=debuff.colossus_smash.up&fight_remains>=135||(target.health.pct<35&talent.massacre||target.health.pct<20)&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2||talent.fervor_of_battle.enabled&(talent.massacre.enabled&target.health.pct>35||target.health.pct>20)&active_enemies>1\nactions+=/run_action_list,name=execute,cycle_targets=1,strict=1,if=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20\nactions+=/run_action_list,name=single_target\n\nactions.execute+=/whirlwind,if=buff.collateral_damage.up&cooldown.sweeping_strikes.remains<3\nactions.execute+=/sweeping_strikes,if=active_enemies>1\nactions.execute+=/mortal_strike,if=dot.rend.remains<=gcd&talent.bloodletting\nactions.execute+=/rend,if=remains<=gcd&!talent.bloodletting&(!talent.warbreaker&cooldown.colossus_smash.remains<4||talent.warbreaker&cooldown.warbreaker.remains<4)&target.time_to_die>12\nactions.execute+=/avatar,if=cooldown.colossus_smash.ready||debuff.colossus_smash.up||target.time_to_die<20\nactions.execute+=/champions_spear,if=cooldown.colossus_smash.remains<=gcd\nactions.execute+=/warbreaker,if=raid_event.adds.in>22\nactions.execute+=/colossus_smash\nactions.execute+=/thunderous_roar,if=(talent.test_of_might&rage<40)||(!talent.test_of_might&(buff.avatar.up||debuff.colossus_smash.up)&rage<70)\nactions.execute+=/cleave,if=spell_targets.whirlwind>2&dot.deep_wounds.remains<=gcd\nactions.execute+=/bladestorm,if=raid_event.adds.in>45&talent.hurricane&rage<40\nactions.execute+=/mortal_strike,if=debuff.executioners_precision.stack=2\nactions.execute+=/execute,if=buff.sudden_death.react&dot.deep_wounds.remains\nactions.execute+=/overpower,if=rage<40&buff.martial_prowess.stack<2\nactions.execute+=/skullsplitter,if=rage<40\nactions.execute+=/execute,if=rage>=40\nactions.execute+=/shockwave,if=talent.sonic_boom\nactions.execute+=/overpower\nactions.execute+=/execute\nactions.execute+=/bladestorm\nactions.execute+=/wrecking_throw\n\nactions.aoe+=/execute,if=buff.juggernaut.up&buff.juggernaut.remains<gcd&set_bonus.tier31_4pc\nactions.aoe+=/whirlwind,if=buff.collateral_damage.up&debuff.colossus_smash.remains&buff.sweeping_strikes.downactions.aoe+=/thunder_clap,if=talent.thunder_clap&talent.blood_and_thunder&talent.rend&dot.rend.remains<=dot.rend.duration*0.3\nactions.aoe+=/thunderous_roar\nactions.aoe+=/sweeping_strikes,if=cooldown.bladestorm.remains>15||talent.improved_sweeping_strikes&cooldown.bladestorm.remains>21||!talent.bladestorm||!talent.bladestorm&talent.blademasters_torment&cooldown.avatar.remains>15||!talent.bladestorm&talent.blademasters_torment&talent.improved_sweeping_strikes&cooldown.avatar.remains>21\nactions.aoe+=/avatar,if=raid_event.adds.in>15||talent.blademasters_torment||target.time_to_die<20||buff.hurricane.remains<3\nactions.aoe+=/warbreaker,if=raid_event.adds.in>22||active_enemies>1\nactions.aoe+=/colossus_smash,cycle_targets=1,if=(target.health.pct<20||talent.massacre&target.health.pct<35)\nactions.aoe+=/colossus_smash\nactions.aoe+=/whirlwind,if=talent.storm_of_swords\nactions.aoe+=/bladestorm,if=talent.unhinged&buff.sweeping_strikes.up\nactions.aoe+=/execute,if=buff.sudden_death.react&set_bonus.tier31_4pc\nactions.aoe+=/cleave,if=buff.martial_prowess.stack=2&(buff.sweeping_strikes.up&active_enemies>4||buff.sweeping_strikes.down)||buff.merciless_bonegrinder.up\nactions.aoe+=/mortal_strike,if=buff.sweeping_strikes.up&buff.martial_prowess.stack=2&(active_enemies<=4||!talent.cleave)\nactions.aoe+=/champions_spear,if=buff.test_of_might.up||debuff.colossus_smash.up||dot.deep_wounds.remains\nactions.aoe+=/overpower,if=buff.sweeping_strikes.up&talent.dreadnaught\nactions.aoe+=/bladestorm,if=buff.sweeping_strikes.down&(buff.hurricane.remains<3||!talent.hurricane)\nactions.aoe+=/whirlwind,if=talent.fervor_of_battle&rage>70||buff.merciless_bonegrinder.up\nactions.aoe+=/overpower,if=talent.dreadnaught\nactions.aoe+=/mortal_strike,cycle_targets=1,if=debuff.executioners_precision.stack=2||dot.deep_wounds.remains<=gcd||active_enemies<3\nactions.aoe+=/execute,cycle_targets=1,if=buff.sudden_death.react||(target.health.pct<20||talent.massacre&target.health.pct<35)||buff.sweeping_strikes.up||active_enemies<=2\nactions.aoe+=/whirlwind\nactions.aoe+=/thunder_clap,if=active_enemies>3\nactions.aoe+=/mortal_strike\nactions.aoe+=/thunder_clap,if=!talent.crushing_force\nactions.aoe+=/slam\nactions.aoe+=/shockwave\nactions.aoe+=/wrecking_throw\n\nactions.single_target+=/whirlwind,if=buff.collateral_damage.up&cooldown.sweeping_strikes.remains<3\nactions.single_target+=/sweeping_strikes,if=active_enemies>1\nactions.single_target+=/thunder_clap,if=dot.rend.remains<=gcd&talent.blood_and_thunder&talent.blademasters_torment\nactions.single_target+=/thunderous_roar,if=raid_event.adds.in>15\nactions.single_target+=/bladestorm,if=talent.hurricane&raid_event.add.in>22&talent.warlords_torment\nactions.single_target+=/avatar,if=raid_event.adds.in>15||target.time_to_die<20\nactions.single_target+=/colossus_smash\nactions.single_target+=/warbreaker,if=raid_event.adds.in>22\nactions.single_target+=/mortal_strike\nactions.single_target+=/execute,if=(buff.juggernaut.up&buff.juggernaut.remains<gcd)||(buff.sudden_death.react&dot.deep_wounds.remains&set_bonus.tier31_2pc||buff.sudden_death.react&!dot.rend.remains&set_bonus.tier31_4pc)\nactions.single_target+=/thunder_clap,if=dot.rend.remains<=gcd&talent.blood_and_thunder\nactions.single_target+=/rend,if=dot.rend.remains<=gcd&!talent.blood_and_thunder\nactions.single_target+=/whirlwind,if=talent.storm_of_swords&debuff.colossus_smash.up\nactions.single_target+=/bladestorm,if=talent.hurricane&(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)&buff.hurricane.remains<2||talent.unhinged&(buff.test_of_might.up||!talent.test_of_might&debuff.colossus_smash.up)\nactions.single_target+=/champions_spear,if=buff.test_of_might.up||debuff.colossus_smash.up\nactions.single_target+=/skullsplitter\nactions.single_target+=/shockwave,if=talent.sonic_boom.enabled\nactions.single_target+=/whirlwind,if=talent.storm_of_swords&talent.test_of_might&cooldown.colossus_smash.remains>cooldown.whirlwind.duration\nactions.single_target+=/execute,if=buff.sudden_death.react\nactions.single_target+=/overpower,if=charges=2&!talent.battlelord||talent.battlelord\nactions.single_target+=/whirlwind,if=talent.storm_of_swords&!talent.test_of_might\nactions.single_target+=/slam,if=talent.crushing_force&dot.rend.remains>12\nactions.single_target+=/thunder_clap\nactions.single_target+=/whirlwind,if=buff.merciless_bonegrinder.up\nactions.single_target+=/slam\nactions.single_target+=/bladestorm\nactions.single_target+=/cleave\nactions.single_target+=/wrecking_throw\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&!talent.blademasters_torment||dot.mark_of_fyralath.ticking&cooldown.avatar.remains>3&cooldown.bladestorm.remains>3&!debuff.colossus_smash.up\nactions.trinkets+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=cooldown.avatar.remains<=3\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)",
["spec"] = 71,
},
["Outlaw"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-12: Minor sim update.\n\n2024-01-16: Tweak reroll logic.\n\n2024-01-10: Update from SimC.\n\n2023-12-09: Don't break Stealth with trinkets.\n\n2023-11-28 & 29: Tweaks to RtB and Blade Flurry usage.\n\n2023-11-23: New Stealth Padding setting.\n\n2023-11-22: Tweak RtB criteria to translate more correctly from SimC.\n\n2023-11-15: Fix fixes.\n\n2023-11-13: RtB criteria changed.\n\n2023-11-11: Fix the BtE fix.\n\n2023-11-10: Babyproof misuse of BtE outside of Stealth.\n\n2023-11-08 (2): Minor SimC update.\n\n2023-11-08: Don't refresh SnD out of combat unless it is low duration.\n\n2023-11-07: Further 10.2 updates.\n\n2023-11-05: Patch 10.2.\n\n2023-07-11:  Patch 10.1.5 update (from SimulationCraft).\n\n2023-05-26:  Relax Beacon to the Beyond timing so it doesn't vanish after hitting the previous button.  Use it immediately after the previous ability; don't wait for the GCD!\n\n2023-05-14:  Shiv.\n\n2023-05-12:  Add Beacon to the Beyond.\n\n2023-02-15:  Added option to use Adrenaline Rush before Roll the Bones in the opener if Loaded Dice is talented, to guarantee two buffs.  This would mainly be used by folks taking Count the Odds and Loaded Dice.  See Outlaw specialization options (at left).\n\nAdded logic to prevent Vanish in the first 10s of combat (in case of delayed opener).\n\n2023-03-13:  Update Manic Grieftorch usage.",
["lists"] = {
["build"] = {
{
["enabled"] = true,
["description"] = "Builders",
["action"] = "echoing_reprimand",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled & buff.audacity.up",
["action"] = "ambush",
["description"] = "High priority Ambush for Hidden Opportunity builds",
},
{
["enabled"] = true,
["criteria"] = "talent.fan_the_hammer.enabled & talent.audacity.enabled & talent.hidden_opportunity.enabled & buff.opportunity.up & ! buff.audacity.up",
["action"] = "pistol_shot",
["description"] = "With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available",
},
{
["enabled"] = true,
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( buff.opportunity.stack >= buff.opportunity.max_stack || buff.opportunity.remains < 2 )",
["action"] = "pistol_shot",
["description"] = "With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire",
},
{
["enabled"] = true,
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( combo_points.deficit >= ( 1 + ( talent.quick_draw.enabled + buff.broadside.up ) * ( talent.fan_the_hammer.rank + 1 ) ) || combo_points <= talent.ruthlessness.enabled )",
["action"] = "pistol_shot",
["description"] = "With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum",
},
{
["enabled"] = true,
["criteria"] = "! talent.fan_the_hammer.enabled & buff.opportunity.up & ( energy.base_deficit > energy.regen * 1.5 || combo_points.deficit <= 1 + buff.broadside.up || talent.quick_draw.enabled || talent.audacity.enabled & ! buff.audacity.up )",
["action"] = "pistol_shot",
["description"] = "If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["description"] = "Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
{
["action"] = "sinister_strike",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["criteria"] = "debuff.dispellable_enrage.up",
["action"] = "shiv",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.hidden_opportunity.enabled || combo_points.deficit >= 2 + talent.improved_ambush.enabled + buff.broadside.up ) & energy >= 50",
["var_name"] = "ambush_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "effective_combo_points >= cp_max_spend - 1 - ( stealthed.all & talent.crackshot.enabled )",
["description"] = "Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot",
["var_name"] = "finish_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.blade_flurry < 2 & raid_event.adds.in > 20 || buff.blade_flurry.remains > gcd.max",
["description"] = "With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry",
["var_name"] = "blade_flurry_sync",
},
{
["enabled"] = true,
["criteria"] = "rtb_buffs_max_remains <= 2 & time = 0",
["action"] = "roll_the_bones",
["description"] = "Force Roll the Bones to be refreshed when needed if 0 targets are active, as the RTB action in the sublist is not checked",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "High priority stealth list, will fall through if no conditions are met",
["strict"] = 1,
["criteria"] = "stealthed.all & stealthed.all_remains > settings.stealth_padding",
["list_name"] = "stealth",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "run_action_list",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.base_deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "rtb_buffs_will_lose = ( rtb_buffs_will_lose_buff.buried_treasure + ( rtb_buffs_will_lose_buff.grand_melee & spell_targets.blade_flurry < 2 & raid_event.adds.in > 10 ) )",
["description"] = "Default Roll the Bones reroll rule: reroll for any buffs that aren't Buried Treasure, excluding Grand Melee in single target",
["var_name"] = "rtb_reroll",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "talent.crackshot.enabled & ! set_bonus.tier31_4pc",
["description"] = "Crackshot builds without T31 should reroll for True Bearing (or Broadside without Hidden Opportunity) if we won't lose over 1 buff",
["value"] = "( ! rtb_buffs_will_lose_buff.true_bearing & talent.hidden_opportunity.enabled || ! rtb_buffs_will_lose_buff.broadside & ! talent.hidden_opportunity.enabled ) & rtb_buffs_will_lose <= 1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "talent.crackshot.enabled & set_bonus.tier31_4pc",
["description"] = "Crackshot builds with T31 should reroll if we won't lose over 1 buff (2 with Loaded Dice)",
["value"] = "( rtb_buffs_will_lose <= 1 + buff.loaded_dice.up )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "! talent.crackshot.enabled & talent.hidden_opportunity.enabled",
["description"] = "Hidden Opportunity builds without Crackshot should reroll for Skull and Crossbones or any 2 buffs excluding Grand Melee in single target",
["value"] = "! rtb_buffs_will_lose_buff.skull_and_crossbones & ( rtb_buffs_will_lose < 2 + rtb_buffs_will_lose_buff.grand_melee & spell_targets.blade_flurry < 2 & raid_event.adds.in > 10 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.rtb_reroll & rtb_buffs_longer = 0 || rtb_buffs_normal = 0 & rtb_buffs_longer >= 1 & rtb_buffs < 6 & rtb_buffs_max_remains <= 39 & ! stealthed.all & buff.loaded_dice.up",
["description"] = "Additional reroll rules if all active buffs will not be rolled away, not in stealth, Loaded Dice is active, and we have less than 6 buffs",
["var_name"] = "rtb_reroll",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["criteria"] = "! ( raid_event.adds.remains > 12 || raid_event.adds.up & ( raid_event.adds.in - raid_event.adds.remains ) < 6 || target.time_to_die > 12 ) || boss & fight_remains < 12",
["description"] = "Avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["criteria"] = "refreshable & talent.underhanded_upper_hand.enabled & ! stealthed.mantle",
["precombat_seconds"] = "3",
},
{
["action"] = "stealth",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["criteria"] = "settings.use_ld_opener & talent.loaded_dice.enabled & ( refreshable || buff.roll_the_bones.refreshable & variable.rtb_reroll )",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["criteria"] = "refreshable & variable.rtb_reroll",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["criteria"] = "! settings.use_ld_opener & refreshable & talent.improved_adrenaline_rush.enabled",
["precombat_seconds"] = "1",
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["criteria"] = "refreshable",
["precombat_seconds"] = "1",
},
},
["stealth"] = {
{
["enabled"] = true,
["criteria"] = "talent.subterfuge.enabled & talent.hidden_opportunity.enabled & spell_targets >= 2 & buff.blade_flurry.remains < gcd.max",
["action"] = "blade_flurry",
["description"] = "Stealth",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "cold_blood",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition & talent.crackshot.enabled & ( ! buff.shadowmeld.up || stealthed.rogue )",
["action"] = "between_the_eyes",
["description"] = "High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition & energy.current > action.between_the_eyes.cost",
["action"] = "dispatch",
},
{
["enabled"] = true,
["criteria"] = "talent.crackshot.enabled & talent.fan_the_hammer.rank >= 2 & buff.opportunity.stack >= 6 & ( buff.broadside.up & combo_points <= 1 || buff.greenskins_wickers.up ) & energy.current > action.between_the_eyes.cost",
["action"] = "pistol_shot",
["description"] = "2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled & energy.current > action.between_the_eyes.cost",
["action"] = "ambush",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "! buff.adrenaline_rush.up & ( ! variable.finish_condition || ! talent.improved_adrenaline_rush.enabled ) || stealthed.all & talent.crackshot.enabled & talent.improved_adrenaline_rush.enabled & combo_points <= 2",
["action"] = "adrenaline_rush",
["description"] = "Use Adrenaline Rush if it is not active and the finisher condition is not met, but Crackshot builds can refresh it with 2cp or lower inside stealth",
},
{
["enabled"] = true,
["criteria"] = "spell_targets >= 2 - ( talent.underhanded_upper_hand.enabled & ! stealthed.all & buff.adrenaline_rush.up ) & buff.blade_flurry.remains < gcd.max",
["action"] = "blade_flurry",
["description"] = "Maintain Blade Flurry on 2+ targets, and on single target with Underhanded during Adrenaline Rush",
},
{
["enabled"] = true,
["criteria"] = "talent.deft_maneuvers.enabled & ! variable.finish_condition & ( spell_targets >= 3 & combo_points.deficit = spell_targets + buff.broadside.up || spell_targets >= 5 )",
["action"] = "blade_flurry",
["description"] = "With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given",
},
{
["enabled"] = true,
["criteria"] = "variable.rtb_reroll || rtb_buffs = 0 || rtb_buffs_max_remains <= 2 & set_bonus.tier31_4pc || rtb_buffs_max_remains <= 7 & ( cooldown.shadow_dance.ready || cooldown.vanish.ready )",
["action"] = "roll_the_bones",
["description"] = "Use Roll the Bones if reroll conditions are met, or with no buffs, or 2s before buffs expire with T31, or 7s before buffs expire with Vanish/Dance ready",
},
{
["enabled"] = true,
["criteria"] = "! variable.rtb_reroll & rtb_buffs >= 3 + set_bonus.tier31_4pc & ( buff.shadow_dance.down || rtb_buffs >= 6 )",
["action"] = "keep_it_rolling",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points < cp_max_spend",
["action"] = "ghostly_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.crackshot.enabled & cooldown.between_the_eyes.ready & variable.finish_condition & ! stealthed.all || ! talent.crackshot.enabled & target.time_to_die > 11 & buff.between_the_eyes.up || boss & fight_remains < 11",
["action"] = "sepsis",
["description"] = "Use Sepsis to trigger Crackshot or if the target will survive its DoT",
},
{
["enabled"] = true,
["name"] = "manic_grieftorch",
["description"] = "Manic Grieftorch and Beacon to the Beyond should not be used during stealth and have higher priority than stealth cooldowns",
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || fight_remains <= 5",
["action"] = "manic_grieftorch",
},
{
["enabled"] = true,
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || fight_remains <= 5",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Crackshot builds use stealth cooldowns if Between the Eyes is ready",
["criteria"] = "! stealthed.all & ( ! talent.crackshot.enabled || cooldown.between_the_eyes.ready )",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( energy.base_deficit >= 100 || fight_remains < charges * 6 )",
["action"] = "thistle_tea",
},
{
["enabled"] = true,
["criteria"] = "energy.percent < 50 & ! stealthed.all",
["action"] = "blade_rush",
["description"] = "Use Blade Rush at minimal energy outside of stealth",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || buff.adrenaline_rush.up",
["action"] = "potion",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "dragonfire_bomb_dispenser",
["use_off_gcd"] = 1,
["name"] = "dragonfire_bomb_dispenser",
["criteria"] = "gcd.remains <= action.sinister_strike.gcd / 2 & ( ( ! trinket.t1.is.dragonfire_bomb_dispenser & trinket.t1.cooldown.remains > 10 || trinket.t2.cooldown.remains > 10 ) || cooldown.dragonfire_bomb_dispenser.charges > 2 || fight_remains < 20 || ! trinket.t2.has_cooldown || ! trinket.t1.has_cooldown )",
["description"] = "Default conditions for usable items.  Use Bomb Dispenser on cooldown, but hold if 2nd trinket is nearly off cooldown, unless at max charges or sim duration ends soon",
},
{
["enabled"] = true,
["name"] = "stormeaters_boon",
["action"] = "stormeaters_boon",
["criteria"] = "! stealthed.mantle & ( spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || boss & fight_remains < 10 )",
},
{
["enabled"] = true,
["name"] = "windscar_whetstone",
["action"] = "windscar_whetstone",
["criteria"] = "! stealthed.mantle & ( spell_targets.blade_flurry > desired_targets || raid_event.adds.in > 60 || boss & fight_remains < 7 )",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.mantle & ( buff.between_the_eyes.up || trinket.t1.has_stat.any_dps || boss & fight_remains <= 20 )",
["action"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.mantle & ( buff.between_the_eyes.up || trinket.t2.has_stat.any_dps || boss & fight_remains <= 20 )",
["action"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.mantle & ( buff.between_the_eyes.up || boss & fight_remains <= 20 )",
["action"] = "use_items",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.shadow_dance.enabled & talent.fan_the_hammer.rank + talent.quick_draw.enabled + talent.audacity.enabled < talent.count_the_odds.enabled + talent.keep_it_rolling.enabled",
["description"] = "Stealth Cooldowns",
["var_name"] = "vanish_opportunity_condition",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled & ! talent.crackshot.enabled & ! buff.audacity.up & ( variable.vanish_opportunity_condition || buff.opportunity.stack < buff.opportunity.max_stack ) & variable.ambush_condition",
["action"] = "vanish",
["description"] = "Hidden Opportunity builds without Crackshot use Vanish if Audacity is not active and when under max Opportunity stacks",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.hidden_opportunity.enabled || talent.crackshot.enabled ) & variable.finish_condition",
["action"] = "vanish",
["description"] = "Crackshot builds or builds without Hidden Opportunity use Vanish at finish condition",
},
{
["enabled"] = true,
["criteria"] = "talent.crackshot.enabled & variable.finish_condition",
["action"] = "shadow_dance",
["description"] = "Crackshot builds use Dance at finish condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.between_the_eyes.up & ( ! talent.hidden_opportunity.enabled || ! buff.audacity.up & ( talent.fan_the_hammer.rank < 2 || ! buff.opportunity.up ) ) & ! talent.crackshot.enabled",
["description"] = "Hidden Opportunity builds without Crackshot use Dance if Audacity and Opportunity are not active",
["var_name"] = "shadow_dance_condition",
},
{
["enabled"] = true,
["criteria"] = "! talent.keep_it_rolling.enabled & variable.shadow_dance_condition & buff.slice_and_dice.up & ( variable.finish_condition || talent.hidden_opportunity.enabled ) & ( ! talent.hidden_opportunity.enabled || ! cooldown.vanish.ready )",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["criteria"] = "talent.keep_it_rolling.enabled & variable.shadow_dance_condition & ( cooldown.keep_it_rolling.remains <= 30 || cooldown.keep_it_rolling.remains > 120 & ( variable.finish_condition || talent.hidden_opportunity.enabled ) )",
["action"] = "shadow_dance",
["description"] = "Keep it Rolling builds without Crackshot use Dance at finish condition but hold it for an upcoming Keep it Rolling",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition & ! cooldown.vanish.ready & ! cooldown.shadow_dance.ready",
["action"] = "shadowmeld",
},
},
["finish"] = {
{
["enabled"] = true,
["criteria"] = "! talent.crackshot.enabled & ( buff.between_the_eyes.remains < 4 || talent.improved_between_the_eyes.enabled || talent.greenskins_wickers.enabled || set_bonus.tier30_4pc ) & ! buff.greenskins_wickers.up",
["action"] = "between_the_eyes",
["description"] = "Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins/T30, and avoid overriding Greenskins",
},
{
["enabled"] = true,
["criteria"] = "talent.crackshot.enabled & cooldown.vanish.true_remains > 45 & cooldown.shadow_dance.true_remains > 12",
["action"] = "between_the_eyes",
["description"] = "Crackshot builds use Between the Eyes outside of Stealth if we will not enter a Stealth window before the next cast",
},
{
["enabled"] = true,
["criteria"] = "buff.slice_and_dice.remains < fight_remains & refreshable",
["action"] = "slice_and_dice",
},
{
["enabled"] = true,
["criteria"] = "debuff.ghostly_strike.up || ! talent.ghostly_strike.enabled",
["action"] = "killing_spree",
},
{
["action"] = "cold_blood",
["enabled"] = true,
},
{
["action"] = "dispatch",
["enabled"] = true,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'finish' required some automated changes.\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.improved_between_the_eyes' to 'talent.improved_between_the_eyes.enabled' (1x).\nLine 1: Converted 'talent.greenskins_wickers' to 'talent.greenskins_wickers.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 4: Converted 'talent.ghostly_strike' to 'talent.ghostly_strike.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.improved_ambush' to 'talent.improved_ambush.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'rtb_buffs.will_lose.buried_treasure' to 'rtb_buffs_will_lose_buff.buried_treasure' (1x).\nLine 2: Converted 'rtb_buffs.will_lose.grand_melee' to 'rtb_buffs_will_lose_buff.grand_melee' (1x).\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 3: Converted 'rtb_buffs.will_lose.true_bearing' to 'rtb_buffs_will_lose_buff.true_bearing' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'rtb_buffs.will_lose.broadside' to 'rtb_buffs_will_lose_buff.broadside' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 5: Converted 'rtb_buffs.will_lose.skull_and_crossbones' to 'rtb_buffs_will_lose_buff.skull_and_crossbones' (1x).\nLine 5: Converted 'rtb_buffs.will_lose.grand_melee' to 'rtb_buffs_will_lose_buff.grand_melee' (1x).\nLine 8: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 10: Converted 'talent.loaded_dice' to 'talent.loaded_dice.enabled' (1x).\nLine 12: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\n\nThe import for 'stealth' required some automated changes.\nLine 1: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 1: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 2: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 3: Converted 'talent.deft_maneuvers' to 'talent.deft_maneuvers.enabled' (1x).\nLine 7: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 7: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 10: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 18: Converted 'trinket.1.is.dragonfire_bomb_dispenser' to 'trinket.t1.is.dragonfire_bomb_dispenser' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 18: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 18: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 18: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 18: Converted operations in 'gcd.remains<=action.sinister_strike.gcd%2&((!trinket.t1.is.dragonfire_bomb_dispenser&trinket.t1.cooldown.remains>10||trinket.t2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||fight_remains<20||!trinket.t2.has_cooldown||!trinket.t1.has_cooldown)' to 'gcd.remains<=action.sinister_strike.gcd/2&((!trinket.t1.is.dragonfire_bomb_dispenser&trinket.t1.cooldown.remains>10||trinket.t2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||fight_remains<20||!trinket.t2.has_cooldown||!trinket.t1.has_cooldown)'.\nLine 21: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 22: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 1: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 1: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 1: Converted 'talent.count_the_odds' to 'talent.count_the_odds.enabled' (1x).\nLine 1: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 2: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 7: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 7: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 2: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 3: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 3: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 4: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 5: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 5: Converted 'talent.ruthlessness' to 'talent.ruthlessness.enabled' (1x).\nLine 6: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 8: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nImported 7 action lists.\n",
["spec"] = 260,
["profile"] = "actions.precombat+=/apply_poison\n# Default Roll the Bones reroll rule: reroll for any buffs that aren't Buried Treasure, excluding Grand Melee in single target\nactions.precombat+=/variable,name=rtb_reroll,value=rtb_buffs.will_lose=(rtb_buffs.will_lose.buried_treasure+(rtb_buffs.will_lose.grand_melee&spell_targets.blade_flurry<2&raid_event.adds.in>10))\n# Crackshot builds without T31 should reroll for True Bearing (or Broadside without Hidden Opportunity) if we won't lose over 1 buff\nactions.precombat+=/variable,name=rtb_reroll,if=talent.crackshot&!set_bonus.tier31_4pc,value=(!rtb_buffs.will_lose.true_bearing&talent.hidden_opportunity||!rtb_buffs.will_lose.broadside&!talent.hidden_opportunity)&rtb_buffs.will_lose<=1\n# Crackshot builds with T31 should reroll if we won't lose over 1 buff (2 with Loaded Dice)\nactions.precombat+=/variable,name=rtb_reroll,if=talent.crackshot&set_bonus.tier31_4pc,value=(rtb_buffs.will_lose<=1+buff.loaded_dice.up)\n# Hidden Opportunity builds without Crackshot should reroll for Skull and Crossbones or any 2 buffs excluding Grand Melee in single target\nactions.precombat+=/variable,name=rtb_reroll,if=!talent.crackshot&talent.hidden_opportunity,value=!rtb_buffs.will_lose.skull_and_crossbones&(rtb_buffs.will_lose<2+rtb_buffs.will_lose.grand_melee&spell_targets.blade_flurry<2&raid_event.adds.in>10)\n# Additional reroll rules if all active buffs will not be rolled away, not in stealth, Loaded Dice is active, and we have less than 6 buffs\nactions.precombat+=/variable,name=rtb_reroll,value=variable.rtb_reroll&rtb_buffs.longer=0||rtb_buffs.normal=0&rtb_buffs.longer>=1&rtb_buffs<6&rtb_buffs.max_remains<=39&!stealthed.all&buff.loaded_dice.up\n# Avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global\nactions.precombat+=/variable,name=rtb_reroll,op=reset,if=!(raid_event.adds.remains>12||raid_event.adds.up&(raid_event.adds.in-raid_event.adds.remains)<6||target.time_to_die>12)||boss&fight_remains<12\nactions.precombat+=/blade_flurry,precombat_seconds=3,if=refreshable&talent.underhanded_upper_hand&!stealthed.mantle\nactions.precombat+=/stealth\nactions.precombat+=/adrenaline_rush,precombat_seconds=2,if=settings.use_ld_opener&talent.loaded_dice&(refreshable||buff.roll_the_bones.refreshable&variable.rtb_reroll)\nactions.precombat+=/roll_the_bones,precombat_seconds=2,if=refreshable&variable.rtb_reroll\nactions.precombat+=/adrenaline_rush,precombat_seconds=1,if=!settings.use_ld_opener&refreshable&talent.improved_adrenaline_rush\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\nactions+=/shiv,if=debuff.dispellable_enrage.up\nactions+=/variable,name=ambush_condition,value=(talent.hidden_opportunity||combo_points.deficit>=2+talent.improved_ambush+buff.broadside.up)&energy>=50\n# Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot\nactions+=/variable,name=finish_condition,value=effective_combo_points>=cp_max_spend-1-(stealthed.all&talent.crackshot)\n# With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry\nactions+=/variable,name=blade_flurry_sync,value=spell_targets.blade_flurry<2&raid_event.adds.in>20||buff.blade_flurry.remains>gcd\n# Force Roll the Bones to be refreshed when needed if 0 targets are active, as the RTB action in the sublist is not checked\nactions+=/roll_the_bones,if=rtb_buffs.max_remains<=2&time=0\nactions+=/call_action_list,name=cds\n# High priority stealth list, will fall through if no conditions are met\nactions+=/call_action_list,name=stealth,strict=1,if=stealthed.all&stealthed.all_remains>settings.stealth_padding\nactions+=/run_action_list,name=finish,if=variable.finish_condition\nactions+=/call_action_list,name=build\nactions+=/arcane_torrent,if=energy.base_deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Builders\nactions.build+=/echoing_reprimand\n# High priority Ambush for Hidden Opportunity builds\nactions.build+=/ambush,if=talent.hidden_opportunity&buff.audacity.up\n# With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&talent.audacity&talent.hidden_opportunity&buff.opportunity.up&!buff.audacity.up\n# With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(buff.opportunity.stack>=buff.opportunity.max_stack||buff.opportunity.remains<2)\n# With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(combo_points.deficit>=(1+(talent.quick_draw+buff.broadside.up)*(talent.fan_the_hammer.rank+1))||combo_points<=talent.ruthlessness)\n# If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw\nactions.build+=/pistol_shot,if=!talent.fan_the_hammer&buff.opportunity.up&(energy.base_deficit>energy.regen*1.5||combo_points.deficit<=1+buff.broadside.up||talent.quick_draw.enabled||talent.audacity.enabled&!buff.audacity.up)\n# Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds\nactions.build+=/pool_resource,for_next=1\nactions.build+=/ambush,if=talent.hidden_opportunity\nactions.build+=/sinister_strike\n\n## Cooldowns\n# Use Adrenaline Rush if it is not active and the finisher condition is not met, but Crackshot builds can refresh it with 2cp or lower inside stealth\nactions.cds+=/adrenaline_rush,if=!buff.adrenaline_rush.up&(!variable.finish_condition||!talent.improved_adrenaline_rush)||stealthed.all&talent.crackshot&talent.improved_adrenaline_rush&combo_points<=2\n# Maintain Blade Flurry on 2+ targets, and on single target with Underhanded during Adrenaline Rush\nactions.cds+=/blade_flurry,if=spell_targets>=2-(talent.underhanded_upper_hand&!stealthed.all&buff.adrenaline_rush.up)&buff.blade_flurry.remains<gcd\n# With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given\nactions.cds+=/blade_flurry,if=talent.deft_maneuvers&!variable.finish_condition&(spell_targets>=3&combo_points.deficit=spell_targets+buff.broadside.up||spell_targets>=5)\n# Use Roll the Bones if reroll conditions are met, or with no buffs, or 2s before buffs expire with T31, or 7s before buffs expire with Vanish/Dance ready\nactions.cds+=/roll_the_bones,if=variable.rtb_reroll||rtb_buffs=0||rtb_buffs.max_remains<=2&set_bonus.tier31_4pc||rtb_buffs.max_remains<=7&(cooldown.shadow_dance.ready||cooldown.vanish.ready)\nactions.cds+=/keep_it_rolling,if=!variable.rtb_reroll&rtb_buffs>=3+set_bonus.tier31_4pc&(buff.shadow_dance.down||rtb_buffs>=6)\nactions.cds+=/ghostly_strike,if=effective_combo_points<cp_max_spend\n# Use Sepsis to trigger Crackshot or if the target will survive its DoT\nactions.cds+=/sepsis,if=talent.crackshot&cooldown.between_the_eyes.ready&variable.finish_condition&!stealthed.all||!talent.crackshot&target.time_to_die>11&buff.between_the_eyes.up||boss&fight_remains<11\n# Manic Grieftorch and Beacon to the Beyond should not be used during stealth and have higher priority than stealth cooldowns\nactions.cds+=/use_item,name=manic_grieftorch,if=!stealthed.all&buff.between_the_eyes.up||fight_remains<=5\nactions.cds+=/use_item,name=beacon_to_the_beyond,if=!stealthed.all&buff.between_the_eyes.up||fight_remains<=5\n# Crackshot builds use stealth cooldowns if Between the Eyes is ready\nactions.cds+=/call_action_list,name=stealth_cds,if=!stealthed.all&(!talent.crackshot||cooldown.between_the_eyes.ready)\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.base_deficit>=100||fight_remains<charges*6)\n# Use Blade Rush at minimal energy outside of stealth\nactions.cds+=/blade_rush,if=energy.percent<50&!stealthed.all\nactions.cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||buff.adrenaline_rush.up\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n# Default conditions for usable items.  Use Bomb Dispenser on cooldown, but hold if 2nd trinket is nearly off cooldown, unless at max charges or sim duration ends soon\nactions.cds+=/use_item,name=dragonfire_bomb_dispenser,use_off_gcd=1,if=gcd.remains<=action.sinister_strike.gcd%2&((!trinket.1.is.dragonfire_bomb_dispenser&trinket.1.cooldown.remains>10||trinket.2.cooldown.remains>10)||cooldown.dragonfire_bomb_dispenser.charges>2||fight_remains<20||!trinket.2.has_cooldown||!trinket.1.has_cooldown)\nactions.cds+=/use_item,name=stormeaters_boon,if=!stealthed.mantle&(spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||boss&fight_remains<10)\nactions.cds+=/use_item,name=windscar_whetstone,if=!stealthed.mantle&(spell_targets.blade_flurry>desired_targets||raid_event.adds.in>60||boss&fight_remains<7)\nactions.cds+=/trinket1,if=!stealthed.mantle&(buff.between_the_eyes.up||trinket.1.has_stat.any_dps||boss&fight_remains<=20)\nactions.cds+=/trinket2,if=!stealthed.mantle&(buff.between_the_eyes.up||trinket.2.has_stat.any_dps||boss&fight_remains<=20)\nactions.cds+=/use_items,if=!stealthed.mantle&(buff.between_the_eyes.up||boss&fight_remains<=20)\n\n## Finishers\n# Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins/T30, and avoid overriding Greenskins\nactions.finish+=/between_the_eyes,if=!talent.crackshot&(buff.between_the_eyes.remains<4||talent.improved_between_the_eyes||talent.greenskins_wickers||set_bonus.tier30_4pc)&!buff.greenskins_wickers.up\n# Crackshot builds use Between the Eyes outside of Stealth if we will not enter a Stealth window before the next cast\nactions.finish+=/between_the_eyes,if=talent.crackshot&cooldown.vanish.true_remains>45&cooldown.shadow_dance.true_remains>12\nactions.finish+=/slice_and_dice,if=buff.slice_and_dice.remains<fight_remains&refreshable\nactions.finish+=/killing_spree,if=debuff.ghostly_strike.up||!talent.ghostly_strike\nactions.finish+=/cold_blood\nactions.finish+=/dispatch\n\n# Stealth\nactions.stealth+=/blade_flurry,if=talent.subterfuge&talent.hidden_opportunity&spell_targets>=2&buff.blade_flurry.remains<gcd\nactions.stealth+=/cold_blood,if=variable.finish_condition\n### Ensure Crackshot BtE is not skipped because of low energy\n## actions.stealth+=/pool_resource,for_next=1\n# High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld\nactions.stealth+=/between_the_eyes,if=variable.finish_condition&talent.crackshot&(!buff.shadowmeld.up||stealthed.rogue)\nactions.stealth+=/dispatch,if=variable.finish_condition&energy.current>action.between_the_eyes.cost\n# 2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active\nactions.stealth+=/pistol_shot,if=talent.crackshot&talent.fan_the_hammer.rank>=2&buff.opportunity.stack>=6&(buff.broadside.up&combo_points<=1||buff.greenskins_wickers.up)&energy.current>action.between_the_eyes.cost\nactions.stealth+=/ambush,if=talent.hidden_opportunity&energy.current>action.between_the_eyes.cost\n\n# Stealth Cooldowns\nactions.stealth_cds+=/variable,name=vanish_opportunity_condition,value=!talent.shadow_dance&talent.fan_the_hammer.rank+talent.quick_draw+talent.audacity<talent.count_the_odds+talent.keep_it_rolling\n# Hidden Opportunity builds without Crackshot use Vanish if Audacity is not active and when under max Opportunity stacks\nactions.stealth_cds+=/vanish,if=talent.hidden_opportunity&!talent.crackshot&!buff.audacity.up&(variable.vanish_opportunity_condition||buff.opportunity.stack<buff.opportunity.max_stack)&variable.ambush_condition\n# Crackshot builds or builds without Hidden Opportunity use Vanish at finish condition\nactions.stealth_cds+=/vanish,if=(!talent.hidden_opportunity||talent.crackshot)&variable.finish_condition\n# Crackshot builds use Dance at finish condition\nactions.stealth_cds+=/shadow_dance,if=talent.crackshot&variable.finish_condition\n# Hidden Opportunity builds without Crackshot use Dance if Audacity and Opportunity are not active\nactions.stealth_cds+=/variable,name=shadow_dance_condition,value=buff.between_the_eyes.up&(!talent.hidden_opportunity||!buff.audacity.up&(talent.fan_the_hammer.rank<2||!buff.opportunity.up))&!talent.crackshot\nactions.stealth_cds+=/shadow_dance,if=!talent.keep_it_rolling&variable.shadow_dance_condition&buff.slice_and_dice.up&(variable.finish_condition||talent.hidden_opportunity)&(!talent.hidden_opportunity||!cooldown.vanish.ready)\n# Keep it Rolling builds without Crackshot use Dance at finish condition but hold it for an upcoming Keep it Rolling\nactions.stealth_cds+=/shadow_dance,if=talent.keep_it_rolling&variable.shadow_dance_condition&(cooldown.keep_it_rolling.remains<=30||cooldown.keep_it_rolling.remains>120&(variable.finish_condition||talent.hidden_opportunity))\nactions.stealth_cds+=/shadowmeld,if=variable.finish_condition&!cooldown.vanish.ready&!cooldown.shadow_dance.ready",
},
["Augmentation"] = {
["source"] = "https://www.icy-veins.com/wow/augmentation-evoker-pve-dps-rotation-cooldowns-abilities",
["builtIn"] = true,
["date"] = 20231231,
["spec"] = 1473,
["desc"] = "2023-11-23: Always finish an Upheaval empowerment.\n\n2023-11-18: More tweaks to SimC to avoid no-rec scenarios.\n\n2023-11-15:  Tweaks to SimC.\n\n2023-11-14: Move to SimC priority.\n\n2023-11-11:  Prescience to avoid capping applies to precombat as well.\n\n2023-11-09:  Upheaval rank 1 option added; Living Flame usage has changed.\n - Change Prescience usage to avoid capping only.\n\n2023-09-25:  Low-empower Fire Breath occurs when Leaping Flames is not talented.\n\n2023-09-06:  Remove opener Living Flame casts to align with Wowhead guide.\n\n2023-08-08:  Move Tip the Scales up in priority and align with Fire Breath.\n\n2023-07-16:  Tweak Upheaval logic to improve forecasted stage vs. actual stage while charging.\n- More talents factored into priority.\n\n2023-07-15:  FB/Upheaval logic is for +Time Skip, -Interwoven Threads only.\n - Ensure a Fire Breath empowered cast gets finished.\n\n2023-07-14:  Add Fire Breath/Upheaval logic for non-Interwoven Threads builds.\n\n2023-07-13:  Add Source of Magic precombat application if in a raid.\n - Don't recommend Hover mid Breath.\n\n2023-07-12:  Added Time Skip with Breath of Eons option.\n - Fix Breath of Eons condition (based on Ebon Might CD).\n - Adjust Blistering Scales usage to be less redundant.\n - Fix Fire Breath and Upheaval max charge usage.\n\n2023-07-11:  Initial implementation based on Icy-Veins' guide.",
["lists"] = {
["filler"] = {
{
["enabled"] = true,
["criteria"] = "( buff.ancient_flame.up || mana >= 200000 || ! talent.dream_of_spring.enabled || variable.spam_heal = 0 ) & ( active_enemies = 1 || talent.pupil_of_alexstrasza.enabled )",
["action"] = "living_flame",
},
{
["action"] = "azure_strike",
["enabled"] = true,
},
},
["opener_filler"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.opener_delay >? variable.minimum_opener_delay",
["var_name"] = "opener_delay",
["criteria"] = "! variable.opener_cds_detected",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.opener_delay - 1",
["var_name"] = "opener_delay",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "opener_cds_detected",
["criteria"] = "! variable.opener_cds_detected",
},
{
["enabled"] = true,
["criteria"] = "cooldown.breath_of_eons.remains <= 3",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 || talent.pupil_of_alexstrasza.enabled",
["action"] = "living_flame",
},
{
["action"] = "azure_strike",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "quell",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "settings.use_unravel",
["action"] = "unravel",
},
{
["action"] = "cauterizing_flame",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "settings.use_hover & moving & buff.hover.down & buff.breath_of_eons.down",
["action"] = "hover",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "debuff.temporal_wound.remains",
["var_name"] = "temp_wound",
},
{
["enabled"] = true,
["criteria"] = "full_recharge_time <= gcd.max * 3 || active_dot.prescience = 0 & cooldown.ebon_might.remains <= gcd.max * 4",
["action"] = "prescience",
},
{
["enabled"] = true,
["criteria"] = "( buff.ebon_might.remains - cast_time ) <= buff.ebon_might.duration * 0.4 || buff.ebon_might.remains >= action.ebon_might.cast_time || solo",
["action"] = "ebon_might",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.opener_delay > 0",
["list_name"] = "opener_filler",
},
{
["enabled"] = true,
["criteria"] = "debuff.temporal_wound.up & buff.ebon_might.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "cooldown.breath_of_eons.remains <= 3",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["criteria"] = "debuff.temporal_wound.up || boss & fight_remains <= 30 & buff.ebon_might.up",
["name"] = "irideus_fragment",
["action"] = "irideus_fragment",
},
{
["enabled"] = true,
["criteria"] = "debuff.temporal_wound.up || boss & fight_remains <= 30 & buff.ebon_might.up",
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["criteria"] = "debuff.temporal_wound.up || boss & fight_remains <= 30 & buff.ebon_might.up",
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
},
{
["enabled"] = true,
["criteria"] = "debuff.temporal_wound.up || boss & fight_remains <= 30 & buff.ebon_might.up",
["name"] = "balefire_branch",
["action"] = "balefire_branch",
},
{
["enabled"] = true,
["criteria"] = "buff.spoils_of_neltharus_mastery.up & ( ! ( ( trinket.t1.is.irideus_fragment || trinket.t1.is.mirror_of_fractured_tomorrows ) & trinket.t1.cooldown.up || ( trinket.t2.is.irideus_fragment || trinket.t2.is.mirror_of_fractured_tomorrows ) & trinket.t2.cooldown.up ) || time % 120 > 20 || boss & fight_remains % 120 < 25 )",
["name"] = "spoils_of_neltharus",
["action"] = "spoils_of_neltharus",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0.1 & ( ( ! debuff.temporal_wound.up & ( ( trinket.t1.cooldown.remains >= 20 || ! variable.trinket_1_exclude ) & ( trinket.t2.cooldown.remains >= 20 || ! variable.trinket_2_exclude ) ) || variable.trinket_1_exclude & variable.trinket_2_exclude ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.beacon_to_the_beyond >= 5 || raid_event.adds.in > 60 ) || boss & fight_remains < 20",
["name"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["action"] = "belorrelos_the_suncaller",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0.1 & ( ( ! debuff.temporal_wound.up & ( ( trinket.t1.cooldown.remains >= 20 || ! variable.trinket_1_exclude ) & ( trinket.t2.cooldown.remains >= 20 || ! variable.trinket_2_exclude ) ) || variable.trinket_1_exclude & variable.trinket_2_exclude ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.beacon_to_the_beyond >= 5 || raid_event.adds.in > 60 ) || boss & fight_remains < 20",
["name"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "! debuff.temporal_wound.up & ( cooldown.breath_of_eons.remains >= 30 || ! variable.trinket_2_exclude ) & ! variable.trinket_1_manual",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! debuff.temporal_wound.up & ( cooldown.breath_of_eons.remains >= 30 || ! variable.trinket_1_exclude ) & ! variable.trinket_2_manual",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains >= gcd.max * 0.6",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "empowering.fire_breath || cooldown.time_skip.up & talent.time_skip.enabled & ! talent.interwoven_threads.enabled",
["list_name"] = "fb",
},
{
["enabled"] = true,
["action"] = "upheaval",
["cycle_targets"] = 1,
["criteria"] = "empowering.upheaval || target.time_to_die > cast_time + 0.2 & buff.ebon_might.remains > cast_time & cooldown.time_skip.up & talent.time_skip.enabled & ! talent.interwoven_threads.enabled",
["empower_to"] = "1",
},
{
["enabled"] = true,
["action"] = "breath_of_eons",
["criteria"] = "( cooldown.ebon_might.remains <= 4 || buff.ebon_might.up ) & target.time_to_die > 15 & raid_event.adds.in > 15 & ( ! equipped.nymues_unraveling_spindle || cooldown.nymues_unraveling_spindle.remains >= 10 || boss & fight_remains < 30 ) || boss & fight_remains < 30",
["line_cd"] = "117",
},
{
["enabled"] = true,
["criteria"] = "buff.leaping_flames.up & cooldown.fire_breath.up",
["action"] = "living_flame",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "empowering.fire_breath || ( raid_event.adds.remains > 13 || ! raid_event.adds.exists )",
["list_name"] = "fb",
},
{
["enabled"] = true,
["action"] = "upheaval",
["cycle_targets"] = 1,
["criteria"] = "empowering.upheaval || target.time_to_die > cast_time + 0.2 & buff.ebon_might.remains > cast_time & ( raid_event.adds.remains > 13 || ! raid_event.adds.exists )",
["empower_to"] = "1",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.fire_breath.remains + cooldown.upheaval.remains + cooldown.prescience.full_recharge_time ) >= 35",
["action"] = "time_skip",
},
{
["enabled"] = true,
["criteria"] = "talent.dream_of_spring.enabled & buff.essence_burst.up & ( variable.spam_heal = 2 || variable.spam_heal = 1 & ! buff.ancient_flame.up ) & ( buff.ebon_might.up || essence.deficit = 0 || buff.essence_burst.stack = buff.essence_burst.max_stack & cooldown.ebon_might.remains > 4 )",
["action"] = "emerald_blossom",
},
{
["enabled"] = true,
["criteria"] = "buff.ebon_might.remains > execute_time || essence.deficit = 0 & buff.essence_burst.down || buff.essence_burst.stack = buff.essence_burst.max_stack & cooldown.ebon_might.remains > 4",
["action"] = "eruption",
},
{
["enabled"] = true,
["criteria"] = "group_members > 1 & ! active_dot.blistering_scales & buff.ebon_might.down",
["action"] = "blistering_scales",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.ebon_might.up & talent.ancient_flame.enabled & talent.scarlet_adaptation.enabled & ! talent.dream_of_spring.enabled & ! buff.ancient_flame.up & active_enemies = 1",
["action"] = "emerald_blossom",
},
{
["enabled"] = true,
["criteria"] = "settings.use_verdant_embrace & ! buff.ebon_might.up & talent.ancient_flame.enabled & talent.scarlet_adaptation.enabled & ! buff.ancient_flame.up & ( ! talent.dream_of_spring.enabled || mana >= 200000 ) & active_enemies = 1",
["action"] = "verdant_embrace",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "filler",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "spam_heal",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "minimum_opener_delay",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.minimum_opener_delay",
["var_name"] = "opener_delay",
["criteria"] = "! talent.interwoven_threads.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.minimum_opener_delay + variable.opener_delay",
["var_name"] = "opener_delay",
["criteria"] = "talent.interwoven_threads.enabled",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "opener_cds_detected",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.irideus_fragment || trinket.t1.is.balefire_branch || trinket.t1.is.ashes_of_the_embersoul || trinket.t1.is.nymues_unraveling_spindle || trinket.t1.is.mirror_of_fractured_tomorrows || trinket.t1.is.spoils_of_neltharus",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.irideus_fragment || trinket.t2.is.balefire_branch || trinket.t2.is.ashes_of_the_embersoul || trinket.t2.is.nymues_unraveling_spindle || trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.is.spoils_of_neltharus",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.irideus_fragment || trinket.t1.is.balefire_branch || trinket.t1.is.ashes_of_the_embersoul || trinket.t1.is.nymues_unraveling_spindle || trinket.t1.is.mirror_of_fractured_tomorrows || trinket.t1.is.spoils_of_neltharus || trinket.t1.is.beacon_to_the_beyond || trinket.t1.is.belorrelos_the_suncaller",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.irideus_fragment || trinket.t2.is.balefire_branch || trinket.t2.is.ashes_of_the_embersoul || trinket.t2.is.nymues_unraveling_spindle || trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.is.spoils_of_neltharus || trinket.t2.is.beacon_to_the_beyond || trinket.t2.is.belorrelos_the_suncaller",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["criteria"] = "buff.blessing_of_the_bronze.down",
["action"] = "blessing_of_the_bronze",
},
{
["enabled"] = true,
["criteria"] = "group & active_dot.source_of_magic = 0",
["action"] = "source_of_magic",
},
{
["enabled"] = true,
["criteria"] = "buff.black_attunement.down",
["action"] = "black_attunement",
},
{
["enabled"] = true,
["criteria"] = "buff.bronze_attunement.down & buff.black_attunement.up & ! buff.black_attunement.mine",
["action"] = "bronze_attunement",
},
{
["enabled"] = true,
["criteria"] = "buff.blistering_scales.stack < 10 & active_dot.blistering_scales = 0",
["action"] = "blistering_scales",
},
},
["fb"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.fire_breath.ready & buff.ebon_might.up",
["action"] = "tip_the_scales",
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "1",
["criteria"] = "fight_remains > 16 & buff.ebon_might.remains > cast_time & equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "2",
["criteria"] = "fight_remains > 12 & buff.ebon_might.remains > cast_time & equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "3",
["criteria"] = "fight_remains > 8 & buff.ebon_might.remains > cast_time & equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "4",
["criteria"] = "fight_remains > 4 & talent.font_of_magic.enabled & ( buff.ebon_might.remains > cast_time || buff.tip_the_scales.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "3",
["criteria"] = "fight_remains > 8 & ( buff.ebon_might.remains > cast_time || buff.tip_the_scales.up ) & ! equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "2",
["criteria"] = "fight_remains > 12 & buff.ebon_might.remains > cast_time & ! equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "1",
["criteria"] = "fight_remains > 16 & buff.ebon_might.remains > cast_time & ! equipped.neltharions_call_to_chaos",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "max_empower",
["criteria"] = "empowering.fire_breath",
["cycle_targets"] = 1,
},
},
},
["version"] = 20231231,
["warnings"] = "The import for 'filler' required some automated changes.\nLine 1: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\nLine 1: Converted 'talent.pupil_of_alexstrasza' to 'talent.pupil_of_alexstrasza.enabled' (1x).\n\nThe import for 'opener_filler' required some automated changes.\nLine 5: Converted 'talent.pupil_of_alexstrasza' to 'talent.pupil_of_alexstrasza.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 15: Converted 'trinket.1.is.irideus_fragment' to 'trinket.t1.is.irideus_fragment' (1x).\nLine 15: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 15: Converted 'trinket.1.cooldown.up' to 'trinket.t1.cooldown.up' (1x).\nLine 15: Converted 'trinket.1.cooldown.up' to 'trinket.t1.cooldown.up'.\nLine 15: Converted 'trinket.2.is.irideus_fragment' to 'trinket.t2.is.irideus_fragment' (1x).\nLine 15: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 15: Converted 'trinket.2.cooldown.up' to 'trinket.t2.cooldown.up' (1x).\nLine 15: Converted 'trinket.2.cooldown.up' to 'trinket.t2.cooldown.up'.\nLine 15: Converted operations in 'buff.spoils_of_neltharus_mastery.up&(!((trinket.t1.is.irideus_fragment||trinket.t1.is.mirror_of_fractured_tomorrows)&trinket.t1.cooldown.up||(trinket.t2.is.irideus_fragment||trinket.t2.is.mirror_of_fractured_tomorrows)&trinket.t2.cooldown.up)||time%%120>20||boss&fight_remains%%120<25)' to 'buff.spoils_of_neltharus_mastery.up&(!((trinket.t1.is.irideus_fragment||trinket.t1.is.mirror_of_fractured_tomorrows)&trinket.t1.cooldown.up||(trinket.t2.is.irideus_fragment||trinket.t2.is.mirror_of_fractured_tomorrows)&trinket.t2.cooldown.up)||time%120>20||boss&fight_remains%120<25)'.\nLine 16: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 16: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 16: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 16: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 17: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 17: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 17: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 21: Converted 'talent.time_skip' to 'talent.time_skip.enabled' (1x).\nLine 21: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 22: Converted 'talent.time_skip' to 'talent.time_skip.enabled' (1x).\nLine 22: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 23: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 28: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\nLine 31: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\nLine 31: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\nLine 31: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\nLine 32: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\nLine 32: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\nLine 32: Converted 'talent.dream_of_spring' to 'talent.dream_of_spring.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 4: Converted 'talent.interwoven_threads' to 'talent.interwoven_threads.enabled' (1x).\nLine 6: Converted 'trinket.1.is.irideus_fragment' to 'trinket.t1.is.irideus_fragment' (1x).\nLine 6: Converted 'trinket.1.is.balefire_branch' to 'trinket.t1.is.balefire_branch' (1x).\nLine 6: Converted 'trinket.1.is.ashes_of_the_embersoul' to 'trinket.t1.is.ashes_of_the_embersoul' (1x).\nLine 6: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 6: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 6: Converted 'trinket.1.is.spoils_of_neltharus' to 'trinket.t1.is.spoils_of_neltharus' (1x).\nLine 7: Converted 'trinket.2.is.irideus_fragment' to 'trinket.t2.is.irideus_fragment' (1x).\nLine 7: Converted 'trinket.2.is.balefire_branch' to 'trinket.t2.is.balefire_branch' (1x).\nLine 7: Converted 'trinket.2.is.ashes_of_the_embersoul' to 'trinket.t2.is.ashes_of_the_embersoul' (1x).\nLine 7: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 7: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 7: Converted 'trinket.2.is.spoils_of_neltharus' to 'trinket.t2.is.spoils_of_neltharus' (1x).\nLine 8: Converted 'trinket.1.is.irideus_fragment' to 'trinket.t1.is.irideus_fragment' (1x).\nLine 8: Converted 'trinket.1.is.balefire_branch' to 'trinket.t1.is.balefire_branch' (1x).\nLine 8: Converted 'trinket.1.is.ashes_of_the_embersoul' to 'trinket.t1.is.ashes_of_the_embersoul' (1x).\nLine 8: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 8: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 8: Converted 'trinket.1.is.spoils_of_neltharus' to 'trinket.t1.is.spoils_of_neltharus' (1x).\nLine 8: Converted 'trinket.1.is.beacon_to_the_beyond' to 'trinket.t1.is.beacon_to_the_beyond' (1x).\nLine 8: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 9: Converted 'trinket.2.is.irideus_fragment' to 'trinket.t2.is.irideus_fragment' (1x).\nLine 9: Converted 'trinket.2.is.balefire_branch' to 'trinket.t2.is.balefire_branch' (1x).\nLine 9: Converted 'trinket.2.is.ashes_of_the_embersoul' to 'trinket.t2.is.ashes_of_the_embersoul' (1x).\nLine 9: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 9: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 9: Converted 'trinket.2.is.spoils_of_neltharus' to 'trinket.t2.is.spoils_of_neltharus' (1x).\nLine 9: Converted 'trinket.2.is.beacon_to_the_beyond' to 'trinket.t2.is.beacon_to_the_beyond' (1x).\nLine 9: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\n\nThe import for 'fb' required some automated changes.\nLine 5: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\n\nImported 5 action lists.\n",
["author"] = "Saeldur (Icy-Veins); SimC",
["profile"] = "actions.precombat+=/variable,name=spam_heal,default=1,op=reset\nactions.precombat+=/variable,name=minimum_opener_delay,op=reset,default=0\nactions.precombat+=/variable,name=opener_delay,value=variable.minimum_opener_delay,if=!talent.interwoven_threads\nactions.precombat+=/variable,name=opener_delay,value=variable.minimum_opener_delay+variable.opener_delay,if=talent.interwoven_threads\nactions.precombat+=/variable,name=opener_cds_detected,op=reset,default=0\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.irideus_fragment||trinket.1.is.balefire_branch||trinket.1.is.ashes_of_the_embersoul||trinket.1.is.nymues_unraveling_spindle||trinket.1.is.mirror_of_fractured_tomorrows||trinket.1.is.spoils_of_neltharus\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.irideus_fragment||trinket.2.is.balefire_branch||trinket.2.is.ashes_of_the_embersoul||trinket.2.is.nymues_unraveling_spindle||trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.is.spoils_of_neltharus\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.irideus_fragment||trinket.1.is.balefire_branch||trinket.1.is.ashes_of_the_embersoul||trinket.1.is.nymues_unraveling_spindle||trinket.1.is.mirror_of_fractured_tomorrows||trinket.1.is.spoils_of_neltharus||trinket.1.is.beacon_to_the_beyond||trinket.1.is.belorrelos_the_suncaller\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.irideus_fragment||trinket.2.is.balefire_branch||trinket.2.is.ashes_of_the_embersoul||trinket.2.is.nymues_unraveling_spindle||trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.is.spoils_of_neltharus||trinket.2.is.beacon_to_the_beyond||trinket.2.is.belorrelos_the_suncaller\nactions.precombat+=/blessing_of_the_bronze,if=buff.blessing_of_the_bronze.down\nactions.precombat+=/source_of_magic,if=group&active_dot.source_of_magic=0\nactions.precombat+=/black_attunement,if=buff.black_attunement.down\nactions.precombat+=/bronze_attunement,if=buff.bronze_attunement.down&buff.black_attunement.up&!buff.black_attunement.mine\nactions.precombat+=/blistering_scales,if=buff.blistering_scales.stack<10&active_dot.blistering_scales=0\n\nactions+=/quell\nactions+=/unravel,if=settings.use_unravel\nactions+=/cauterizing_flame\nactions+=/hover,if=settings.use_hover&moving&buff.hover.down&buff.breath_of_eons.down\nactions+=/variable,name=temp_wound,value=debuff.temporal_wound.remains\nactions+=/prescience,if=full_recharge_time<=gcd.max*3||active_dot.prescience=0&cooldown.ebon_might.remains<=gcd.max*4\nactions+=/ebon_might,if=(buff.ebon_might.remains-cast_time)<=buff.ebon_might.duration*0.4||buff.ebon_might.remains>=action.ebon_might.cast_time||solo\nactions+=/run_action_list,name=opener_filler,if=variable.opener_delay>0\nactions+=/potion,if=debuff.temporal_wound.up&buff.ebon_might.up\nactions+=/use_item,name=nymues_unraveling_spindle,if=cooldown.breath_of_eons.remains<=3\nactions+=/use_item,name=irideus_fragment,if=debuff.temporal_wound.up||boss&fight_remains<=30&buff.ebon_might.up\nactions+=/use_item,name=ashes_of_the_embersoul,if=debuff.temporal_wound.up||boss&fight_remains<=30&buff.ebon_might.up\nactions+=/use_item,name=mirror_of_fractured_tomorrows,if=debuff.temporal_wound.up||boss&fight_remains<=30&buff.ebon_might.up\nactions+=/use_item,name=balefire_branch,if=debuff.temporal_wound.up||boss&fight_remains<=30&buff.ebon_might.up\nactions+=/use_item,name=spoils_of_neltharus,if=buff.spoils_of_neltharus_mastery.up&(!((trinket.1.is.irideus_fragment||trinket.1.is.mirror_of_fractured_tomorrows)&trinket.1.cooldown.up||(trinket.2.is.irideus_fragment||trinket.2.is.mirror_of_fractured_tomorrows)&trinket.2.cooldown.up)||time%%120>20||boss&fight_remains%%120<25)\nactions+=/use_item,name=beacon_to_the_beyond,use_off_gcd=1,if=gcd.remains>0.1&((!debuff.temporal_wound.up&((trinket.1.cooldown.remains>=20||!variable.trinket_1_exclude)&(trinket.2.cooldown.remains>=20||!variable.trinket_2_exclude))||variable.trinket_1_exclude&variable.trinket_2_exclude))&(!raid_event.adds.exists||raid_event.adds.up||spell_targets.beacon_to_the_beyond>=5||raid_event.adds.in>60)||boss&fight_remains<20\nactions+=/use_item,name=belorrelos_the_suncaller,use_off_gcd=1,if=gcd.remains>0.1&((!debuff.temporal_wound.up&((trinket.1.cooldown.remains>=20||!variable.trinket_1_exclude)&(trinket.2.cooldown.remains>=20||!variable.trinket_2_exclude))||variable.trinket_1_exclude&variable.trinket_2_exclude))&(!raid_event.adds.exists||raid_event.adds.up||spell_targets.beacon_to_the_beyond>=5||raid_event.adds.in>60)||boss&fight_remains<20\nactions+=/use_item,slot=trinket1,if=!debuff.temporal_wound.up&(cooldown.breath_of_eons.remains>=30||!variable.trinket_2_exclude)&!variable.trinket_1_manual\nactions+=/use_item,slot=trinket2,if=!debuff.temporal_wound.up&(cooldown.breath_of_eons.remains>=30||!variable.trinket_1_exclude)&!variable.trinket_2_manual\nactions+=/use_item,slot=main_hand,use_off_gcd=1,if=gcd.remains>=gcd.max*0.6\nactions+=/call_action_list,name=fb,if=empowering.fire_breath||cooldown.time_skip.up&talent.time_skip&!talent.interwoven_threads\nactions+=/upheaval,cycle_targets=1,empower_to=1,if=empowering.upheaval||target.time_to_die>cast_time+0.2&buff.ebon_might.remains>cast_time&cooldown.time_skip.up&talent.time_skip&!talent.interwoven_threads\nactions+=/breath_of_eons,if=(cooldown.ebon_might.remains<=4||buff.ebon_might.up)&target.time_to_die>15&raid_event.adds.in>15&(!equipped.nymues_unraveling_spindle||trinket.nymues_unraveling_spindle.cooldown.remains>=10||boss&fight_remains<30)||boss&fight_remains<30,line_cd=117\nactions+=/living_flame,if=buff.leaping_flames.up&cooldown.fire_breath.up\nactions+=/call_action_list,name=fb,if=empowering.fire_breath||(raid_event.adds.remains>13||!raid_event.adds.exists)\nactions+=/upheaval,cycle_targets=1,empower_to=1,if=empowering.upheaval||target.time_to_die>cast_time+0.2&buff.ebon_might.remains>cast_time&(raid_event.adds.remains>13||!raid_event.adds.exists)\nactions+=/time_skip,if=(cooldown.fire_breath.remains+cooldown.upheaval.remains+cooldown.prescience.full_recharge_time)>=35\nactions+=/emerald_blossom,if=talent.dream_of_spring&buff.essence_burst.up&(variable.spam_heal=2||variable.spam_heal=1&!buff.ancient_flame.up)&(buff.ebon_might.up||essence.deficit=0||buff.essence_burst.stack=buff.essence_burst.max_stack&cooldown.ebon_might.remains>4)\nactions+=/eruption,if=buff.ebon_might.remains>execute_time||essence.deficit=0&buff.essence_burst.down||buff.essence_burst.stack=buff.essence_burst.max_stack&cooldown.ebon_might.remains>4\nactions+=/blistering_scales,cycle_targets=1,if=group_members>1&!active_dot.blistering_scales&buff.ebon_might.down\nactions+=/emerald_blossom,if=!buff.ebon_might.up&talent.ancient_flame&talent.scarlet_adaptation&!talent.dream_of_spring&!buff.ancient_flame.up&active_enemies=1\nactions+=/verdant_embrace,if=settings.use_verdant_embrace&!buff.ebon_might.up&talent.ancient_flame&talent.scarlet_adaptation&!buff.ancient_flame.up&(!talent.dream_of_spring||mana>=200000)&active_enemies=1\nactions+=/run_action_list,name=filler\n\nactions.opener_filler+=/variable,name=opener_delay,value=variable.opener_delay>?variable.minimum_opener_delay,if=!variable.opener_cds_detected\nactions.opener_filler+=/variable,name=opener_delay,value=variable.opener_delay-1\nactions.opener_filler+=/variable,name=opener_cds_detected,value=1,if=!variable.opener_cds_detected\nactions.opener_filler+=/use_item,name=nymues_unraveling_spindle,if=cooldown.breath_of_eons.remains<=3\nactions.opener_filler+=/living_flame,if=active_enemies=1||talent.pupil_of_alexstrasza\nactions.opener_filler+=/azure_strike\n\nactions.fb+=/tip_the_scales,if=cooldown.fire_breath.ready&buff.ebon_might.up\nactions.fb+=/fire_breath,empower_to=1,cycle_targets=1,if=fight_remains>16&buff.ebon_might.remains>cast_time&equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=2,cycle_targets=1,if=fight_remains>12&buff.ebon_might.remains>cast_time&equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=3,cycle_targets=1,if=fight_remains>8&buff.ebon_might.remains>cast_time&equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=4,cycle_targets=1,if=fight_remains>4&talent.font_of_magic&(buff.ebon_might.remains>cast_time||buff.tip_the_scales.up)\nactions.fb+=/fire_breath,empower_to=3,cycle_targets=1,if=fight_remains>8&(buff.ebon_might.remains>cast_time||buff.tip_the_scales.up)&!equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=2,cycle_targets=1,if=fight_remains>12&buff.ebon_might.remains>cast_time&!equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=1,cycle_targets=1,if=fight_remains>16&buff.ebon_might.remains>cast_time&!equipped.neltharions_call_to_chaos\nactions.fb+=/fire_breath,empower_to=max,cycle_targets=1,if=empowering.fire_breath\n\nactions.filler+=/living_flame,if=(buff.ancient_flame.up||mana>=200000||!talent.dream_of_spring||variable.spam_heal=0)&(active_enemies=1||talent.pupil_of_alexstrasza)\nactions.filler+=/azure_strike",
},
["Restoration Shaman"] = {
["builtIn"] = true,
["date"] = 20230321.1,
["spec"] = 264,
["desc"] = "2023-03-21:  Add Healing Rain (Acid Rain) and Stormkeeper to DPS priority.",
["profile"] = "actions.precombat+=/earthliving_weapon\nactions.precombat+=/water_shield,if=buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank\nactions.precombat+=/lightning_shield,if=buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank\nactions.precombat+=/earth_shield,if=buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank\nactions.precombat+=/earth_elemental\nactions.precombat+=/potion\n\nactions+=/spiritwalkers_grace,moving=1,if=movement.distance>6\n# Interrupt of casts.\nactions+=/wind_shear\nactions+=/potion\nactions+=/use_items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/healing_rain,if=!moving&talent.acid_rain\nactions+=/stormkeeper\nactions+=/flame_shock,cycle_targets=1,if=active_enemies<3&refreshable\nactions+=/primordial_wave\nactions+=/lava_burst,if=(active_enemies=1||active_enemies=2&buff.lava_surge.up)&dot.flame_shock.remains>cast_time&cooldown_react\nactions+=/earth_elemental\nactions+=/lightning_bolt,if=spell_targets.chain_lightning<2||!talent.chain_lightning\nactions+=/chain_lightning,if=spell_targets.chain_lightning>1\nactions+=/flame_shock,moving=1\nactions+=/frost_shock,moving=1",
["version"] = 20230321.1,
["warnings"] = "The import for 'default' required some automated changes.\nLine 10: Converted 'talent.acid_rain' to 'talent.acid_rain.enabled' (1x).\nLine 16: Converted 'talent.chain_lightning' to 'talent.chain_lightning.enabled' (1x).\n\nImported 2 action lists.\n",
["lists"] = {
["default"] = {
{
["moving"] = 1,
["enable_moving"] = true,
["criteria"] = "movement.distance > 6",
["action"] = "spiritwalkers_grace",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Interrupt of casts.",
["action"] = "wind_shear",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! moving & talent.acid_rain.enabled",
["action"] = "healing_rain",
},
{
["action"] = "stormkeeper",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "active_enemies < 3 & refreshable",
["cycle_targets"] = 1,
},
{
["action"] = "primordial_wave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( active_enemies = 1 || active_enemies = 2 & buff.lava_surge.up ) & dot.flame_shock.remains > cast_time & cooldown_react",
["action"] = "lava_burst",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.chain_lightning < 2 || ! talent.chain_lightning.enabled",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.chain_lightning > 1",
["action"] = "chain_lightning",
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "flame_shock",
["enabled"] = true,
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "frost_shock",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "earthliving_weapon",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank",
["action"] = "water_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank",
["action"] = "lightning_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank",
["action"] = "earth_shield",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
},
},
["author"] = "Hekili",
},
["Assassination"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231204,
["author"] = "SimC",
["desc"] = "2023-12-04: Don't overwrite a snapshotted Crimson Tempest.\n\n2023-12-01: SimC updated again.\n\n2023-11-29: Update from SimC; add filler Envenom when 4+ CP and nothing else is recommended.\n\n2023-11-27:  Fix inversion to Tier 31 logic; move Deathmark Condition.\n\n2023-11-26: Minor SimC updates.\n\n2023-11-15: SimC updates + Crimson Tempest tweak.\n\n2023-11-10: Incremental SimC update.\n\n2023-11-09: Relax Envenom requirements.\n\n2023-11-08: Relax Crimson Tempest requirements.\n\n2023-11-07: Further 10.2 updates.\n\n2023-11-05: Patch 10.2.\n\n2023-06-24: Tweak Exsanguinate and Echoing Reprimand conditions.\n\n2023-05-26: Sepsis sync logic added.\n\n2023-02-25: Allow Envenom as CP spender against a dying target when Rupture and Crimson Tempest would otherwise not be used.\n\n2023-03-19: 10.0.7 update.\n\n2023-03-25: Add missing Shiv entry.",
["lists"] = {
["stealthed"] = {
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "talent.kingsbane.enabled & ( dot.kingsbane.ticking || cooldown.kingsbane.up ) & ( ! debuff.shiv.up & debuff.shiv.remains < 1 ) & buff.envenom.up",
["action"] = "shiv",
["description"] = "Make sure to have Shiv up during Kingsbane as a final check",
},
{
["enabled"] = true,
["criteria"] = "buff.shadow_dance.remains >= 2 & buff.envenom.up",
["action"] = "kingsbane",
["description"] = "Kingsbane in Shadow Dance for snapshotting Nightstalker",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= 4 & dot.kingsbane.ticking & buff.envenom.remains <= 3",
["action"] = "envenom",
["description"] = "Envenom to maintain the buff during Shadow Dance",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= 4 & buff.master_assassin_aura.up & ! buff.shadow_dance.up & variable.single_target",
["action"] = "envenom",
["description"] = "Envenom during Master Assassin in single target",
},
{
["enabled"] = true,
["action"] = "crimson_tempest",
["cycle_targets"] = 1,
["description"] = "Crimson Tempest on 3+ targets to snapshot Nightstalker",
["criteria"] = "spell_targets >= 3 & refreshable & effective_combo_points >= 4 & ( ! variable.deathmark_condition || boss & fight_remains <= 20 || ! cooldown.deathmark.ready ) & target.time_to_die - remains > 6",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["description"] = "Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Sepsis buff time and Indiscriminate Carnage",
["criteria"] = "stealthed.improved_garrote & ( remains < ( 12 - buff.sepsis_buff.remains ) || pmultiplier <= 1 || ( buff.indiscriminate_carnage.up & active_dot.garrote < spell_targets.fan_of_knives ) ) & ! variable.single_target & target.time_to_die - remains > 2",
},
{
["enabled"] = true,
["criteria"] = "stealthed.improved_garrote & ( pmultiplier <= 1 || remains < 14 || ! variable.single_target & buff.master_assassin_aura.remains < 3 ) & combo_points.deficit >= 1 + 2 * talent.shrouded_suffocation.enabled",
["action"] = "garrote",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= 4 & ( pmultiplier <= 1 ) & ( buff.shadow_dance.up || debuff.deathmark.up )",
["action"] = "rupture",
["description"] = "Rupture in Shadow Dance to snapshot Nightstalker as a final resort",
},
},
["vanish"] = {
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["extra_amount"] = "45",
["description"] = "Stealth Cooldowns Vanish Sync for Improved Garrote with Deathmark",
},
{
["enabled"] = true,
["criteria"] = "! talent.kingsbane.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 12 || cooldown.deathmark.remains > 60 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
["action"] = "shadow_dance",
["description"] = "Shadow Dance for non-Kingsbane setups",
},
{
["enabled"] = true,
["criteria"] = "! talent.kingsbane.enabled & ! talent.improved_garrote.enabled & talent.master_assassin.enabled & ! dot.rupture.refreshable & dot.garrote.remains > 3 & ( debuff.deathmark.up || cooldown.deathmark.remains > 60 ) & ( debuff.shiv.up || debuff.deathmark.remains < 4 || dot.sepsis.ticking ) & dot.sepsis.remains < 3",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["criteria"] = "! talent.master_assassin.enabled & ! talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
["action"] = "vanish",
["description"] = "Vanish to spread Garrote during Deathmark without Indiscriminate Carnage",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["extra_amount"] = "45",
},
{
["enabled"] = true,
["criteria"] = "! talent.master_assassin.enabled & talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & spell_targets.fan_of_knives > 2",
["action"] = "vanish",
["description"] = "Vanish for cleaving Garrotes with Indiscriminate Carnage",
},
{
["enabled"] = true,
["criteria"] = "talent.master_assassin.enabled & talent.kingsbane.enabled & dot.kingsbane.remains <= 3 & dot.kingsbane.ticking & debuff.deathmark.remains <= 3 & dot.deathmark.ticking",
["action"] = "vanish",
["description"] = "Vanish for Master Assassin during Kingsbane",
},
{
["enabled"] = true,
["criteria"] = "! talent.improved_garrote.enabled & talent.master_assassin.enabled & ! dot.rupture.refreshable & dot.garrote.remains > 3 & debuff.deathmark.up & ( debuff.shiv.up || debuff.deathmark.remains < 4 || dot.sepsis.ticking ) & dot.sepsis.remains < 3",
["action"] = "vanish",
["description"] = "Vanish fallback for Master Assassin",
},
},
["shiv"] = {
{
["enabled"] = true,
["criteria"] = "talent.kingsbane.enabled & ! talent.lightweight_shiv.enabled & buff.envenom.up & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( dot.kingsbane.ticking & dot.kingsbane.remains < 8 || cooldown.kingsbane.remains >= 24 ) & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking ) || boss & fight_remains <= charges * 8",
["action"] = "shiv",
["description"] = "Shiv   Shiv if talented into Kingsbane, Always sync, or prioritize the last 8 seconds",
},
{
["enabled"] = true,
["criteria"] = "talent.kingsbane.enabled & talent.lightweight_shiv.enabled & buff.envenom.up & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( dot.kingsbane.ticking || cooldown.kingsbane.remains <= 1 ) || boss & fight_remains <= charges * 8",
["action"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "talent.arterial_precision.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & debuff.deathmark.up || boss & fight_remains <= charges * 8",
["action"] = "shiv",
["description"] = "Shiv cases for Sepsis/Arterial in special circumstances",
},
{
["enabled"] = true,
["criteria"] = "talent.sepsis.enabled & ! talent.kingsbane.enabled & ! talent.arterial_precision.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( ( cooldown.shiv.charges_fractional > 0.9 + talent.lightweight_shiv.enabled & variable.sepsis_sync_remains > 5 ) || dot.sepsis.ticking || dot.deathmark.ticking || boss & fight_remains <= charges * 8 )",
["action"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "! talent.kingsbane.enabled & ! talent.arterial_precision.enabled & ! talent.sepsis.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & ( ! talent.crimson_tempest.enabled || variable.single_target || dot.crimson_tempest.ticking ) || boss & fight_remains <= charges * 8",
["action"] = "shiv",
["description"] = "Fallback if no special cases apply",
},
},
["misc_cds"] = {
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || debuff.deathmark.up",
["action"] = "potion",
["description"] = "Miscellaneous Cooldowns Potion",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "blood_fury",
["description"] = "Various special racials to be synced with cooldowns",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.kingsbane.enabled & debuff.deathmark.up & debuff.shiv.up ) || ( talent.kingsbane.enabled & debuff.deathmark.up & dot.kingsbane.ticking & dot.kingsbane.remains < 8 )",
["action"] = "ancestral_call",
},
},
["items"] = {
{
["enabled"] = true,
["action"] = "ashes_of_the_embersoul",
["use_off_gcd"] = 1,
["description"] = "Special Case Trinkets",
["criteria"] = "( dot.kingsbane.ticking & dot.kingsbane.remains <= 11 ) || boss & fight_remains <= 22",
["name"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 || boss & fight_remains <= 22",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_sync_slot = 1 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["action"] = "trinket1",
["slots"] = "trinket1",
["description"] = "Fallback case for using stat trinkets",
},
{
["enabled"] = true,
["slots"] = "trinket2",
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot )",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all",
["action"] = "kick",
["description"] = "Interrupt on cooldown to allow simming interactions with that",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.fan_of_knives < 2",
["var_name"] = "single_target",
["description"] = "Conditional to check if there is only one enemy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy.regen_combined > settings.regen_threshold",
["var_name"] = "regen_saturated",
["description"] = "Combined Energy Regen needed to saturate",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Check if we should be using our energy",
["var_name"] = "not_pooling",
["value"] = "( dot.deathmark.ticking || dot.kingsbane.ticking || buff.shadow_dance.up || debuff.shiv.up || cooldown.thistle_tea.full_recharge_time < 20 ) || ( buff.envenom.up & buff.envenom.remains <= 2 ) || energy.pct >= 80 || fight_remains <= 90",
["action"] = "variable",
["value_else"] = "( dot.deathmark.ticking || dot.kingsbane.ticking || buff.shadow_dance.up || debuff.shiv.up || cooldown.thistle_tea.full_recharge_time < 20 ) || energy.pct >= 80",
["criteria"] = "set_bonus.tier31_4pc",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Next Sepsis cooldown time based on Deathmark syncing logic and remaining fight duration",
["var_name"] = "sepsis_sync_remains",
["value"] = "cooldown.deathmark.remains",
["action"] = "variable",
["value_else"] = "cooldown.sepsis.remains",
["criteria"] = "cooldown.deathmark.remains > cooldown.sepsis.remains & cooldown.deathmark.remains < fight_remains",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.master_assassin.enabled || dot.garrote.ticking",
["var_name"] = "deathmark_ma_condition",
["description"] = "Wait on Deathmark for Garrote with MA and check for Kingsbane",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.kingsbane.enabled || cooldown.kingsbane.remains <= 2",
["var_name"] = "deathmark_kingsbane_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! stealthed.rogue & dot.rupture.ticking & buff.envenom.up & ! debuff.deathmark.up & variable.deathmark_ma_condition & variable.deathmark_kingsbane_condition",
["var_name"] = "deathmark_condition",
["description"] = "Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "stealthed.rogue || stealthed.improved_garrote || master_assassin_remains > 0",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["criteria"] = "! buff.slice_and_dice.up & dot.rupture.ticking & combo_points >= 2 || ! talent.cut_to_the_chase.enabled & refreshable & combo_points >= 4",
["action"] = "slice_and_dice",
["description"] = "Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration",
},
{
["enabled"] = true,
["criteria"] = "talent.cut_to_the_chase.enabled & buff.slice_and_dice.up & buff.slice_and_dice.remains < 5 & combo_points >= 4",
["action"] = "envenom",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "dot",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "direct",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen_combined",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= 4 + cooldown.deathmark.ready & ! selected_action",
["action"] = "envenom",
},
},
["precombat"] = {
{
["enabled"] = true,
["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
["action"] = "apply_poison",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "trinket_sync_slot",
["value"] = "1",
["description"] = "Check which trinket slots have Stat Values",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) & ! trinket.t2.is.witherbarks_branch || trinket.t1.is.witherbarks_branch",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) & ! trinket.t1.is.witherbarks_branch || trinket.t2.is.witherbarks_branch",
},
{
["action"] = "stealth",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["precombat_seconds"] = "1",
["description"] = "Pre-cast Slice and Dice if possible",
["criteria"] = "refreshable",
},
},
["direct"] = {
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= 4 + cooldown.deathmark.ready & ( variable.not_pooling || debuff.amplifying_poison.stack > 10 || effective_combo_points > cp_max_spend || ! variable.single_target )",
["action"] = "envenom",
["description"] = "Direct Damage Abilities   Envenom at 4+ CP if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points.deficit > 1 || variable.not_pooling || ! variable.single_target",
["var_name"] = "use_filler",
["description"] = "Check if we should be using a filler",
},
{
["enabled"] = true,
["criteria"] = "talent.caustic_spatter.enabled & dot.rupture.ticking & ( ! debuff.caustic_spatter.up || debuff.caustic_spatter.remains <= 2 ) & variable.use_filler & ! variable.single_target",
["action"] = "mutilate",
["description"] = "Maintain Caustic Spatter",
},
{
["enabled"] = true,
["criteria"] = "talent.caustic_spatter.enabled & dot.rupture.ticking & ( ! debuff.caustic_spatter.up || debuff.caustic_spatter.remains <= 2 ) & variable.use_filler & ! variable.single_target",
["action"] = "ambush",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & ! dot.serrated_bone_spike_dot.ticking",
["action"] = "serrated_bone_spike",
["description"] = "Apply SBS to all targets without a debuff as priority, preferring targets dying sooner after the primary target",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & ! dot.serrated_bone_spike_dot.ticking",
["action"] = "serrated_bone_spike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & master_assassin_remains < 0.8 & ( boss & fight_remains <= 5 || cooldown.serrated_bone_spike.max_charges - charges_fractional <= 0.25 )",
["action"] = "serrated_bone_spike",
["description"] = "Keep from capping charges or burn at the end of fights",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & master_assassin_remains < 0.8 & ! variable.single_target & debuff.shiv.up",
["action"] = "serrated_bone_spike",
["description"] = "When MA is not at high duration, sync with Shiv",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler || boss & fight_remains < 20",
["action"] = "echoing_reprimand",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & ( ! priority_rotation & spell_targets.fan_of_knives >= 2 + stealthed.rogue + talent.dragontempered_blades.enabled )",
["action"] = "fan_of_knives",
["description"] = "Fan of Knives at 2+ targets or 3+ with DTB",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T",
["criteria"] = "variable.use_filler & spell_targets.fan_of_knives >= 3",
["target_if"] = "! dot.deadly_poison_dot.ticking & ( ! priority_rotation || dot.garrote.ticking || dot.rupture.ticking )",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler & ( buff.blindside.up || buff.sepsis_buff.remains <= 1 || stealthed.rogue ) & ( ! dot.kingsbane.ticking || debuff.deathmark.down || buff.blindside.up )",
["action"] = "ambush",
["description"] = "Ambush on Blindside/Shadow Dance, or a last resort usage of Sepsis. Do not use Ambush during Kingsbane & Deathmark.",
},
{
["enabled"] = true,
["action"] = "mutilate",
["cycle_targets"] = 1,
["description"] = "Tab-Mutilate to apply Deadly Poison at 2 targets",
["criteria"] = "! dot.deadly_poison_dot.ticking & ! debuff.amplifying_poison.up & ( combo_points.deficit > 1 || variable.not_pooling || ! variable.single_target ) & spell_targets.fan_of_knives = 2",
},
{
["enabled"] = true,
["criteria"] = "variable.use_filler",
["action"] = "mutilate",
["description"] = "Fallback Mutilate",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "dot.rupture.remains > 20 & ( ! talent.improved_garrote.enabled & dot.garrote.ticking || talent.improved_garrote.enabled & cooldown.garrote.up & dot.garrote.pmultiplier <= 1 ) & ( target.time_to_die > 10 || fight_remains < 10 )",
["action"] = "sepsis",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Usages for various special-case Trinkets and other Cantrips if applicable",
["list_name"] = "items",
},
{
["enabled"] = true,
["criteria"] = "variable.deathmark_condition || boss & fight_remains <= 20",
["action"] = "deathmark",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Check for Applicable Shiv usage",
["list_name"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "talent.kingsbane.enabled & buff.envenom.up & ( cooldown.deathmark.remains >= 50 || variable.deathmark_condition )",
["action"] = "shadow_dance",
["description"] = "Special Handling to Sync Shadow Dance to Kingsbane",
},
{
["enabled"] = true,
["criteria"] = "( debuff.shiv.up || cooldown.shiv.remains < 6 ) & buff.envenom.up & ( cooldown.deathmark.remains >= 50 || dot.deathmark.ticking ) || boss & fight_remains <= 15",
["action"] = "kingsbane",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( energy.deficit >= 100 + energy.regen_combined & ( ! talent.kingsbane.enabled || charges >= 2 ) || ( dot.kingsbane.ticking & dot.kingsbane.remains < 6 || ! talent.kingsbane.enabled & dot.deathmark.ticking ) || boss & fight_remains < charges * 6 )",
["action"] = "thistle_tea",
["description"] = "Avoid overcapped energy, use on final 6 seconds of kingsbane, or use a charge during cooldowns when capped on charges",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Potion/Racials/Other misc cooldowns",
["list_name"] = "misc_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "! stealthed.all & master_assassin_remains = 0",
["list_name"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "combo_points >= 4",
["action"] = "cold_blood",
},
},
["dot"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( spell_targets.fan_of_knives * talent.scent_of_blood.rank * 2 ) >? 20",
["var_name"] = "scent_effective_max_stacks",
["description"] = "Damage over time abilities   Check what the maximum Scent of Blood stacks is currently",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.scent_of_blood.stack >= variable.scent_effective_max_stacks",
["var_name"] = "scent_saturation",
["description"] = "We are Scent Saturated when our stack count is hitting the maximum",
},
{
["enabled"] = true,
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > 12",
["action"] = "garrote",
["description"] = "Garrote upkeep, also uses it in AoE to reach energy saturation",
},
{
["enabled"] = true,
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & ! variable.regen_saturated & spell_targets.fan_of_knives >= 2 & target.time_to_die - remains > 12",
["action"] = "garrote",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= 4 & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) )",
["action"] = "rupture",
["description"] = "Rupture upkeep, also uses it in AoE to reach energy saturation",
},
{
["enabled"] = true,
["criteria"] = "effective_combo_points >= 4 & ( pmultiplier <= 1 ) & refreshable & ( ! variable.regen_saturated || ! variable.scent_saturation ) & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) )",
["action"] = "rupture",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & combo_points.deficit >= 1 & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & ( target.time_to_die - remains ) > 4 & master_assassin_remains = 0",
["action"] = "garrote",
["description"] = "Garrote as a special generator for the last CP before a finisher for edge case handling",
},
},
},
["version"] = 20231204,
["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 8: Converted 'talent.shrouded_suffocation' to 'talent.shrouded_suffocation.enabled' (1x).\n\nThe import for 'vanish' required some automated changes.\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 2: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 3: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 3: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 3: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 4: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 4: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 4: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 6: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 6: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 6: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 7: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 7: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 8: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 8: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\n\nThe import for 'shiv' required some automated changes.\nLine 1: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 3: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 4: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\nLine 4: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 4: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 5: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 5: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\n\nThe import for 'misc_cds' required some automated changes.\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\n\nThe import for 'items' required some automated changes.\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'default' required some automated changes.\nLine 8: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 12: Converted 'talent.cut_to_the_chase' to 'talent.cut_to_the_chase.enabled' (1x).\nLine 13: Converted 'talent.cut_to_the_chase' to 'talent.cut_to_the_chase.enabled' (1x).\n\nThe import for 'dot' required some automated changes.\nLine 5: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\nLine 6: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\n\nThe import for 'direct' required some automated changes.\nLine 3: Converted 'talent.caustic_spatter' to 'talent.caustic_spatter.enabled' (1x).\nLine 4: Converted 'talent.caustic_spatter' to 'talent.caustic_spatter.enabled' (1x).\nLine 10: Converted 'talent.dragontempered_blades' to 'talent.dragontempered_blades.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 1: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 7: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 7: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 2: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 3: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 3: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\n\nImported 10 action lists.\n",
["profile"] = "# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat=apply_poison\n# Check which trinket slots have Stat Values\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)&!trinket.2.is.witherbarks_branch||trinket.1.is.witherbarks_branch\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)&!trinket.1.is.witherbarks_branch||trinket.2.is.witherbarks_branch\nactions.precombat+=/stealth\n# Pre-cast Slice and Dice if possible\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions=stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick,if=!stealthed.all\n# Conditional to check if there is only one enemy\nactions+=/variable,name=single_target,value=spell_targets.fan_of_knives<2\n# Combined Energy Regen needed to saturate\nactions+=/variable,name=regen_saturated,value=energy.regen_combined>settings.regen_threshold\n# Check if we should be using our energy\nactions+=/variable,name=not_pooling,op=setif,condition=set_bonus.tier31_4pc,value=(dot.deathmark.ticking||dot.kingsbane.ticking||buff.shadow_dance.up||debuff.shiv.up||cooldown.thistle_tea.full_recharge_time<20)||(buff.envenom.up&buff.envenom.remains<=2)||energy.pct>=80||fight_remains<=90,value_else=(dot.deathmark.ticking||dot.kingsbane.ticking||buff.shadow_dance.up||debuff.shiv.up||cooldown.thistle_tea.full_recharge_time<20)||energy.pct>=80\n# Next Sepsis cooldown time based on Deathmark syncing logic and remaining fight duration\nactions+=/variable,name=sepsis_sync_remains,op=setif,condition=cooldown.deathmark.remains>cooldown.sepsis.remains&cooldown.deathmark.remains<fight_remains,value=cooldown.deathmark.remains,value_else=cooldown.sepsis.remains\n# Wait on Deathmark for Garrote with MA and check for Kingsbane\nactions+=/variable,name=deathmark_ma_condition,value=!talent.master_assassin.enabled||dot.garrote.ticking\nactions+=/variable,name=deathmark_kingsbane_condition,value=!talent.kingsbane||cooldown.kingsbane.remains<=2\n# Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied\nactions+=/variable,name=deathmark_condition,value=!stealthed.rogue&dot.rupture.ticking&buff.envenom.up&!debuff.deathmark.up&variable.deathmark_ma_condition&variable.deathmark_kingsbane_condition\nactions+=/call_action_list,name=stealthed,strict=1,if=stealthed.rogue||stealthed.improved_garrote||master_assassin_remains>0\nactions+=/call_action_list,name=cds\n# Put SnD up initially for Cut to the Chase, refresh with Envenom if at low duration\nactions+=/slice_and_dice,if=!buff.slice_and_dice.up&dot.rupture.ticking&combo_points>=2||!talent.cut_to_the_chase&refreshable&combo_points>=4\nactions+=/envenom,if=talent.cut_to_the_chase&buff.slice_and_dice.up&buff.slice_and_dice.remains<5&combo_points>=4\nactions+=/call_action_list,name=dot\nactions+=/call_action_list,name=direct\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen_combined\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\nactions+=/envenom,if=effective_combo_points>=4+cooldown.deathmark.ready&!selected_action\n\n## Cooldowns\nactions.cds+=/sepsis,if=dot.rupture.remains>20&(!talent.improved_garrote&dot.garrote.ticking||talent.improved_garrote&cooldown.garrote.up&dot.garrote.pmultiplier<=1)&(target.time_to_die>10||fight_remains<10)\n# Usages for various special-case Trinkets and other Cantrips if applicable\nactions.cds+=/call_action_list,name=items\n### Invoke Externals to Deathmark\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=dot.deathmark.ticking\nactions.cds+=/deathmark,if=variable.deathmark_condition||boss&fight_remains<=20\n# Check for Applicable Shiv usage\nactions.cds+=/call_action_list,name=shiv\n# Special Handling to Sync Shadow Dance to Kingsbane\nactions.cds+=/shadow_dance,if=talent.kingsbane&buff.envenom.up&(cooldown.deathmark.remains>=50||variable.deathmark_condition)\nactions.cds+=/kingsbane,if=(debuff.shiv.up||cooldown.shiv.remains<6)&buff.envenom.up&(cooldown.deathmark.remains>=50||dot.deathmark.ticking)||boss&fight_remains<=15\n# Avoid overcapped energy, use on final 6 seconds of kingsbane, or use a charge during cooldowns when capped on charges\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.deficit>=100+energy.regen_combined&(!talent.kingsbane||charges>=2)||(dot.kingsbane.ticking&dot.kingsbane.remains<6||!talent.kingsbane&dot.deathmark.ticking)||boss&fight_remains<charges*6)\n# Potion/Racials/Other misc cooldowns\nactions.cds+=/call_action_list,name=misc_cds\nactions.cds+=/call_action_list,name=vanish,if=!stealthed.all&master_assassin_remains=0\nactions.cds+=/cold_blood,if=combo_points>=4\n\n# Direct Damage Abilities   Envenom at 4+ CP if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe\nactions.direct+=/envenom,if=effective_combo_points>=4+cooldown.deathmark.ready&(variable.not_pooling||debuff.amplifying_poison.stack>10||effective_combo_points>cp_max_spend||!variable.single_target)\n# Check if we should be using a filler\nactions.direct+=/variable,name=use_filler,value=combo_points.deficit>1||variable.not_pooling||!variable.single_target\n# Maintain Caustic Spatter\nactions.direct+=/mutilate,if=talent.caustic_spatter&dot.rupture.ticking&(!debuff.caustic_spatter.up||debuff.caustic_spatter.remains<=2)&variable.use_filler&!variable.single_target\nactions.direct+=/ambush,if=talent.caustic_spatter&dot.rupture.ticking&(!debuff.caustic_spatter.up||debuff.caustic_spatter.remains<=2)&variable.use_filler&!variable.single_target\n# Apply SBS to all targets without a debuff as priority, preferring targets dying sooner after the primary target\nactions.direct+=/serrated_bone_spike,if=variable.use_filler&!dot.serrated_bone_spike_dot.ticking\nactions.direct+=/serrated_bone_spike,cycle_targets=1,if=variable.use_filler&!dot.serrated_bone_spike_dot.ticking\n# Keep from capping charges or burn at the end of fights\nactions.direct+=/serrated_bone_spike,if=variable.use_filler&master_assassin_remains<0.8&(boss&fight_remains<=5||cooldown.serrated_bone_spike.max_charges-charges_fractional<=0.25)\n# When MA is not at high duration, sync with Shiv\nactions.direct+=/serrated_bone_spike,if=variable.use_filler&master_assassin_remains<0.8&!variable.single_target&debuff.shiv.up\nactions.direct+=/echoing_reprimand,if=variable.use_filler||boss&fight_remains<20\n# Fan of Knives at 2+ targets or 3+ with DTB\nactions.direct+=/fan_of_knives,if=variable.use_filler&(!priority_rotation&spell_targets.fan_of_knives>=2+stealthed.rogue+talent.dragontempered_blades)\n# Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T\nactions.direct+=/fan_of_knives,target_if=!dot.deadly_poison_dot.ticking&(!priority_rotation||dot.garrote.ticking||dot.rupture.ticking),if=variable.use_filler&spell_targets.fan_of_knives>=3\n# Ambush on Blindside/Shadow Dance, or a last resort usage of Sepsis. Do not use Ambush during Kingsbane & Deathmark.\nactions.direct+=/ambush,if=variable.use_filler&(buff.blindside.up||buff.sepsis_buff.remains<=1||stealthed.rogue)&(!dot.kingsbane.ticking||debuff.deathmark.down||buff.blindside.up)\n# Tab-Mutilate to apply Deadly Poison at 2 targets\nactions.direct+=/mutilate,cycle_targets=1,if=!dot.deadly_poison_dot.ticking&!debuff.amplifying_poison.up&(combo_points.deficit>1||variable.not_pooling||!variable.single_target)&spell_targets.fan_of_knives=2\n# Fallback Mutilate\nactions.direct+=/mutilate,if=variable.use_filler\n\n# Damage over time abilities   Check what the maximum Scent of Blood stacks is currently\nactions.dot+=/variable,name=scent_effective_max_stacks,value=(spell_targets.fan_of_knives*talent.scent_of_blood.rank*2)>?20\n# We are Scent Saturated when our stack count is hitting the maximum\nactions.dot+=/variable,name=scent_saturation,value=buff.scent_of_blood.stack>=variable.scent_effective_max_stacks\n# Crimson Tempest on 4+ Targets if we have enough energy regen and it is not snapshot from stealth already\n+actions.dot+=/crimson_tempest,cycle_targets=1,if=spell_targets>=3+set_bonus.tier31_4pc&refreshable&pmultiplier<=1&effective_combo_points>=4&energy.regen_combined>25&!cooldown.deathmark.ready&target.time_to_die-remains>6\n# Garrote upkeep, also uses it in AoE to reach energy saturation\nactions.dot+=/garrote,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&target.time_to_die-remains>12\nactions.dot+=/garrote,cycle_targets=1,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&!variable.regen_saturated&spell_targets.fan_of_knives>=2&target.time_to_die-remains>12\n# Rupture upkeep, also uses it in AoE to reach energy saturation\nactions.dot+=/rupture,if=effective_combo_points>=4&(pmultiplier<=1)&refreshable&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))\nactions.dot+=/rupture,cycle_targets=1,if=effective_combo_points>=4&(pmultiplier<=1)&refreshable&(!variable.regen_saturated||!variable.scent_saturation)&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))\n# Garrote as a special generator for the last CP before a finisher for edge case handling\nactions.dot+=/garrote,if=refreshable&combo_points.deficit>=1&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(remains<=tick_time*2&spell_targets.fan_of_knives>=3)&(target.time_to_die-remains)>4&master_assassin_remains=0\n\n# Special Case Trinkets\nactions.items+=/use_item,name=ashes_of_the_embersoul,use_off_gcd=1,if=(dot.kingsbane.ticking&dot.kingsbane.remains<=11)||boss&fight_remains<=22\nactions.items+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=dot.rupture.ticking&cooldown.deathmark.remains<2||boss&fight_remains<=22\n# Fallback case for using stat trinkets\nactions.items+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\nactions.items+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!debuff.deathmark.up&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot)\n\n# Miscellaneous Cooldowns Potion\nactions.misc_cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||debuff.deathmark.up\n# Various special racials to be synced with cooldowns\nactions.misc_cds+=/blood_fury,if=debuff.deathmark.up\nactions.misc_cds+=/berserking,if=debuff.deathmark.up\nactions.misc_cds+=/fireblood,if=debuff.deathmark.up\nactions.misc_cds+=/ancestral_call,if=(!talent.kingsbane&debuff.deathmark.up&debuff.shiv.up)||(talent.kingsbane&debuff.deathmark.up&dot.kingsbane.ticking&dot.kingsbane.remains<8)\n\n# Shiv   Shiv if talented into Kingsbane; Always sync, or prioritize the last 8 seconds\nactions.shiv+=/shiv,if=talent.kingsbane&!talent.lightweight_shiv.enabled&buff.envenom.up&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&(dot.kingsbane.ticking&dot.kingsbane.remains<8||cooldown.kingsbane.remains>=24)&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)||boss&fight_remains<=charges*8\nactions.shiv+=/shiv,if=talent.kingsbane&talent.lightweight_shiv.enabled&buff.envenom.up&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&(dot.kingsbane.ticking||cooldown.kingsbane.remains<=1)||boss&fight_remains<=charges*8\n# Shiv cases for Sepsis/Arterial in special circumstances\nactions.shiv+=/shiv,if=talent.arterial_precision&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&debuff.deathmark.up||boss&fight_remains<=charges*8\nactions.shiv+=/shiv,if=talent.sepsis&!talent.kingsbane&!talent.arterial_precision&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&((cooldown.shiv.charges_fractional>0.9+talent.lightweight_shiv.enabled&variable.sepsis_sync_remains>5)||dot.sepsis.ticking||dot.deathmark.ticking||boss&fight_remains<=charges*8)\n# Fallback if no special cases apply\nactions.shiv+=/shiv,if=!talent.kingsbane&!talent.arterial_precision&!talent.sepsis&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&(!talent.crimson_tempest.enabled||variable.single_target||dot.crimson_tempest.ticking)||boss&fight_remains<=charges*8\n\n## Stealthed Actions\nactions.stealthed+=/pool_resource,for_next=1\n# Make sure to have Shiv up during Kingsbane as a final check\nactions.stealthed+=/shiv,if=talent.kingsbane&(dot.kingsbane.ticking||cooldown.kingsbane.up)&(!debuff.shiv.up&debuff.shiv.remains<1)&buff.envenom.up\n# Kingsbane in Shadow Dance for snapshotting Nightstalker\nactions.stealthed+=/kingsbane,if=buff.shadow_dance.remains>=2&buff.envenom.up\n# Envenom to maintain the buff during Shadow Dance\nactions.stealthed+=/envenom,if=effective_combo_points>=4&dot.kingsbane.ticking&buff.envenom.remains<=3\n# Envenom during Master Assassin in single target\nactions.stealthed+=/envenom,if=effective_combo_points>=4&buff.master_assassin_aura.up&!buff.shadow_dance.up&variable.single_target\n# Crimson Tempest on 3+ targets to snapshot Nightstalker\nactions.stealthed+=/crimson_tempest,cycle_targets=1,if=spell_targets>=3&refreshable&effective_combo_points>=4&(!variable.deathmark_condition||boss&fight_remains<=20||!cooldown.deathmark.ready)&target.time_to_die-remains>6\n# Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Sepsis buff time and Indiscriminate Carnage\nactions.stealthed+=/garrote,cycle_targets=1,if=stealthed.improved_garrote&(remains<(12-buff.sepsis_buff.remains)||pmultiplier<=1||(buff.indiscriminate_carnage.up&active_dot.garrote<spell_targets.fan_of_knives))&!variable.single_target&target.time_to_die-remains>2\nactions.stealthed+=/garrote,if=stealthed.improved_garrote&(pmultiplier<=1||remains<14||!variable.single_target&buff.master_assassin_aura.remains<3)&combo_points.deficit>=1+2*talent.shrouded_suffocation\n# Rupture in Shadow Dance to snapshot Nightstalker as a final resort\nactions.stealthed+=/rupture,if=effective_combo_points>=4&(pmultiplier<=1)&(buff.shadow_dance.up||debuff.deathmark.up)\n\n# Stealth Cooldowns Vanish Sync for Improved Garrote with Deathmark\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Shadow Dance for non-Kingsbane setups\nactions.vanish+=/shadow_dance,if=!talent.kingsbane&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<12||cooldown.deathmark.remains>60)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\nactions.vanish+=/shadow_dance,if=!talent.kingsbane&!talent.improved_garrote&talent.master_assassin&!dot.rupture.refreshable&dot.garrote.remains>3&(debuff.deathmark.up||cooldown.deathmark.remains>60)&(debuff.shiv.up||debuff.deathmark.remains<4||dot.sepsis.ticking)&dot.sepsis.remains<3\n# Vanish to spread Garrote during Deathmark without Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&!talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish for cleaving Garrotes with Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&spell_targets.fan_of_knives>2\n# Vanish for Master Assassin during Kingsbane\nactions.vanish+=/vanish,if=talent.master_assassin&talent.kingsbane&dot.kingsbane.remains<=3&dot.kingsbane.ticking&debuff.deathmark.remains<=3&dot.deathmark.ticking\n# Vanish fallback for Master Assassin\nactions.vanish+=/vanish,if=!talent.improved_garrote&talent.master_assassin&!dot.rupture.refreshable&dot.garrote.remains>3&debuff.deathmark.up&(debuff.shiv.up||debuff.deathmark.remains<4||dot.sepsis.ticking)&dot.sepsis.remains<3",
["spec"] = 259,
},
["Discipline"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231114.3,
["author"] = "SimC",
["desc"] = "2023-11-14: Update for Harsh Discipline.",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! buff.twilight_equilibrium_holy_amp.up & ! buff.twilight_equilibrium_shadow_amp.up",
["var_name"] = "te_none",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_shadow_amp.up || variable.te_none",
["var_name"] = "te_shadow",
["description"] = "Twilight Equilibrium is buffing shadow damage",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_holy_amp.up || variable.te_none",
["var_name"] = "te_holy",
["description"] = "Twilight Equilibrium is buffing holy damage",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_covenant.enabled",
["var_name"] = "long_scov",
["description"] = "Long Shadow covenant is enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.up || buff.shadow_covenant.up",
["var_name"] = "can_enter_scov",
["description"] = "Ready to start shadow covenant phase",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mind_blast.execute_time",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration_max",
["value"] = "action.mind_blast.execute_time",
["description"] = "penance",
["criteria"] = "talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.shadow_word_death.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.shadow_word_death.enabled & talent.death_and_madness.enabled & target.health.pct < 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mindgames.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.mindgames.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.divine_star.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.divine_star.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.halo.enabled",
},
{
["enabled"] = true,
["op"] = "floor",
["action"] = "variable",
["value"] = "( buff.shadow_covenant.duration - variable.shadow_spells_duration_max ) / gcd.max",
["var_name"] = "max_te_holy",
["description"] = "(scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "remaining_te_holy",
["description"] = "Counting variable, the number of non-fractional remaining holy casts available",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "variable.max_te_holy",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now",
["value"] = "2",
["var_name"] = "expected_penance_reduction",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.train_of_thought.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "shadow_spells_duration",
["description"] = "Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "2",
["description"] = "Penance",
["criteria"] = "cooldown.penance.up || ( ( cooldown.penance.remains - variable.expected_penance_reduction ) < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.mindgames.execute_time",
["description"] = "Mindgames",
["criteria"] = "cooldown.mindgames.up || ( cooldown.mindgames.remains_expected < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "We always get the first SW:D",
["criteria"] = "cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Second SW:D only when talented and target health in execute range",
["criteria"] = "( cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains ) ) & ( target.health.pct < 20 || target.time_to_pct_20 < cooldown.shadow_word_death.remains ) & talent.death_and_madness.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.mind_blast.charges * action.mind_blast.execute_time",
["description"] = "Add any whole charges of mind blast",
["criteria"] = "action.mind_blast.charges >= 1",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.mind_blast.execute_time",
["description"] = "Add any fractional charges of mindblast that will recharge in time",
["criteria"] = "( ( action.mind_blast.charges_fractional >= 1 & action.mind_blast.charges_fractional < 2 ) & ( ( ( 1 - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) ) || ( ( action.mind_blast.charges_fractional < 1 ) & ( ( ( 1 - action.mind_blast.charges_fractional ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.divine_star.execute_time",
["description"] = "Divine Star",
["criteria"] = "cooldown.divine_star.up || ( cooldown.divine_star.remains < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.halo.execute_time",
["description"] = "Halo",
["criteria"] = "cooldown.halo.up || ( cooldown.halo.remains < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.",
["value"] = "( buff.shadow_covenant.remains - variable.shadow_spells_duration ) > action.smite.execute_time",
["var_name"] = "should_te",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.twilight_equilibrium.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.remains + action.shadowfiend.execute_time",
["var_name"] = "next_penance_time",
["description"] = "First casts should always be HD prep->covenant->schism->HD dark reprimand",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_penance_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.penance.duration - variable.expected_penance_reduction ) < variable.next_penance_time",
["var_name"] = "can_penance",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_swd_time",
["description"] = "Shadow Word: Death  SW:D is better than other spells if we are in execute phase.",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.mindgames.execute_time",
["description"] = "indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio",
["criteria"] = "( ( talent.mindgames.enabled & talent.shattered_perceptions.enabled ) || ( talent.mindgames.enabled & ! talent.expiation.enabled ) ) & target.health.pct >= 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Mind blast is better than SW:D if we aren't in execute",
["criteria"] = "target.health.pct >= 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Second mindblast when talented",
["criteria"] = "target.health.pct >= 20 & talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.divine_star.execute_time",
["description"] = "Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation",
["criteria"] = "talent.divine_star.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["var_name"] = "next_swd_time",
["criteria"] = "talent.halo.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadow_word_death.duration_expected < variable.next_swd_time",
["var_name"] = "can_swd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_mind_blast_time",
["description"] = "Mindblast  Mindblast is better than other spells if we aren't in execute phase",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add SW:D if we're in execute phase",
["criteria"] = "target.health.pct < 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add a second SW:D if we have death and madness",
["criteria"] = "talent.death_and_madness.enabled & target.health.pct < 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "action.mindgames.execute_time",
["description"] = "Add mindgames if we have it talented and don't have expiation",
["criteria"] = "talent.mindgames.enabled & ! talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.",
["value"] = "( ( action.mind_blast.max_charges - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < variable.next_mind_blast_time",
["var_name"] = "can_mind_blast",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "action.mind_blast.charges_fractional >= 1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_mindgames_time",
["description"] = "Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation",
["criteria"] = "target.health.pct < 20 || ( talent.expiation.enabled & ! talent.shattered_perceptions.enabled )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add a second SW:D if we have death and madness",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Mind blast is better than mindgames if we have expiation",
["criteria"] = "talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Second mindblast when talented",
["criteria"] = "talent.expiation.enabled & talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.mindgames.duration_expected < variable.next_mindgames_time",
["var_name"] = "can_mindgames",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_divine_star_time",
["description"] = "Divine Star",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "SW:D is better unless outside of execute phase when expiation is untalented",
["criteria"] = "target.health.pct < 20 || talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add a second SW:D if we have death and madness",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Mind blast is always better",
["criteria"] = "talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Second mindblast when talented",
["criteria"] = "talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.mindgames.execute_time",
["description"] = "Mindgames is always better",
["criteria"] = "talent.mindgames.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.divine_star.duration < variable.next_divine_star_time",
["var_name"] = "can_divine_star",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "talent.shadow_covenant.enabled & cooldown.mindbender.up",
["list_name"] = "scov_prep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.long_scov & variable.can_enter_scov",
["list_name"] = "long_scov",
},
{
["enabled"] = true,
["criteria"] = "talent.purge_the_wicked.enabled & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.purge_the_wicked.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "! talent.purge_the_wicked.enabled & ( target.time_to_die > ( 0.3 * dot.shadow_word_pain.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.shadow_word_pain.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.dark_indulgence.enabled & buff.power_of_the_dark_side.down & cooldown.penance.remains < gcd.max",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_penance )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled || variable.can_mind_blast",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & talent.expiation.enabled & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & ! talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_divine_star )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["enabled"] = true,
["description"] = "Don't use pets during shadow covenant windows, wasting GCDs",
["criteria"] = "! talent.mindbender.enabled & ! buff.shadow_covenant.up",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "talent.mindbender.enabled & ! buff.shadow_covenant.up",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "hold PI to use with shadow covenant if we have it",
["criteria"] = "! talent.shadow_covenant.enabled || ( talent.shadow_covenant.enabled & ( cooldown.shadowfiend.up || buff.shadow_covenant.up ) )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "sync potion with PI",
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "sync trinkets with PI",
["criteria"] = "buff.power_infusion.up || cooldown.power_infusion.remains >= action_cooldown",
["action"] = "use_items",
},
},
["scov_prep"] = {
{
["enabled"] = true,
["description"] = "Prepare to enter shadow covenant",
["criteria"] = "! ticking & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "cooldown.shadowfiend.remains < cast_time",
["action"] = "power_word_radiance",
},
{
["enabled"] = true,
["criteria"] = "( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
},
["long_scov"] = {
{
["enabled"] = true,
["description"] = "Long Shadow Covenant",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 3",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 3",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) ) & ( ! ticking || refreshable ) & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.shattered_perceptions.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) )",
["action"] = "smite",
},
{
["enabled"] = true,
["description"] = "just in case we run out of shadow spells with the above conditions",
["action"] = "penance",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["action"] = "mind_blast",
["enabled"] = true,
},
{
["action"] = "shadow_word_death",
["enabled"] = true,
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["action"] = "halo",
["enabled"] = true,
},
{
["action"] = "smite",
["enabled"] = true,
},
},
},
["version"] = 20231114.3,
["warnings"] = "The import for 'default' required some automated changes.\nLine 5: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 10: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 11: Converted 'talent.shadow_word_death' to 'talent.shadow_word_death.enabled' (1x).\nLine 12: Converted 'talent.shadow_word_death' to 'talent.shadow_word_death.enabled' (1x).\nLine 12: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 13: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 14: Converted 'talent.divine_star' to 'talent.divine_star.enabled' (1x).\nLine 15: Converted 'talent.halo' to 'talent.halo.enabled' (1x).\nLine 16: Converted operations in '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max' to '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)/gcd.max'.\nLine 19: Converted 'talent.train_of_thought' to 'talent.train_of_thought.enabled' (1x).\nLine 24: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 29: Converted 'talent.twilight_equilibrium' to 'talent.twilight_equilibrium.enabled' (1x).\nLine 37: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 37: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 37: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 37: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 39: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 40: Converted 'talent.divine_star' to 'talent.divine_star.enabled' (1x).\nLine 40: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 41: Converted 'talent.halo' to 'talent.halo.enabled' (1x).\nLine 41: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 47: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 48: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 48: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 53: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 53: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 54: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 55: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 56: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 56: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 61: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 62: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 63: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 64: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 65: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 67: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 69: Converted 'talent.purge_the_wicked' to 'talent.purge_the_wicked.enabled' (1x).\nLine 69: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 69: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 70: Converted 'talent.purge_the_wicked' to 'talent.purge_the_wicked.enabled' (1x).\nLine 70: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 70: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 71: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 72: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 73: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 74: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 75: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 75: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 76: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 76: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 77: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 77: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 78: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 79: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 80: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\n\nThe import for 'long_scov' required some automated changes.\nLine 5: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 10: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 11: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 12: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\n\nImported 5 action lists.\n",
["profile"] = "actions.precombat+=/power_word_fortitude\n\nactions+=/call_action_list,name=cooldowns\nactions+=/variable,name=te_none,op=set,value=!buff.twilight_equilibrium_holy_amp.up&!buff.twilight_equilibrium_shadow_amp.up\n# Twilight Equilibrium is buffing shadow damage\nactions+=/variable,name=te_shadow,op=set,value=buff.twilight_equilibrium_shadow_amp.up||variable.te_none\n# Twilight Equilibrium is buffing holy damage\nactions+=/variable,name=te_holy,op=set,value=buff.twilight_equilibrium_holy_amp.up||variable.te_none\n# Long Shadow covenant is enabled\nactions+=/variable,name=long_scov,op=set,value=talent.shadow_covenant\n# Ready to start shadow covenant phase\nactions+=/variable,name=can_enter_scov,op=set,value=cooldown.shadowfiend.up||buff.shadow_covenant.up\nactions+=/variable,name=shadow_spells_duration_max,op=set,value=0\n## actions+=/variable,name=shadow_spells_duration_max,op=add,value=action.schism.execute_time,if=talent.schism\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=2\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time\n# penance\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death&talent.death_and_madness&target.health.pct<20\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.divine_star.execute_time,if=talent.divine_star\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.halo.execute_time,if=talent.halo\n# (scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)\nactions+=/variable,name=max_te_holy,op=floor,value=(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max\n# Counting variable, the number of non-fractional remaining holy casts available\nactions+=/variable,name=remaining_te_holy,op=set,value=0\nactions+=/variable,name=remaining_te_holy,op=add,value=variable.max_te_holy\n# TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now\nactions+=/variable,name=expected_penance_reduction,op=setif,condition=talent.train_of_thought,value=2,value_else=0\n# Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.\nactions+=/variable,name=shadow_spells_duration,op=set,value=0\n# Schism\n## actions+=/variable,name=shadow_spells_duration,op=add,value=action.schism.execute_time,if=cooldown.schism.up||(cooldown.schism.remains<buff.shadow_covenant.remains)\n# Penance\nactions+=/variable,name=shadow_spells_duration,op=add,value=2,if=cooldown.penance.up||((cooldown.penance.remains-variable.expected_penance_reduction)<buff.shadow_covenant.remains)\n# Mindgames\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mindgames.execute_time,if=cooldown.mindgames.up||(cooldown.mindgames.remains_expected<buff.shadow_covenant.remains)\n# We always get the first SW:D\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains)\n# Second SW:D only when talented and target health in execute range\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=(cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains))&(target.health.pct<20||target.time_to_pct_20<cooldown.shadow_word_death.remains)&talent.death_and_madness\n# Add any whole charges of mind blast\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.charges*action.mind_blast.execute_time,if=action.mind_blast.charges>=1\n# Add any fractional charges of mindblast that will recharge in time\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.execute_time,if=((action.mind_blast.charges_fractional>=1&action.mind_blast.charges_fractional<2)&(((1-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))||((action.mind_blast.charges_fractional<1)&(((1-action.mind_blast.charges_fractional)*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))\n# Divine Star\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.divine_star.execute_time,if=cooldown.divine_star.up||(cooldown.divine_star.remains<buff.shadow_covenant.remains)\n# Halo\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.halo.execute_time,if=cooldown.halo.up||(cooldown.halo.remains<buff.shadow_covenant.remains)\n# Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.\nactions+=/variable,name=should_te,op=setif,condition=talent.twilight_equilibrium,value=(buff.shadow_covenant.remains-variable.shadow_spells_duration)>action.smite.execute_time,value_else=0\n\n# First casts should always be HD prep->covenant->schism->HD dark reprimand\nactions+=/variable,name=next_penance_time,op=set,value=cooldown.shadowfiend.remains+action.shadowfiend.execute_time\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_penance_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\nactions+=/variable,name=can_penance,op=set,value=(cooldown.penance.duration-variable.expected_penance_reduction)<variable.next_penance_time\n# Shadow Word: Death  SW:D is better than other spells if we are in execute phase.\nactions+=/variable,name=next_swd_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_swd_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio\nactions+=/variable,name=next_swd_time,op=add,value=action.mindgames.execute_time,if=((talent.mindgames&talent.shattered_perceptions)||(talent.mindgames&!talent.expiation))&target.health.pct>=20\n# Mind blast is better than SW:D if we aren't in execute\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20\n# Second mindblast when talented\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20&talent.dark_indulgence\n# Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.divine_star.execute_time,if=talent.divine_star&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.halo.execute_time,if=talent.halo&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=can_swd,op=set,value=cooldown.shadow_word_death.duration_expected<variable.next_swd_time\n# Mindblast  Mindblast is better than other spells if we aren't in execute phase\nactions+=/variable,name=next_mind_blast_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mind_blast_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# Add SW:D if we're in execute phase\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=talent.death_and_madness&target.health.pct<20\n# Add mindgames if we have it talented and don't have expiation\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames&!talent.expiation\n# TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.\nactions+=/variable,name=can_mind_blast,op=setif,condition=action.mind_blast.charges_fractional>=1,value=((action.mind_blast.max_charges-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<variable.next_mind_blast_time,value_else=0\n# Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation\nactions+=/variable,name=next_mindgames_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mindgames_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||(talent.expiation&!talent.shattered_perceptions)\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is better than mindgames if we have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation&talent.dark_indulgence\nactions+=/variable,name=can_mindgames,op=set,value=cooldown.mindgames.duration_expected<variable.next_mindgames_time\n# Divine Star\nactions+=/variable,name=next_divine_star_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_divine_star_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better unless outside of execute phase when expiation is untalented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||talent.expiation\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\n# Mindgames is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=can_divine_star,op=set,value=cooldown.divine_star.duration<variable.next_divine_star_time\nactions+=/run_action_list,name=scov_prep,if=talent.shadow_covenant&cooldown.mindbender.up\n## actions+=/run_action_list,name=short_scov,if=variable.short_scov&variable.can_enter_scov\nactions+=/run_action_list,name=long_scov,if=variable.long_scov&variable.can_enter_scov\nactions+=/purge_the_wicked,if=talent.purge_the_wicked&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.purge_the_wicked.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\nactions+=/shadow_word_pain,if=!talent.purge_the_wicked&(target.time_to_die>(0.3*dot.shadow_word_pain.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.shadow_word_pain.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\n## actions+=/schism,if=!talent.shadow_covenant\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&target.health.pct<20\nactions+=/mind_blast,if=talent.dark_indulgence&buff.power_of_the_dark_side.down&cooldown.penance.remains<gcd.max\nactions+=/penance,if=(!talent.shadow_covenant||variable.can_penance)\n## # For DPS, Lights wrath should always be used outside of scov when you take wrath unleashed to maximize the number of smites it buffs. In a real raid setting, you may want to cast it at the beginning of a scov cycle for additional healing.\n## actions+=/lights_wrath,if=talent.wrath_unleashed\nactions+=/mind_blast,if=!talent.shadow_covenant||variable.can_mind_blast\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&talent.shattered_perceptions\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&talent.expiation&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&!talent.shattered_perceptions\nactions+=/halo,if=!talent.shadow_covenant\nactions+=/divine_star,if=(!talent.shadow_covenant||variable.can_divine_star)\n## actions+=/power_word_solace\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/smite\n\n# Prepare to enter shadow covenant\nactions.scov_prep+=/purge_the_wicked,if=!ticking&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\nactions.scov_prep+=/power_word_radiance,if=cooldown.shadowfiend.remains<cast_time\nactions.scov_prep+=/purge_the_wicked,if=(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\n\n# Long Shadow Covenant\nactions.long_scov+=/mindbender\n## actions.long_scov+=/schism\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=3\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=3\nactions.long_scov+=/purge_the_wicked,if=(!variable.should_te||(variable.should_te&variable.te_holy))&(!ticking||refreshable)&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/penance,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=2\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=2\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mindgames,if=talent.shattered_perceptions&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\nactions.long_scov+=/mindgames,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\n## actions.long_scov+=/lights_wrath,if=(!variable.should_te||(variable.should_te&variable.te_holy))\nactions.long_scov+=/smite,if=(!variable.should_te||(variable.should_te&variable.te_holy))\n# just in case we run out of shadow spells with the above conditions\nactions.long_scov+=/penance\nactions.long_scov+=/mindgames\nactions.long_scov+=/mind_blast\nactions.long_scov+=/shadow_word_death\nactions.long_scov+=/divine_star\nactions.long_scov+=/halo\nactions.long_scov+=/smite\n\n## Cooldowns\n# Don't use pets during shadow covenant windows, wasting GCDs\nactions.cooldowns+=/shadowfiend,if=!talent.mindbender.enabled&!buff.shadow_covenant.up\nactions.cooldowns+=/mindbender,if=talent.mindbender.enabled&!buff.shadow_covenant.up\n# hold PI to use with shadow covenant if we have it\nactions.cooldowns+=/power_infusion,if=!talent.shadow_covenant.enabled||(talent.shadow_covenant.enabled&(cooldown.shadowfiend.up||buff.shadow_covenant.up))\n# sync potion with PI\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# sync trinkets with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up||cooldown.power_infusion.remains>=cooldown",
["spec"] = 256,
},
["Elemental"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231201,
["spec"] = 262,
["desc"] = "2023-12-01:  Tier 31 sim update.\n\n2023-11-07:  Further 10.2 updates.\n\n2023-11-05:  Update for 10.2.\n\n2023-05-20: Updates from SimC (opener CDs and Windspeaker's Lava Resurgence).\n\n2023-05-15: Don't consume some buffs with Flame Shock.\n\n2023-05-06: Update to Lava Burst prioritization.\n\n2023-04-22: Updates from SimulationCraft.\n\n2023-04-15: Correct Echo of the Elements talent.",
["profile"] = "# Ensure weapon enchant is applied.\nactions.precombat+=/flametongue_weapon,if=talent.improved_flametongue_weapon.enabled\nactions.precombat+=/lightning_shield,if=buff.lightning_shield.down&(buff.earth_shield.down||talent.elemental_orbit.enabled)\nactions.precombat+=/earth_shield,if=buff.lightning_shield.up&buff.earth_shield.down&talent.elemental_orbit.enabled\nactions.precombat+=/potion\nactions.precombat+=/stormkeeper\nactions.precombat+=/icefury\n\n# Executed every time the actor is available.\n# Interrupt of casts.\nactions+=/wind_shear\nactions+=/purge,if=settings.hostile_dispel\nactions+=/greater_purge,if=settings.hostile_dispel\n# Enable more movement.\nactions+=/spiritwalkers_grace,moving=1,if=movement.distance>6\nactions+=/blood_fury,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/berserking,if=!talent.ascendance.enabled||buff.ascendance.up\nactions+=/fireblood,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/ancestral_call,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/bag_of_tricks,if=!talent.ascendance.enabled||!buff.ascendance.up\nactions+=/use_items\nactions+=/meteor\nactions+=/tempest,if=buff.call_lightning.up\nactions+=/vesper_totem\nactions+=/natures_swiftness\nactions+=/potion\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2&(spell_targets.chain_lightning>2||spell_targets.lava_beam>2)\nactions+=/run_action_list,name=single_target\n\n# Keep your cooldowns rolling.\nactions.aoe=fire_elemental\n# Keep your cooldowns rolling.\nactions.aoe+=/storm_elemental\n# Keep your cooldowns rolling.\nactions.aoe+=/stormkeeper,if=!buff.stormkeeper.up\n# Reset LMT CD as early as possible.\nactions.aoe+=/totemic_recall,if=cooldown.liquid_magma_totem.remains>45\n# Keep your cooldowns rolling.\nactions.aoe+=/liquid_magma_totem\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&buff.surge_of_power.up&!buff.splintered_elements.up\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled&!buff.splintered_elements.up\n# Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled\n# Spread Flame Shock using Surge of Power on up to 4 for Lightning builds with Windspeaker's Lava Resurgence.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&buff.surge_of_power.up&talent.lightning_rod.enabled&talent.windspeakers_lava_resurgence.enabled&dot.flame_shock.remains<target.time_to_die-16&active_enemies<5\n# Spread Flame Shock using Surge of Power up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&buff.surge_of_power.up&(!talent.lightning_rod.enabled||talent.skybreakers_fiery_demise.enabled)&dot.flame_shock.remains<target.time_to_die-5&active_dot.flame_shock<6\n# Spread Flame Shock against low target counts if Master of the Elements was selected up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&active_dot.flame_shock<6\n# Spread Flame Shock to gamble on Deeply Rooted Element procs up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&active_dot.flame_shock<6\n# Refresh Flame Shock using Surge of Power up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&buff.surge_of_power.up&(!talent.lightning_rod.enabled||talent.skybreakers_fiery_demise.enabled)&dot.flame_shock.remains<target.time_to_die-5&dot.flame_shock.remains>0\n# Refresh Flame Shock against low target counts if Master of the Elements was selected up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.master_of_the_elements.enabled&!talent.lightning_rod.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&dot.flame_shock.remains>0\n# Refresh Flame Shock to gamble on Deeply Rooted Element procs up to 6.\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&talent.deeply_rooted_elements.enabled&!talent.surge_of_power.enabled&dot.flame_shock.remains<target.time_to_die-5&dot.flame_shock.remains>0\n# JUST DO IT! https://i.kym-cdn.com/entries/icons/mobile/000/018/147/Shia_LaBeouf__Just_Do_It__Motivational_Speech_(Original_Video_by_LaBeouf__R%C3%B6nkk%C3%B6___Turner)_0-4_screenshot.jpg\nactions.aoe+=/ascendance\n# {T31 fire} Lava burst is top prio on 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains&active_enemies=3&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Earthquake is still good with Mote and either 15+ Magma Chamber stacks on 6(7)+ targets or 9+ targets.\nactions.aoe+=/earthquake,if=buff.master_of_the_elements.up&(buff.magma_chamber.stack>15&active_enemies>=(7-talent.unrelenting_calamity.enabled)||talent.splintered_elements.enabled&active_enemies>=(10-talent.unrelenting_calamity.enabled)||talent.mountains_will_fall.enabled&active_enemies>=9)&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Stormkeeper is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.stormkeeper.up&(buff.surge_of_power.up&active_enemies>=6||buff.master_of_the_elements.up&(active_enemies<6||!talent.surge_of_power.enabled))&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Stormkeeper is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.stormkeeper.up&(buff.surge_of_power.up&active_enemies>=6||buff.master_of_the_elements.up&(active_enemies<6||!talent.surge_of_power.enabled))&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# {T31 fire} Lava Surge is strong.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains&cooldown_react&buff.lava_surge.up&(!talent.lightning_rod.enabled&set_bonus.tier31_4pc)\n# Cast Lava Burst to buff your immediately follow-up Earthquake with Master of the Elements.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains&cooldown_react&buff.lava_surge.up&talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&(maelstrom>=60-5*talent.eye_of_the_storm.rank-2*talent.flow_of_power.enabled)&(!talent.echoes_of_great_sundering.enabled&!talent.lightning_rod.enabled||buff.echoes_of_great_sundering.up)&(!buff.ascendance.up&active_enemies>3&talent.unrelenting_calamity.enabled||active_enemies>3&!talent.unrelenting_calamity.enabled||active_enemies=3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=!talent.echoes_of_great_sundering.enabled&active_enemies>3&(spell_targets.chain_lightning>3||spell_targets.lava_beam>3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=!talent.echoes_of_great_sundering.enabled&!talent.elemental_blast.enabled&active_enemies=3&(spell_targets.chain_lightning=3||spell_targets.lava_beam=3)\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earthquake,if=buff.echoes_of_great_sundering.up\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.\nactions.aoe+=/elemental_blast,cycle_targets=1,if=talent.echoes_of_great_sundering\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/elemental_blast,if=talent.echoes_of_great_sundering\n# Elemental Blast is stronger than Earthquake against 3 targets.\nactions.aoe+=/elemental_blast,if=active_enemies=3&!talent.echoes_of_great_sundering.enabled\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.\nactions.aoe+=/earth_shock,cycle_targets=1,if=talent.echoes_of_great_sundering\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.\nactions.aoe+=/earth_shock,if=talent.echoes_of_great_sundering\n# Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it. High priority on 3 targets.\nactions.aoe+=/icefury,if=!buff.ascendance.up&talent.electrified_shocks.enabled&(talent.lightning_rod.enabled&active_enemies<5&!buff.master_of_the_elements.up||talent.deeply_rooted_elements.enabled&active_enemies=3)\n# Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.\nactions.aoe+=/frost_shock,if=!buff.ascendance.up&buff.icefury.up&talent.electrified_shocks.enabled&(!debuff.electrified_shocks.up||buff.icefury.remains<gcd)&(talent.lightning_rod.enabled&active_enemies<5&!buff.master_of_the_elements.up||talent.deeply_rooted_elements.enabled&active_enemies=3)\n# Buff Stormkeeper with Master of the elements on 3-4 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains&talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&(buff.stormkeeper.up||t30_2pc_timer.next_tick<3&set_bonus.tier30_2pc)&(maelstrom<60-5*talent.eye_of_the_storm.rank-2*talent.flow_of_power.enabled-10)&active_enemies<5\n# Stormkeeper is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.stormkeeper.up\n# Stormkeeper is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.stormkeeper.up\n# Power of the Maelstrom is strong and should be used.\nactions.aoe+=/lava_beam,if=buff.power_of_the_maelstrom.up&buff.ascendance.remains>cast_time\n# Power of the Maelstrom is strong and should be used.\nactions.aoe+=/chain_lightning,if=buff.power_of_the_maelstrom.up\n# Against 6 targets or more Surge of Power should be used with Lava Beam rather than Lava Burst.\nactions.aoe+=/lava_beam,if=active_enemies>=6&buff.surge_of_power.up&buff.ascendance.remains>cast_time\n# Against 6 targets or more Surge of Power should be used with Chain Lightning rather than Lava Burst.\nactions.aoe+=/chain_lightning,if=active_enemies>=6&buff.surge_of_power.up\n# Proc Deeply Rooted Elements against 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>0&buff.lava_surge.up&talent.deeply_rooted_elements.enabled&buff.windspeakers_lava_resurgence.up\n# Consume Master of the Elements with Lava Beam.\nactions.aoe+=/lava_beam,if=buff.master_of_the_elements.up&buff.ascendance.remains>cast_time\n# Proc Master of the Elements against 3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>0&active_enemies=3&talent.master_of_the_elements.enabled\n# Gamble away for Deeply Rooted Elements procs whenever Lava Surge makes Lava Burst more efficient.\nactions.aoe+=/lava_burst,if=dot.flame_shock.remains>0&buff.lava_surge.up&talent.deeply_rooted_elements.enabled\n# Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it.\nactions.aoe+=/icefury,if=talent.electrified_shocks.enabled&active_enemies<5\n# Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.\nactions.aoe+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&!debuff.electrified_shocks.up&active_enemies<5\nactions.aoe+=/lava_beam,if=buff.ascendance.remains>cast_time\nactions.aoe+=/chain_lightning\nactions.aoe+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.aoe+=/frost_shock,moving=1\n\n# Keep your cooldowns rolling.\nactions.single_target+=/fire_elemental\n# Keep your cooldowns rolling.\nactions.single_target+=/storm_elemental\n# Reset LMT CD as early as possible.\nactions.single_target+=/totemic_recall,if=cooldown.liquid_magma_totem.remains>45&(talent.lava_surge.enabled&talent.splintered_elements.enabled||active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1))\n# Keep your cooldowns rolling.\nactions.single_target+=/liquid_magma_totem,if=talent.lava_surge.enabled&talent.splintered_elements.enabled||active_dot.flame_shock=0||dot.flame_shock.remains<6||active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Use Primordial Wave as much as possible without wasting buffs.\nactions.single_target+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&!buff.splintered_elements.up\nactions.single_target+=/flame_shock,cycle_targets=1,if=active_enemies=1&refreshable&(dot.flame_shock.remains<cooldown.primordial_wave.remains||!talent.primordial_wave.enabled)&!buff.surge_of_power.up&(!buff.master_of_the_elements.up||(!buff.stormkeeper.up&(talent.elemental_blast.enabled&maelstrom<90-8*talent.eye_of_the_storm.rank||maelstrom<60-5*talent.eye_of_the_storm.rank)))\n# Use Flame shock without Surge of Power if you can't spread it with SoP because it is going to be used on Stormkeeper or Surge of Power is not talented.\nactions.single_target+=/flame_shock,if=active_dot.flame_shock=0&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&(talent.deeply_rooted_elements.enabled||talent.ascendance.enabled||talent.primordial_wave.enabled||talent.searing_flames.enabled||talent.magma_chamber.enabled)&(!buff.master_of_the_elements.up&(buff.stormkeeper.up||cooldown.stormkeeper.remains=0)||!talent.surge_of_power.enabled)\n# Spread Flame Shock to multiple targets only if talents were selected that benefit from it.\nactions.single_target+=/flame_shock,cycle_targets=1,if=active_dot.flame_shock<cycle_enemies&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&refreshable&(talent.deeply_rooted_elements.enabled||talent.ascendance.enabled||talent.primordial_wave.enabled||talent.searing_flames.enabled||talent.magma_chamber.enabled)&(buff.surge_of_power.up&!buff.stormkeeper.up&!cooldown.stormkeeper.remains=0||!talent.surge_of_power.enabled)\n# {EB/Swelling/SoP Lightning build} Start SK window if you have enough maelstrom to: EB > SoP SK_LB > LvB > EB.\nactions.single_target+=/stormkeeper,if=!buff.ascendance.up&!buff.stormkeeper.up&maelstrom>=116&talent.elemental_blast.enabled&talent.surge_of_power.enabled&talent.swelling_maelstrom.enabled&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.primordial_surge.enabled\n# {EB/SoP Lightning builds} Use Stormkeeper if you already got Surge of Power buff rolling.\nactions.single_target+=/stormkeeper,if=!buff.ascendance.up&!buff.stormkeeper.up&buff.surge_of_power.up&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.primordial_surge.enabled\nactions.single_target+=/stormkeeper,if=!buff.ascendance.up&!buff.stormkeeper.up&(!talent.surge_of_power.enabled||!talent.elemental_blast.enabled||talent.lava_surge.enabled||talent.echo_of_the_elements.enabled||talent.primordial_surge.enabled)\nactions.single_target+=/ascendance,if=!buff.stormkeeper.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&buff.surge_of_power.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lava_beam,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.stormkeeper.up&!talent.surge_of_power.enabled\n# Stormkeeper is strong and should be used.\nactions.single_target+=/chain_lightning,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.stormkeeper.up&!talent.surge_of_power.enabled\n# Buff stormkeeper with MotE when not using Surge.\nactions.single_target+=/lava_burst,if=buff.stormkeeper.up&!buff.master_of_the_elements.up&!talent.surge_of_power.enabled&talent.master_of_the_elements.enabled\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&!talent.surge_of_power.enabled&buff.master_of_the_elements.up\n# Stormkeeper is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&!talent.surge_of_power.enabled&!talent.master_of_the_elements.enabled\n# {Lightning builds} Surge of Power is strong and should be used.\nactions.single_target+=/lightning_bolt,if=buff.surge_of_power.up&talent.lightning_rod.enabled\n# {Lightning builds} High prio IF for lightning builds.\nactions.single_target+=/icefury,if=talent.electrified_shocks.enabled&talent.lightning_rod.enabled\n# {Lightning builds} Maintain Electrified Shocks for lightning builds.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&(debuff.electrified_shocks.remains<2||buff.icefury.remains<=gcd)&talent.lightning_rod.enabled\n# {Lightning builds} Refresh Electrified Shocks early to buff Stormkeeper for lightning builds.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&maelstrom>=50&debuff.electrified_shocks.remains<2*gcd&buff.stormkeeper.up&talent.lightning_rod.enabled\nactions.single_target+=/lava_beam,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&buff.power_of_the_maelstrom.up&buff.ascendance.remains>cast_time&!set_bonus.tier31_4pc\n# {EB/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.stormkeeper.up&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.primordial_surge.enabled&talent.elemental_blast.enabled&(maelstrom>=61&maelstrom<75&cooldown.lava_burst.remains>gcd||maelstrom>=49&maelstrom<63&cooldown.lava_burst.ready)\n# {ES/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.stormkeeper.up&!talent.lava_surge.enabled&!talent.echo_of_the_elements.enabled&!talent.elemental_blast.enabled&(maelstrom>=36&maelstrom<50&cooldown.lava_burst.remains>gcd||maelstrom>=24&maelstrom<38&cooldown.lava_burst.ready)\n# Windspeaker's Lava Resurgence is strong. Don't sit on it...Unless it's Lightning build and you save it to buff Elemental Blast.\nactions.single_target+=/lava_burst,if=buff.windspeakers_lava_resurgence.up&(talent.echo_of_the_elements.enabled||talent.lava_surge.enabled||talent.primordial_surge.enabled||maelstrom>=63&talent.master_of_the_elements.enabled||maelstrom>=38&buff.echoes_of_great_sundering.up&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)||!talent.elemental_blast.enabled)\n# Lava Surge is neat. Utilize it...Unless it's Lightning build and you save it to buff Elemental Blast.\nactions.single_target+=/lava_burst,if=cooldown_react&buff.lava_surge.up&(talent.echo_of_the_elements.enabled||talent.lava_surge.enabled||talent.primordial_surge.enabled||!talent.master_of_the_elements.enabled||!talent.elemental_blast.enabled)\n# Spam Lava burst in Ascendance (if running Elemental Blast - only with T31 4p, otherwise always) if Further Beyond extension is depleted.\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=buff.ascendance.up&(set_bonus.tier31_4pc||!talent.elemental_blast.enabled)&(!talent.further_beyond.enabled||fb_extension_remaining<2)\n# {Fire builds, T31 4p} Spam Lava Burst with T31 4p as much as you can (unless you running Elemental Blast + Mountains will fall).\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=!buff.ascendance.up&(!talent.elemental_blast.enabled||!talent.mountains_will_fall.enabled)&!talent.lightning_rod.enabled&set_bonus.tier31_4pc\n# {Fire builds} Buff your next <anything> with MotE.\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&!talent.lightning_rod.enabled\n# {Lightning builds} Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.\nactions.single_target+=/lava_burst,if=talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&(maelstrom>=75||maelstrom>=50&!talent.elemental_blast.enabled)&talent.swelling_maelstrom.enabled&maelstrom<=130\n# Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Additionally Elemental Blast is stronger than EoGS. In this case don't use Earthquake on single target.\nactions.single_target+=/earthquake,if=buff.echoes_of_great_sundering.up&(!talent.elemental_blast.enabled&active_enemies<2||active_enemies>1)\n# Use Earthquake against two enemies unless you have to alternate because of Echoes of Great Sundering.\nactions.single_target+=/earthquake,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)&!talent.echoes_of_great_sundering.enabled&!talent.elemental_blast.enabled\nactions.single_target+=/elemental_blast,if=(!talent.master_of_the_elements.enabled||buff.master_of_the_elements.up)&debuff.electrified_shocks.up\n# {EB/ElS Fire builds} Apply Electrified Shocks if you are out of Lava Burst charges and not close to maelstrom cap.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.master_of_the_elements.up&maelstrom<110&cooldown.lava_burst.charges_fractional<1.0&talent.electrified_shocks.enabled&talent.elemental_blast.enabled&!talent.lightning_rod.enabled\n# Default EB line for lightning builds. Requires MotE buff for fire.\nactions.single_target+=/elemental_blast,if=buff.master_of_the_elements.up||talent.lightning_rod.enabled\nactions.single_target+=/earth_shock\n# {Fire builds}[2t] Els-cleaving Frost Shock with MotE is better than hardcasted Lava Burst on 2 targets.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.electrified_shocks.enabled&buff.master_of_the_elements.up&!talent.lightning_rod.enabled&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Fish for DRE procs.\nactions.single_target+=/lava_burst,target_if=dot.flame_shock.remains>2,if=talent.deeply_rooted_elements.enabled\n# Spread out your Icefury usage if you can get more use out of accompanied buffs.\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.flux_melting.enabled&!buff.flux_melting.up\n# Spread out your Icefury usage if you can get more use out of accompanied buffs.\nactions.single_target+=/frost_shock,if=buff.icefury.up&(talent.electrified_shocks.enabled&debuff.electrified_shocks.remains<2||buff.icefury.remains<6)\n# Use Lava Burst normally with fire builds. Save it as much as possible in lightning builds unless you cant use Lightning Bolt without wasting Stormkeeper charges.\nactions.single_target+=/lava_burst,cycle_targets=1,if=dot.flame_shock.remains>2&talent.echo_of_the_elements.enabled||talent.lava_surge.enabled||talent.primordial_surge.enabled||!talent.elemental_blast.enabled||!talent.master_of_the_elements.enabled||buff.stormkeeper.up\nactions.single_target+=/elemental_blast\n# Utilize the Power of the Maelstrom buff if your Chain Lightning is empowered by Unrelenting Calamity.\nactions.single_target+=/chain_lightning,if=buff.power_of_the_maelstrom.up&talent.unrelenting_calamity.enabled&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Utilize the Power of the Maelstrom buff if your Lightning Bolt is empowered by Unrelenting Calamity.\nactions.single_target+=/lightning_bolt,if=buff.power_of_the_maelstrom.up&talent.unrelenting_calamity.enabled\nactions.single_target+=/icefury\n# Spam Chain Lightning if Storm Elemental is active. But honor all previous priorities.\nactions.single_target+=/frost_shock,if=buff.icefury.up&(talent.flux_melting.enabled||talent.electrified_shocks.enabled&!talent.lightning_rod.enabled)\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.\nactions.single_target+=/frost_shock,if=buff.icefury.up&buff.master_of_the_elements.up&!buff.lava_surge.up&!talent.electrified_shocks.enabled&!talent.flux_melting.enabled&cooldown.lava_burst.charges_fractional<1.0&talent.echo_of_the_elements.enabled\nactions.single_target+=/frost_shock,if=buff.icefury.up&talent.flux_melting.enabled\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on Chain Lightning.\nactions.single_target+=/chain_lightning,if=buff.master_of_the_elements.up&!buff.lava_surge.up&(cooldown.lava_burst.charges_fractional<1.0&talent.echo_of_the_elements.enabled)&active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.\nactions.single_target+=/lightning_bolt,if=buff.master_of_the_elements.up&!buff.lava_surge.up&(cooldown.lava_burst.charges_fractional<1.0&talent.echo_of_the_elements.enabled)\n# Use your Icefury buffs if you didn't improve the talent.\nactions.single_target+=/frost_shock,if=buff.icefury.up&!talent.electrified_shocks.enabled&!talent.flux_melting.enabled\n# Casting Chain Lightning at two targets is more efficient than Lightning Bolt.\nactions.single_target+=/chain_lightning,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\n# Filler spell. Always available. Always the bottom line.\nactions.single_target+=/lightning_bolt\nactions.single_target+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.single_target+=/flame_shock,moving=1,if=movement.distance>6\n# Frost Shock is our movement filler.\nactions.single_target+=/frost_shock,moving=1",
["version"] = 20231201,
["warnings"] = "The import for 'aoe' required some automated changes.\nLine 26: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\nLine 27: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\nLine 29: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\nLine 30: Converted 'talent.echoes_of_great_sundering' to 'talent.echoes_of_great_sundering.enabled' (1x).\n\nImported 4 action lists.\n",
["author"] = "SimulationCraft",
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "fire_elemental",
},
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "storm_elemental",
},
{
["enabled"] = true,
["action"] = "totemic_recall",
["description"] = "Reset LMT CD as early as possible.",
["criteria"] = "cooldown.liquid_magma_totem.remains > 45 & ( talent.lava_surge.enabled & talent.splintered_elements.enabled || active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) )",
},
{
["enabled"] = true,
["action"] = "liquid_magma_totem",
["description"] = "Keep your cooldowns rolling.",
["criteria"] = "talent.lava_surge.enabled & talent.splintered_elements.enabled || active_dot.flame_shock = 0 || dot.flame_shock.remains < 6 || active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & ! buff.splintered_elements.up",
["description"] = "Use Primordial Wave as much as possible without wasting buffs.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "active_enemies = 1 & refreshable & ( dot.flame_shock.remains < cooldown.primordial_wave.remains || ! talent.primordial_wave.enabled ) & ! buff.surge_of_power.up & ( ! buff.master_of_the_elements.up || ( ! buff.stormkeeper.up & ( talent.elemental_blast.enabled & maelstrom < 90 - 8 * talent.eye_of_the_storm.rank || maelstrom < 60 - 5 * talent.eye_of_the_storm.rank ) ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "flame_shock",
["description"] = "Use Flame shock without Surge of Power if you can't spread it with SoP because it is going to be used on Stormkeeper or Surge of Power is not talented.",
["criteria"] = "active_dot.flame_shock = 0 & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & ( talent.deeply_rooted_elements.enabled || talent.ascendance.enabled || talent.primordial_wave.enabled || talent.searing_flames.enabled || talent.magma_chamber.enabled ) & ( ! buff.master_of_the_elements.up & ( buff.stormkeeper.up || cooldown.stormkeeper.remains = 0 ) || ! talent.surge_of_power.enabled )",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "active_dot.flame_shock < cycle_enemies & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & refreshable & ( talent.deeply_rooted_elements.enabled || talent.ascendance.enabled || talent.primordial_wave.enabled || talent.searing_flames.enabled || talent.magma_chamber.enabled ) & ( buff.surge_of_power.up & ! buff.stormkeeper.up & ! cooldown.stormkeeper.remains = 0 || ! talent.surge_of_power.enabled )",
["description"] = "Spread Flame Shock to multiple targets only if talents were selected that benefit from it.",
},
{
["enabled"] = true,
["action"] = "stormkeeper",
["description"] = "{EB/Swelling/SoP Lightning build} Start SK window if you have enough maelstrom to: EB > SoP SK_LB > LvB > EB.",
["criteria"] = "! buff.ascendance.up & ! buff.stormkeeper.up & maelstrom >= 116 & talent.elemental_blast.enabled & talent.surge_of_power.enabled & talent.swelling_maelstrom.enabled & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.primordial_surge.enabled",
},
{
["enabled"] = true,
["action"] = "stormkeeper",
["description"] = "{EB/SoP Lightning builds} Use Stormkeeper if you already got Surge of Power buff rolling.",
["criteria"] = "! buff.ascendance.up & ! buff.stormkeeper.up & buff.surge_of_power.up & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.primordial_surge.enabled",
},
{
["enabled"] = true,
["criteria"] = "! buff.ascendance.up & ! buff.stormkeeper.up & ( ! talent.surge_of_power.enabled || ! talent.elemental_blast.enabled || talent.lava_surge.enabled || talent.echo_of_the_elements.enabled || talent.primordial_surge.enabled )",
["action"] = "stormkeeper",
},
{
["enabled"] = true,
["criteria"] = "! buff.stormkeeper.up",
["action"] = "ascendance",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & buff.surge_of_power.up",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.stormkeeper.up & ! talent.surge_of_power.enabled",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.stormkeeper.up & ! talent.surge_of_power.enabled",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Buff stormkeeper with MotE when not using Surge.",
["criteria"] = "buff.stormkeeper.up & ! buff.master_of_the_elements.up & ! talent.surge_of_power.enabled & talent.master_of_the_elements.enabled",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ! talent.surge_of_power.enabled & buff.master_of_the_elements.up",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ! talent.surge_of_power.enabled & ! talent.master_of_the_elements.enabled",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "{Lightning builds} Surge of Power is strong and should be used.",
["criteria"] = "buff.surge_of_power.up & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "{Lightning builds} High prio IF for lightning builds.",
["criteria"] = "talent.electrified_shocks.enabled & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{Lightning builds} Maintain Electrified Shocks for lightning builds.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & ( debuff.electrified_shocks.remains < 2 || buff.icefury.remains <= gcd.max ) & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{Lightning builds} Refresh Electrified Shocks early to buff Stormkeeper for lightning builds.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & maelstrom >= 50 & debuff.electrified_shocks.remains < 2 * gcd.max & buff.stormkeeper.up & talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & buff.power_of_the_maelstrom.up & buff.ascendance.remains > cast_time & ! set_bonus.tier31_4pc",
["action"] = "lava_beam",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{EB/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.",
["criteria"] = "buff.icefury.up & buff.stormkeeper.up & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.primordial_surge.enabled & talent.elemental_blast.enabled & ( maelstrom >= 61 & maelstrom < 75 & cooldown.lava_burst.remains > gcd.max || maelstrom >= 49 & maelstrom < 63 & cooldown.lava_burst.ready )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{ES/SoP Lightning builds} Spend extra Frost Shock if it gives you the ability to get to next spender without using Stormkeeper charge.",
["criteria"] = "buff.icefury.up & buff.stormkeeper.up & ! talent.lava_surge.enabled & ! talent.echo_of_the_elements.enabled & ! talent.elemental_blast.enabled & ( maelstrom >= 36 & maelstrom < 50 & cooldown.lava_burst.remains > gcd.max || maelstrom >= 24 & maelstrom < 38 & cooldown.lava_burst.ready )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Windspeaker's Lava Resurgence is strong. Don't sit on it...Unless it's Lightning build and you save it to buff Elemental Blast.",
["criteria"] = "buff.windspeakers_lava_resurgence.up & ( talent.echo_of_the_elements.enabled || talent.lava_surge.enabled || talent.primordial_surge.enabled || maelstrom >= 63 & talent.master_of_the_elements.enabled || maelstrom >= 38 & buff.echoes_of_great_sundering.up & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) || ! talent.elemental_blast.enabled )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Lava Surge is neat. Utilize it...Unless it's Lightning build and you save it to buff Elemental Blast.",
["criteria"] = "cooldown_react & buff.lava_surge.up & ( talent.echo_of_the_elements.enabled || talent.lava_surge.enabled || talent.primordial_surge.enabled || ! talent.master_of_the_elements.enabled || ! talent.elemental_blast.enabled )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Spam Lava burst in Ascendance (if running Elemental Blast - only with T31 4p, otherwise always) if Further Beyond extension is depleted.",
["criteria"] = "buff.ascendance.up & ( set_bonus.tier31_4pc || ! talent.elemental_blast.enabled ) & ( ! talent.further_beyond.enabled || fb_extension_remaining < 2 )",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "{Fire builds, T31 4p} Spam Lava Burst with T31 4p as much as you can (unless you running Elemental Blast + Mountains will fall).",
["criteria"] = "! buff.ascendance.up & ( ! talent.elemental_blast.enabled || ! talent.mountains_will_fall.enabled ) & ! talent.lightning_rod.enabled & set_bonus.tier31_4pc",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "{Fire builds} Buff your next <anything> with MotE.",
["criteria"] = "talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ! talent.lightning_rod.enabled",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "{Lightning builds} Buff your next Maelstrom Spender with MotE if it won't cap your maelstrom.",
["criteria"] = "talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ( maelstrom >= 75 || maelstrom >= 50 & ! talent.elemental_blast.enabled ) & talent.swelling_maelstrom.enabled & maelstrom <= 130",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Additionally Elemental Blast is stronger than EoGS. In this case don't use Earthquake on single target.",
["criteria"] = "buff.echoes_of_great_sundering.up & ( ! talent.elemental_blast.enabled & active_enemies < 2 || active_enemies > 1 )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use Earthquake against two enemies unless you have to alternate because of Echoes of Great Sundering.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 ) & ! talent.echoes_of_great_sundering.enabled & ! talent.elemental_blast.enabled",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.master_of_the_elements.enabled || buff.master_of_the_elements.up ) & debuff.electrified_shocks.up",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{EB/ElS Fire builds} Apply Electrified Shocks if you are out of Lava Burst charges and not close to maelstrom cap.",
["criteria"] = "buff.icefury.up & buff.master_of_the_elements.up & maelstrom < 110 & cooldown.lava_burst.charges_fractional < 1.0 & talent.electrified_shocks.enabled & talent.elemental_blast.enabled & ! talent.lightning_rod.enabled",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["description"] = "Default EB line for lightning builds. Requires MotE buff for fire.",
["criteria"] = "buff.master_of_the_elements.up || talent.lightning_rod.enabled",
},
{
["action"] = "earth_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "{Fire builds}[2t] Els-cleaving Frost Shock with MotE is better than hardcasted Lava Burst on 2 targets.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & buff.master_of_the_elements.up & ! talent.lightning_rod.enabled & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Fish for DRE procs.",
["criteria"] = "talent.deeply_rooted_elements.enabled",
["target_if"] = "dot.flame_shock.remains > 2",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Icefury usage if you can get more use out of accompanied buffs.",
["criteria"] = "buff.icefury.up & talent.flux_melting.enabled & ! buff.flux_melting.up",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Icefury usage if you can get more use out of accompanied buffs.",
["criteria"] = "buff.icefury.up & ( talent.electrified_shocks.enabled & debuff.electrified_shocks.remains < 2 || buff.icefury.remains < 6 )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains > 2 & talent.echo_of_the_elements.enabled || talent.lava_surge.enabled || talent.primordial_surge.enabled || ! talent.elemental_blast.enabled || ! talent.master_of_the_elements.enabled || buff.stormkeeper.up",
["description"] = "Use Lava Burst normally with fire builds. Save it as much as possible in lightning builds unless you cant use Lightning Bolt without wasting Stormkeeper charges.",
},
{
["action"] = "elemental_blast",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Utilize the Power of the Maelstrom buff if your Chain Lightning is empowered by Unrelenting Calamity.",
["criteria"] = "buff.power_of_the_maelstrom.up & talent.unrelenting_calamity.enabled & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "Utilize the Power of the Maelstrom buff if your Lightning Bolt is empowered by Unrelenting Calamity.",
["criteria"] = "buff.power_of_the_maelstrom.up & talent.unrelenting_calamity.enabled",
},
{
["action"] = "icefury",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spam Chain Lightning if Storm Elemental is active. But honor all previous priorities.",
["criteria"] = "buff.icefury.up & ( talent.flux_melting.enabled || talent.electrified_shocks.enabled & ! talent.lightning_rod.enabled )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.",
["criteria"] = "buff.icefury.up & buff.master_of_the_elements.up & ! buff.lava_surge.up & ! talent.electrified_shocks.enabled & ! talent.flux_melting.enabled & cooldown.lava_burst.charges_fractional < 1.0 & talent.echo_of_the_elements.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.icefury.up & talent.flux_melting.enabled",
["action"] = "frost_shock",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on Chain Lightning.",
["criteria"] = "buff.master_of_the_elements.up & ! buff.lava_surge.up & ( cooldown.lava_burst.charges_fractional < 1.0 & talent.echo_of_the_elements.enabled ) & active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["action"] = "lightning_bolt",
["description"] = "If you have MotE up and aren't at risk of capping LvB, spend MotE on FrS/LB.",
["criteria"] = "buff.master_of_the_elements.up & ! buff.lava_surge.up & ( cooldown.lava_burst.charges_fractional < 1.0 & talent.echo_of_the_elements.enabled )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Use your Icefury buffs if you didn't improve the talent.",
["criteria"] = "buff.icefury.up & ! talent.electrified_shocks.enabled & ! talent.flux_melting.enabled",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Casting Chain Lightning at two targets is more efficient than Lightning Bolt.",
["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
},
{
["enabled"] = true,
["description"] = "Filler spell. Always available. Always the bottom line.",
["action"] = "lightning_bolt",
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable",
["enabled"] = true,
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "flame_shock",
["criteria"] = "movement.distance > 6",
["moving"] = 1,
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "frost_shock",
["description"] = "Frost Shock is our movement filler.",
["moving"] = 1,
},
},
["aoe"] = {
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "fire_elemental",
},
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "storm_elemental",
},
{
["enabled"] = true,
["action"] = "stormkeeper",
["description"] = "Keep your cooldowns rolling.",
["criteria"] = "! buff.stormkeeper.up",
},
{
["enabled"] = true,
["action"] = "totemic_recall",
["description"] = "Reset LMT CD as early as possible.",
["criteria"] = "cooldown.liquid_magma_totem.remains > 45",
},
{
["enabled"] = true,
["description"] = "Keep your cooldowns rolling.",
["action"] = "liquid_magma_totem",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & buff.surge_of_power.up & ! buff.splintered_elements.up",
["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled & ! buff.splintered_elements.up",
["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["cycle_targets"] = 1,
["criteria"] = "! buff.primordial_wave.up & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled",
["description"] = "Spread Flame Shock using Surge of Power. Don't waste buffs by resets (resets are gone, but I'll keep that logic here).",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & buff.surge_of_power.up & talent.lightning_rod.enabled & talent.windspeakers_lava_resurgence.enabled & dot.flame_shock.remains < target.time_to_die - 16 & active_enemies < 5",
["description"] = "Spread Flame Shock using Surge of Power on up to 4 for Lightning builds with Windspeaker's Lava Resurgence.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & buff.surge_of_power.up & ( ! talent.lightning_rod.enabled || talent.skybreakers_fiery_demise.enabled ) & dot.flame_shock.remains < target.time_to_die - 5 & active_dot.flame_shock < 6",
["description"] = "Spread Flame Shock using Surge of Power up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & active_dot.flame_shock < 6",
["description"] = "Spread Flame Shock against low target counts if Master of the Elements was selected up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & active_dot.flame_shock < 6",
["description"] = "Spread Flame Shock to gamble on Deeply Rooted Element procs up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & buff.surge_of_power.up & ( ! talent.lightning_rod.enabled || talent.skybreakers_fiery_demise.enabled ) & dot.flame_shock.remains < target.time_to_die - 5 & dot.flame_shock.remains > 0",
["description"] = "Refresh Flame Shock using Surge of Power up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.master_of_the_elements.enabled & ! talent.lightning_rod.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & dot.flame_shock.remains > 0",
["description"] = "Refresh Flame Shock against low target counts if Master of the Elements was selected up to 6.",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.deeply_rooted_elements.enabled & ! talent.surge_of_power.enabled & dot.flame_shock.remains < target.time_to_die - 5 & dot.flame_shock.remains > 0",
["description"] = "Refresh Flame Shock to gamble on Deeply Rooted Element procs up to 6.",
},
{
["enabled"] = true,
["description"] = "JUST DO IT! https://i.kym-cdn.com/entries/icons/mobile/000/018/147/Shia_LaBeouf__Just_Do_It__Motivational_Speech_(Original_Video_by_LaBeouf__R%C3%B6nkk%C3%B6___Turner)_0-4_screenshot.jpg",
["action"] = "ascendance",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains & active_enemies = 3 & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
["description"] = "{T31 fire} Lava burst is top prio on 3 targets.",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "{T31 fire} Earthquake is still good with Mote and either 15+ Magma Chamber stacks on 6(7)+ targets or 9+ targets.",
["criteria"] = "buff.master_of_the_elements.up & ( buff.magma_chamber.stack > 15 & active_enemies >= ( 7 - talent.unrelenting_calamity.enabled ) || talent.splintered_elements.enabled & active_enemies >= ( 10 - talent.unrelenting_calamity.enabled ) || talent.mountains_will_fall.enabled & active_enemies >= 9 ) & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "{T31 fire} Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ( buff.surge_of_power.up & active_enemies >= 6 || buff.master_of_the_elements.up & ( active_enemies < 6 || ! talent.surge_of_power.enabled ) ) & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "{T31 fire} Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up & ( buff.surge_of_power.up & active_enemies >= 6 || buff.master_of_the_elements.up & ( active_enemies < 6 || ! talent.surge_of_power.enabled ) ) & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains & cooldown_react & buff.lava_surge.up & ( ! talent.lightning_rod.enabled & set_bonus.tier31_4pc )",
["description"] = "{T31 fire} Lava Surge is strong.",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains & cooldown_react & buff.lava_surge.up & talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ( maelstrom >= 60 - 5 * talent.eye_of_the_storm.rank - 2 * talent.flow_of_power.enabled ) & ( ! talent.echoes_of_great_sundering.enabled & ! talent.lightning_rod.enabled || buff.echoes_of_great_sundering.up ) & ( ! buff.ascendance.up & active_enemies > 3 & talent.unrelenting_calamity.enabled || active_enemies > 3 & ! talent.unrelenting_calamity.enabled || active_enemies = 3 )",
["description"] = "Cast Lava Burst to buff your immediately follow-up Earthquake with Master of the Elements.",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "! talent.echoes_of_great_sundering.enabled & active_enemies > 3 & ( spell_targets.chain_lightning > 3 || spell_targets.lava_beam > 3 )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "! talent.echoes_of_great_sundering.enabled & ! talent.elemental_blast.enabled & active_enemies = 3 & ( spell_targets.chain_lightning = 3 || spell_targets.lava_beam = 3 )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "buff.echoes_of_great_sundering.up",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["cycle_targets"] = 1,
["criteria"] = "talent.echoes_of_great_sundering.enabled",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "talent.echoes_of_great_sundering.enabled",
},
{
["enabled"] = true,
["action"] = "elemental_blast",
["description"] = "Elemental Blast is stronger than Earthquake against 3 targets.",
["criteria"] = "active_enemies = 3 & ! talent.echoes_of_great_sundering.enabled",
},
{
["enabled"] = true,
["action"] = "earth_shock",
["cycle_targets"] = 1,
["criteria"] = "talent.echoes_of_great_sundering.enabled",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease. Spread Lightning Rod to as many targets as possible.",
},
{
["enabled"] = true,
["action"] = "earth_shock",
["description"] = "Use the talents you selected. Did you invest only 1 point in it? In this case this'll be a DPS decrease.",
["criteria"] = "talent.echoes_of_great_sundering.enabled",
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it. High priority on 3 targets.",
["criteria"] = "! buff.ascendance.up & talent.electrified_shocks.enabled & ( talent.lightning_rod.enabled & active_enemies < 5 & ! buff.master_of_the_elements.up || talent.deeply_rooted_elements.enabled & active_enemies = 3 )",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.",
["criteria"] = "! buff.ascendance.up & buff.icefury.up & talent.electrified_shocks.enabled & ( ! debuff.electrified_shocks.up || buff.icefury.remains < gcd.max ) & ( talent.lightning_rod.enabled & active_enemies < 5 & ! buff.master_of_the_elements.up || talent.deeply_rooted_elements.enabled & active_enemies = 3 )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains & talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & ( buff.stormkeeper.up || t30_2pc_timer.next_tick < 3 & set_bonus.tier30_2pc ) & ( maelstrom < 60 - 5 * talent.eye_of_the_storm.rank - 2 * talent.flow_of_power.enabled - 10 ) & active_enemies < 5",
["description"] = "Buff Stormkeeper with Master of the elements on 3-4 targets.",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Stormkeeper is strong and should be used.",
["criteria"] = "buff.stormkeeper.up",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Power of the Maelstrom is strong and should be used.",
["criteria"] = "buff.power_of_the_maelstrom.up & buff.ascendance.remains > cast_time",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Power of the Maelstrom is strong and should be used.",
["criteria"] = "buff.power_of_the_maelstrom.up",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Against 6 targets or more Surge of Power should be used with Lava Beam rather than Lava Burst.",
["criteria"] = "active_enemies >= 6 & buff.surge_of_power.up & buff.ascendance.remains > cast_time",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["description"] = "Against 6 targets or more Surge of Power should be used with Chain Lightning rather than Lava Burst.",
["criteria"] = "active_enemies >= 6 & buff.surge_of_power.up",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains > 0 & buff.lava_surge.up & talent.deeply_rooted_elements.enabled & buff.windspeakers_lava_resurgence.up",
["description"] = "Proc Deeply Rooted Elements against 3 targets.",
},
{
["enabled"] = true,
["action"] = "lava_beam",
["description"] = "Consume Master of the Elements with Lava Beam.",
["criteria"] = "buff.master_of_the_elements.up & buff.ascendance.remains > cast_time",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["criteria"] = "dot.flame_shock.remains > 0 & active_enemies = 3 & talent.master_of_the_elements.enabled",
["description"] = "Proc Master of the Elements against 3 targets.",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["description"] = "Gamble away for Deeply Rooted Elements procs whenever Lava Surge makes Lava Burst more efficient.",
["criteria"] = "dot.flame_shock.remains > 0 & buff.lava_surge.up & talent.deeply_rooted_elements.enabled",
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "Use Icefury if you can get the full benefit from Electrified Shocks. If more targets are present ignore it.",
["criteria"] = "talent.electrified_shocks.enabled & active_enemies < 5",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Spread out your Frost Shock casts to empower as many Chain Lightnings as possible.",
["criteria"] = "buff.icefury.up & talent.electrified_shocks.enabled & ! debuff.electrified_shocks.up & active_enemies < 5",
},
{
["enabled"] = true,
["criteria"] = "buff.ascendance.remains > cast_time",
["action"] = "lava_beam",
},
{
["action"] = "chain_lightning",
["enabled"] = true,
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "flame_shock",
["cycle_targets"] = 1,
["criteria"] = "refreshable",
["enabled"] = true,
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "frost_shock",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Interrupt of casts.",
["action"] = "wind_shear",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "purge",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "greater_purge",
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "spiritwalkers_grace",
["criteria"] = "movement.distance > 6",
["description"] = "Enable more movement.",
["moving"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || ! buff.ascendance.up",
["action"] = "bag_of_tricks",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "meteor",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.call_lightning.up",
["action"] = "tempest",
},
{
["action"] = "vesper_totem",
["enabled"] = true,
},
{
["action"] = "natures_swiftness",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2 & ( spell_targets.chain_lightning > 2 || spell_targets.lava_beam > 2 )",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["action"] = "flametongue_weapon",
["description"] = "Ensure weapon enchant is applied.",
["criteria"] = "talent.improved_flametongue_weapon.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.down & ( buff.earth_shield.down || talent.elemental_orbit.enabled )",
["action"] = "lightning_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.up & buff.earth_shield.down & talent.elemental_orbit.enabled",
["action"] = "earth_shield",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "stormkeeper",
["enabled"] = true,
},
{
["action"] = "icefury",
["enabled"] = true,
},
},
},
},
["Shadow"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240515,
["author"] = "SimC",
["desc"] = "2024-05-15: Fix for target swaps.\n\n2024-05-08: SimC update.\n\n2023-12-07:  Fix variables.\n\n2023-11-26:  Remove PW:S usage per SimC update.\n\n2023-11-08:  Minor fix.\n\n2023-11-05:  Patch 10.2.\n\n2023-08-27:  Minor update to precombat SC/VT.\n\n2023-07-31:  SimC update to Mindgames, SW:Death, and Devouring Plague.\n\n2023-07-22:  Reduce likelihood of using DOTs on enemies who won't live long enough to be worthwhile.\n\n2023-07-02:  Shadow Word: Death and Mindbender adjustments.\n\n2023-06-24:  Devouring Plague adjustments, especially at the end of fights.\n\n2023-05-20:  Move variables in priority to fix issues.\n\n2023-05-04:  Prevent holding_crash variable from blocking Void Eruption if Shadow Crash is not talented or is disabled.\n\n2023-05-03:  Additional updates for 10.1.\n\n2023-05-02:  Remove Light's Judgment.\n\n2023-04-29:  Updates for 10.1.\n\n2023-03-30:  Don't cycle_targets for Mind Sear.\n\n2023-03-29:  Make 'holding_crash' variable true if you've disabled Shadow Crash.\n\n2023-03-13:  Routine update from SimC.\n\n2023-03-05:  When Shadow Crash is in-flight, act as though SWP and VT are already applied to your target.",
["lists"] = {
["filler"] = {
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["description"] = "Cast Vampiric Touch to consume Unfurling Darkness, prefering the target with the lowest DoT duration active",
["criteria"] = "buff.unfurling_darkness.up",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use PWS with CR talented to trigger TOF if there are no better alternatives available to do this as we still get insanity for a PWS cast.",
["criteria"] = "dot.devouring_plague.remains > action.mind_spike.cast_time || ! talent.mind_spike.enabled",
["list_name"] = "empowered_filler",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "Cast Shadow Word: Death if the target is in execute, you have a Deathspeaker proc or you have the Season 3 2-piece bonus",
["criteria"] = "( target.health.pct < 20 || buff.deathspeaker.up || set_bonus.tier31_2pc ) & dot.devouring_plague.ticking",
},
{
["enabled"] = true,
["criteria"] = "talent.inescapable_torment.enabled & pet.fiend.active",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mindgames",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.voidform.up || cooldown.dark_ascension.up || buff.mind_devourer.up",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["description"] = "Save up to 20s if adds are coming soon.",
["criteria"] = "spell_targets > 1",
["action"] = "halo",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "empowered_filler",
},
{
["enabled"] = true,
["action"] = "mind_spike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["chain"] = "1",
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash while moving as a low-priority action when adds will not come in 20 seconds.",
["criteria"] = "raid_event.adds.in > 20 & ! set_bonus.tier31_4pc",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Death while moving as a low-priority action in execute",
["criteria"] = "target.health.pct < 20",
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Death while moving as a low-priority action",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_pain",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Pain while moving as a low-priority action with T31 4pc",
["criteria"] = "set_bonus.tier31_4pc",
},
{
["enabled"] = true,
["action"] = "shadow_word_pain",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Pain while moving as a low-priority action without T31 4pc",
["criteria"] = "! set_bonus.tier31_4pc",
},
},
["empowered_filler"] = {
{
["enabled"] = true,
["action"] = "mind_spike_insanity",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.mind_flay_insanity.up",
["action"] = "mind_flay",
["cycle_targets"] = 1,
},
},
["heal_for_tof"] = {
{
["enabled"] = true,
["description"] = "Use Halo to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["action"] = "halo",
},
{
["enabled"] = true,
["description"] = "Use Divine Star to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "Use Holy Nova when Rhapsody is fully stacked to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["criteria"] = "buff.rhapsody.stack = 20 & talent.rhapsody.enabled",
["action"] = "holy_nova",
},
},
["default"] = {
{
["action"] = "silence",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_crash.enabled & ! action.shadow_crash.disabled & raid_event.adds.in < 15",
["var_name"] = "holding_crash",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "target.time_to_die < 8 || ( dot.shadow_word_pain.ticking & dot.vampiric_touch.ticking || action.shadow_crash.in_flight ) & dot.devouring_plague.ticking",
["var_name"] = "all_dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.void_eruption.remains <= gcd.max * 3 & talent.void_eruption.enabled || cooldown.dark_ascension.up & talent.dark_ascension.enabled ) || talent.void_torrent.enabled & talent.psychic_link.enabled & cooldown.void_torrent.remains <= 4 & ( ! raid_event.adds.exists & spell_targets.vampiric_touch > 1 || raid_event.adds.in <= 5 || raid_event.adds.remains >= 6 & ! variable.holding_crash ) & ! buff.voidform.up",
["var_name"] = "pool_for_cds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.vampiric_touch >? 12",
["var_name"] = "max_vts",
["default"] = "12",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "is_vt_possible",
["value"] = "true",
["value_else"] = "false",
["criteria"] = "dot.vampiric_touch.refreshable || active_dot.vampiric_touch < cycle_enemies & fight_remains > 8",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "vts_applied",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "main",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "! buff.shadowform.up",
["action"] = "shadowform",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "mind_sear_cutoff",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "60",
["var_name"] = "pool_amount",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= 25 & spell_targets.shadow_crash <= 8 & ! boss & ( ! set_bonus.tier31_4pc || spell_targets.shadow_crash > 1 )",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! action.shadow_crash.in_flight & ( ! talent.shadow_crash.enabled || raid_event.adds.in < 25 || spell_targets.shadow_crash > 8 || ! boss || set_bonus.tier31_4pc & spell_targets.shadow_crash = 1 )",
["action"] = "vampiric_touch",
},
},
["aoe"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ( action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) ) >= variable.max_vts || ! variable.is_vt_possible || fight_remains < 8",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.max_vts - active_dot.vampiric_touch ) < 4 || raid_event.adds.in < 10 & raid_event.adds.count > ( variable.max_vts - active_dot.vampiric_touch )",
["var_name"] = "holding_crash",
["criteria"] = "variable.holding_crash & talent.whispering_shadows.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ! variable.holding_crash ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "manual_vts_applied",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["description"] = "High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE",
["criteria"] = "refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 & ! variable.manual_vts_applied & ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
},
{
["enabled"] = true,
["action"] = "shadow_crash",
["cycle_targets"] = 1,
["description"] = "Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows",
["criteria"] = "! variable.holding_crash & ( dot.vampiric_touch.refreshable || dot.vampiric_touch.remains <= target.time_to_die & ! buff.voidform.up & ( raid_event.adds.in - dot.vampiric_touch.remains ) < 15 )",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Use Shadowfiend or Mindbender on cooldown if DoTs are active and sync with Dark Ascension",
["criteria"] = "( dot.shadow_word_pain.ticking & variable.dots_up || action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || fight_remains < 15 )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "Use Void Bolt at the highest priority",
["action"] = "void_bolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.distorted_reality.enabled & ( active_dot.devouring_plague = 0 || insanity.deficit <= 20 )",
["action"] = "devouring_plague",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.devouring_plague.remains & ( set_bonus.tier31_4pc || pet.fiend.active & talent.inescapable_torment.enabled & set_bonus.tier31_2pc )",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["description"] = "Use Mind Blast when capped on charges and talented into Mind Devourer to fish for the buff or if Inescapable Torment is talented with Mindbender active. Only use when facing 3-7 targets.",
["criteria"] = "( cooldown.mind_blast.full_recharge_time <= gcd.max + cast_time || pet.fiend.remains <= cast_time + gcd.max ) & pet.fiend.active & talent.inescapable_torment.enabled & pet.fiend.remains > cast_time & active_enemies <= 7 & ! buff.mind_devourer.up & dot.devouring_plague.remains > execute_time",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds",
["criteria"] = "pet.fiend.remains <= 2 & pet.fiend.active & talent.inescapable_torment.enabled & active_enemies <= 7",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["description"] = "Use Devouring Plague on enemies that will live the longest with distorted reality.",
["criteria"] = "talent.distorted_reality.enabled",
},
{
["enabled"] = true,
["description"] = "Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.",
["criteria"] = "( remains <= gcd.max & ! variable.pool_for_cds || insanity.deficit <= 20 || buff.voidform.up & cooldown.void_bolt.remains > buff.voidform.remains & cooldown.void_bolt.remains <= buff.voidform.remains + 2 ) & ! talent.distorted_reality.enabled",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 & ( cooldown.shadow_crash.remains >= dot.vampiric_touch.remains || variable.holding_crash ) & ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active",
["criteria"] = "variable.dots_up & talent.inescapable_torment.enabled & pet.fiend.active & ( ( ! talent.insidious_ire.enabled & ! talent.idol_of_yoggsaron.enabled ) || buff.deathspeaker.up ) & ! set_bonus.tier31_2pc",
},
{
["enabled"] = true,
["action"] = "mind_spike_insanity",
["cycle_targets"] = 1,
["description"] = "High Priority Mind Spike: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active",
["criteria"] = "variable.dots_up & cooldown.mind_blast.full_recharge_time >= gcd.max * 3 & talent.idol_of_cthun.enabled & ( ! cooldown.void_torrent.up || ! talent.void_torrent.enabled )",
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["description"] = "High Priority Mind Flay: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active",
["criteria"] = "buff.mind_flay_insanity.up & variable.dots_up & cooldown.mind_blast.full_recharge_time >= gcd.max * 3 & talent.idol_of_cthun.enabled & ( ! cooldown.void_torrent.up || ! talent.void_torrent.enabled )",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["description"] = "# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
["criteria"] = "variable.dots_up & ( ! buff.mind_devourer.up || cooldown.void_eruption.up & talent.void_eruption.enabled )",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["description"] = "Void Torrent action list for AoE",
["criteria"] = "( ! variable.holding_crash || raid_event.adds.count / ( active_dot.vampiric_touch + raid_event.adds.count ) < 1.5 ) & ( dot.devouring_plague.remains >= 2.5 || buff.voidform.up )",
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["description"] = "High priority action for Mind Flay: Insanity to fish for Idol of C'Thun procs, cancel as soon as something else is more important and most of the channel has completed",
["criteria"] = "buff.mind_flay_insanity.up & talent.idol_of_cthun.enabled",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["cds"] = {
{
["enabled"] = true,
["description"] = "TODO: Check VE/DA enter conditions based on dots",
["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up & ( fight_remains <= cooldown.power_infusion.remains + 15 ) || boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 8",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 12",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
["criteria"] = "variable.dots_up & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < 3 + gcd.max || fight_remains < 15 )",
["description"] = "Use Nymue's before we go into our cooldowns",
},
{
["enabled"] = true,
["description"] = "Sync Power Infusion with Voidform or Dark Ascension",
["criteria"] = "( buff.voidform.up || buff.dark_ascension.up )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting",
["criteria"] = "! cooldown.fiend.up & ( pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled || active_enemies > 2 & ! talent.inescapable_torment.rank ) & ( cooldown.mind_blast.charges = 0 || time > 15 )",
["action"] = "void_eruption",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets",
["criteria"] = "pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled",
["action"] = "dark_ascension",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "( dot.shadow_word_pain.ticking & variable.vts_applied || action.shadow_crash.in_flight )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%",
["criteria"] = "health.pct <= 75",
["action"] = "desperate_prayer",
},
},
["trinkets"] = {
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains < 20",
["name"] = "voidmenders_shadowgem",
["action"] = "voidmenders_shadowgem",
},
{
["enabled"] = true,
["action"] = "iridal_the_earths_master",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0 || boss & fight_remains < 20",
["name"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["action"] = "dreambinder_loom_of_the_great_cycle",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0 || boss & fight_remains < 20",
["name"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_inferno",
["action"] = "darkmoon_deck_box_inferno",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_rime",
["action"] = "darkmoon_deck_box_rime",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_dance",
["action"] = "darkmoon_deck_box_dance",
},
{
["enabled"] = true,
["name"] = "conjured_chillglobe",
["action"] = "conjured_chillglobe",
},
{
["enabled"] = true,
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.iceblood_deathsnare >= 5 ) || fight_remains < 20",
["name"] = "iceblood_deathsnare",
["action"] = "iceblood_deathsnare",
},
{
["enabled"] = true,
["name"] = "erupting_spear_fragment",
["action"] = "erupting_spear_fragment",
["criteria"] = "buff.power_infusion.up || raid_event.adds.up || boss & fight_remains < 20",
["description"] = "Use Erupting Spear Fragment with cooldowns, adds are currently active, or the fight will end in less than 20 seconds",
},
{
["enabled"] = true,
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.belorrelos_the_suncaller >= 5 || fight_remains < 20 ) & equipped.belorrelos_the_suncaller",
["description"] = "Use Belor'relos on cooldown except to hold for incoming adds or if already facing 5 or more targets",
},
{
["enabled"] = true,
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
["criteria"] = "! raid_event.adds.exists || raid_event.adds.up || spell_targets.beacon_to_the_beyond >= 5 || boss & fight_remains < 20",
["description"] = "Use Beacon to the Beyond on cooldown except to hold for incoming adds or if already facing 5 or more targets",
},
{
["enabled"] = true,
["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up || ( cooldown.void_eruption.remains > 10 & trinket.cooldown.duration <= 60 ) || boss & fight_remains < 20",
["action"] = "use_items",
},
{
["enabled"] = true,
["name"] = "desperate_invokers_codex",
["action"] = "desperate_invokers_codex",
},
},
["main"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_dot.vampiric_touch = active_enemies || action.shadow_crash.in_flight & talent.whispering_shadows.enabled || fight_remains < 8",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension",
["criteria"] = "variable.dots_up & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || fight_remains < 15 )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "Use Void Bolt at the highest priority",
["criteria"] = "variable.dots_up",
["action"] = "void_bolt",
},
{
["enabled"] = true,
["criteria"] = "remains <= gcd.max || ( ! talent.distorted_reality.enabled || active_enemies = 1 ) & insanity.deficit <= 16",
["action"] = "devouring_plague",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier31_4pc || pet.fiend.active & talent.inescapable_torment.enabled & set_bonus.tier31_2pc ) & dot.devouring_plague.ticking",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["description"] = "High priority Mind Blast action when using Inescapable Torment",
["criteria"] = "( dot.devouring_plague.remains > execute_time & ( cooldown.mind_blast.full_recharge_time <= gcd.max + execute_time ) || pet.fiend.remains <= execute_time + gcd.max ) & pet.fiend.active & talent.inescapable_torment.enabled & pet.fiend.remains > execute_time & active_enemies <= 7",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds",
["criteria"] = "dot.devouring_plague.ticking & pet.fiend.remains <= 2 & pet.fiend.active & talent.inescapable_torment.enabled & active_enemies <= 7",
},
{
["enabled"] = true,
["description"] = "Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s",
["criteria"] = "fight_remains <= duration + 4",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["description"] = "Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.",
["criteria"] = "( ! talent.distorted_reality.enabled || active_enemies = 1 || remains <= gcd.max ) & ( insanity.deficit <= 35 & talent.distorted_reality.enabled || buff.dark_ascension.up || buff.mind_devourer.up & cooldown.mind_blast.up )",
},
{
["enabled"] = true,
["criteria"] = "! variable.holding_crash & talent.idol_of_cthun.enabled & cooldown.mind_blast.full_recharge_time >= 3 & talent.void_eruption.enabled & dot.devouring_plague.remains >= 2.5",
["action"] = "void_torrent",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range",
["criteria"] = "! variable.holding_crash & ( dot.vampiric_touch.refreshable || buff.deaths_torment.stack > 9 & set_bonus.tier31_4pc & active_enemies > 1 )",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["description"] = "Consume T31 4pc SWPs",
["criteria"] = "buff.deaths_torment.stack > 9 & set_bonus.tier31_4pc & active_enemies = 1",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active",
["criteria"] = "variable.dots_up & talent.inescapable_torment.enabled & pet.fiend.active & ( ( ! talent.insidious_ire.enabled & ! talent.idol_of_yoggsaron.enabled ) || buff.deathspeaker.up ) & ! set_bonus.tier31_2pc",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["description"] = "Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon",
["criteria"] = "refreshable & target.time_to_die >= 12 & ( cooldown.shadow_crash.remains >= dot.vampiric_touch.remains || variable.holding_crash || ! talent.whispering_shadows.enabled ) & ( ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
},
{
["enabled"] = true,
["description"] = "Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
["criteria"] = "( ! buff.mind_devourer.up || cooldown.void_eruption.up & talent.void_eruption.enabled )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["interrupt_if"] = "cooldown.shadow_word_death.ready&pet.fiend.active&set_bonus.tier31_2pc",
["description"] = "Void Torrent if you are not holding Shadow Crash for an add pack coming, prefer the target with the most DoTs active. Only cast if Devouring Plague is on that target and will last at least 2 seconds",
["criteria"] = "! variable.holding_crash & ( ! talent.idol_of_cthun.enabled || ! talent.void_eruption.enabled ) & dot.devouring_plague.remains >= 2.5",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cast Mindgames if all DoTs will be active by the time the cast finishes",
["list_name"] = "filler",
},
},
},
["version"] = 20240515,
["warnings"] = "The import for 'filler' required some automated changes.\nLine 2: Converted 'talent.mind_spike' to 'talent.mind_spike.enabled' (1x).\nLine 4: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\n\nThe import for 'heal_for_tof' required some automated changes.\nLine 3: Converted 'talent.rhapsody' to 'talent.rhapsody.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.shadow_crash' to 'talent.shadow_crash.enabled' (1x).\nLine 4: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 4: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 4: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 4: Converted 'talent.psychic_link' to 'talent.psychic_link.enabled' (1x).\nLine 7: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 2: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 4: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 7: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 7: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 9: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 10: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 11: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 12: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 13: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 14: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 15: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 16: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 16: Converted 'talent.insidious_ire' to 'talent.insidious_ire.enabled' (1x).\nLine 16: Converted 'talent.idol_of_yoggsaron' to 'talent.idol_of_yoggsaron.enabled' (1x).\nLine 17: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 17: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 18: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 18: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 19: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 20: Converted operations in '(!variable.holding_crash||raid_event.adds.count%(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)' to '(!variable.holding_crash||raid_event.adds.count/(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)'.\nLine 21: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 6: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 8: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 9: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 9: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\n\nThe import for 'main' required some automated changes.\nLine 1: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 3: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 5: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 6: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 7: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 8: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 10: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 10: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 11: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 11: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 15: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 15: Converted 'talent.insidious_ire' to 'talent.insidious_ire.enabled' (1x).\nLine 15: Converted 'talent.idol_of_yoggsaron' to 'talent.idol_of_yoggsaron.enabled' (1x).\nLine 16: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 16: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 17: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 18: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 18: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\n\nImported 9 action lists.\n",
["profile"] = "actions.precombat+=/shadowform,if=!buff.shadowform.up\nactions.precombat+=/arcane_torrent\nactions.precombat+=/variable,name=mind_sear_cutoff,op=set,value=2\nactions.precombat+=/variable,name=pool_amount,op=set,value=60\nactions.precombat+=/shadow_crash,if=raid_event.adds.in>=25&spell_targets.shadow_crash<=8&!boss&(!set_bonus.tier31_4pc||spell_targets.shadow_crash>1)\nactions.precombat+=/vampiric_touch,if=refreshable&!action.shadow_crash.in_flight&(!talent.shadow_crash.enabled||raid_event.adds.in<25||spell_targets.shadow_crash>8||!boss||set_bonus.tier31_4pc&spell_targets.shadow_crash=1)\n\nactions+=/silence\nactions+=/variable,name=holding_crash,op=set,value=talent.shadow_crash&!action.shadow_crash.disabled&raid_event.adds.in<15\nactions+=/variable,name=all_dots_up,op=set,value=target.time_to_die<8||(dot.shadow_word_pain.ticking&dot.vampiric_touch.ticking||action.shadow_crash.in_flight)&dot.devouring_plague.ticking\nactions+=/variable,name=pool_for_cds,op=set,value=(cooldown.void_eruption.remains<=gcd.max*3&talent.void_eruption||cooldown.dark_ascension.up&talent.dark_ascension)||talent.void_torrent&talent.psychic_link&cooldown.void_torrent.remains<=4&(!raid_event.adds.exists&spell_targets.vampiric_touch>1||raid_event.adds.in<=5||raid_event.adds.remains>=6&!variable.holding_crash)&!buff.voidform.up\nactions+=/variable,name=max_vts,op=set,default=12,value=spell_targets.vampiric_touch>?12\nactions+=/variable,name=is_vt_possible,op=set,value=true,value_else=false,condition=dot.vampiric_touch.refreshable||active_dot.vampiric_touch<cycle_enemies&fight_remains>8\nactions+=/variable,name=vts_applied,op=set,value=(active_dot.vampiric_touch+8*action.shadow_crash.in_flight&talent.whispering_shadows)>=variable.max_vts||!variable.is_vt_possible\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2\nactions+=/run_action_list,name=main\n\nactions.aoe+=/variable,name=dots_up,op=set,value=(active_dot.vampiric_touch+8*(action.shadow_crash.in_flight&talent.whispering_shadows))>=variable.max_vts||!variable.is_vt_possible||fight_remains<8\nactions.aoe+=/variable,name=holding_crash,op=set,value=(variable.max_vts-active_dot.vampiric_touch)<4||raid_event.adds.in<10&raid_event.adds.count>(variable.max_vts-active_dot.vampiric_touch),if=variable.holding_crash&talent.whispering_shadows\nactions.aoe+=/variable,name=manual_vts_applied,op=set,value=(active_dot.vampiric_touch+8*!variable.holding_crash)>=variable.max_vts||!variable.is_vt_possible\n# High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE\nactions.aoe+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0&!variable.manual_vts_applied&!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows\nactions.aoe+=/shadow_crash,cycle_targets=1,if=!variable.holding_crash&(dot.vampiric_touch.refreshable||dot.vampiric_touch.remains<=target.time_to_die&!buff.voidform.up&(raid_event.adds.in-dot.vampiric_touch.remains)<15)\nactions.aoe+=/call_action_list,name=cds,if=fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend or Mindbender on cooldown if DoTs are active and sync with Dark Ascension\nactions.aoe+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.dots_up||action.shadow_crash.in_flight&talent.whispering_shadows)&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||fight_remains<15)\n# Use Void Bolt at the highest priority\nactions.aoe+=/void_bolt,cycle_targets=1\nactions.aoe+=/devouring_plague,cycle_targets=1,if=talent.distorted_reality&(active_dot.devouring_plague=0||insanity.deficit<=20)\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=dot.devouring_plague.remains&(set_bonus.tier31_4pc||pet.fiend.active&talent.inescapable_torment&set_bonus.tier31_2pc)\n# Use Mind Blast when capped on charges and talented into Mind Devourer to fish for the buff or if Inescapable Torment is talented with Mindbender active. Only use when facing 3-7 targets.\nactions.aoe+=/mind_blast,cycle_targets=1,if=(cooldown.mind_blast.full_recharge_time<=gcd.max+cast_time||pet.fiend.remains<=cast_time+gcd.max)&pet.fiend.active&talent.inescapable_torment&pet.fiend.remains>cast_time&active_enemies<=7&!buff.mind_devourer.up&dot.devouring_plague.remains>execute_time\n# High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=pet.fiend.remains<=2&pet.fiend.active&talent.inescapable_torment&active_enemies<=7\n## actions.aoe+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n# Use Devouring Plague on enemies that will live the longest with distorted reality.\nactions.aoe+=/devouring_plague,cycle_targets=1,if=talent.distorted_reality\n# Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.\nactions.aoe+=/devouring_plague,if=(remains<=gcd.max&!variable.pool_for_cds||insanity.deficit<=20||buff.voidform.up&cooldown.void_bolt.remains>buff.voidform.remains&cooldown.void_bolt.remains<=buff.voidform.remains+2)&!talent.distorted_reality\nactions.aoe+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0&(cooldown.shadow_crash.remains>=dot.vampiric_touch.remains||variable.holding_crash)&!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=variable.dots_up&talent.inescapable_torment&pet.fiend.active&((!talent.insidious_ire&!talent.idol_of_yoggsaron)||buff.deathspeaker.up)&!set_bonus.tier31_2pc\n# High Priority Mind Spike: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active\nactions.aoe+=/mind_spike_insanity,cycle_targets=1,if=variable.dots_up&cooldown.mind_blast.full_recharge_time>=gcd*3&talent.idol_of_cthun&(!cooldown.void_torrent.up||!talent.void_torrent)\n# High Priority Mind Flay: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active\nactions.aoe+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up&variable.dots_up&cooldown.mind_blast.full_recharge_time>=gcd*3&talent.idol_of_cthun&(!cooldown.void_torrent.up||!talent.void_torrent)\n# # Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.aoe+=/mind_blast,cycle_targets=1,if=variable.dots_up&(!buff.mind_devourer.up||cooldown.void_eruption.up&talent.void_eruption)\n# Void Torrent action list for AoE\nactions.aoe+=/void_torrent,cycle_targets=1,if=(!variable.holding_crash||raid_event.adds.count%(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)\n# High priority action for Mind Flay: Insanity to fish for Idol of C'Thun procs, cancel as soon as something else is more important and most of the channel has completed\nactions.aoe+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up&talent.idol_of_cthun,interrupt_if=ticks>=2,interrupt_immediate=1\nactions.aoe+=/call_action_list,name=filler\n\n# TODO: Check VE/DA enter conditions based on dots\nactions.cds+=/potion,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up&(fight_remains<=cooldown.power_infusion.remains+15)||boss&fight_remains<=30\nactions.cds+=/fireblood,if=buff.power_infusion.up||boss&fight_remains<=8\nactions.cds+=/berserking,if=buff.power_infusion.up||boss&fight_remains<=12\nactions.cds+=/blood_fury,if=buff.power_infusion.up||boss&fight_remains<=15\nactions.cds+=/ancestral_call,if=buff.power_infusion.up||boss&fight_remains<=15\n# Use Nymue's before we go into our cooldowns\nactions.cds+=/use_item,name=nymues_unraveling_spindle,if=variable.dots_up&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<3+gcd.max||fight_remains<15)\n# Sync Power Infusion with Voidform or Dark Ascension\nactions.cds+=/power_infusion,if=(buff.voidform.up||buff.dark_ascension.up)\n# Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting\nactions.cds+=/void_eruption,if=!cooldown.fiend.up&(pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender||active_enemies>2&!talent.inescapable_torment.rank)&(cooldown.mind_blast.charges=0||time>15)\n# Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets\nactions.cds+=/dark_ascension,if=pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment\nactions.cds+=/call_action_list,name=trinkets\nactions.cds+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.vts_applied||action.shadow_crash.in_flight)\n# Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%\nactions.cds+=/desperate_prayer,if=health.pct<=75\n\n# Cast Vampiric Touch to consume Unfurling Darkness, prefering the target with the lowest DoT duration active\nactions.filler+=/vampiric_touch,cycle_targets=1,if=buff.unfurling_darkness.up\n## actions.filler+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n# Use PWS with CR talented to trigger TOF if there are no better alternatives available to do this as we still get insanity for a PWS cast.\n## actions.filler+=/power_word_shield,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&talent.crystalline_reflection\nactions.filler+=/call_action_list,name=empowered_filler,if=dot.devouring_plague.remains>action.mind_spike.cast_time||!talent.mind_spike\n# Cast Shadow Word: Death if the target is in execute, you have a Deathspeaker proc or you have the Season 3 2-piece bonus\nactions.filler+=/shadow_word_death,cycle_targets=1,if=(target.health.pct<20||buff.deathspeaker.up||set_bonus.tier31_2pc)&dot.devouring_plague.ticking\nactions.filler+=/shadow_word_death,cycle_targets=1,if=talent.inescapable_torment&pet.fiend.active\nactions.filler+=/mindgames,cycle_targets=1\nactions.filler+=/devouring_plague,if=buff.voidform.up||cooldown.dark_ascension.up||buff.mind_devourer.up\n# Save up to 20s if adds are coming soon.\nactions.filler+=/halo,if=spell_targets>1\n## Using a heal with no damage kickbacks for TOF is damage neutral, so we will do it.\n## actions.filler+=/power_word_life,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up\nactions.filler+=/call_action_list,name=empowered_filler\n## actions.filler+=/call_action_list,name=heal_for_tof,if=equipped.rashoks_molten_heart&(active_allies-(10-buff.molten_radiance.value))>=10&buff.molten_radiance.up,line_cd=5\nactions.filler+=/mind_spike,cycle_targets=1,\nactions.filler+=/mind_flay,cycle_targets=1,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2\nactions.filler+=/divine_star\n# Use Shadow Crash while moving as a low-priority action when adds will not come in 20 seconds.\nactions.filler+=/shadow_crash,if=raid_event.adds.in>20&!set_bonus.tier31_4pc\n# Use Shadow Word: Death while moving as a low-priority action in execute\nactions.filler+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20\n# Use Shadow Word: Death while moving as a low-priority action\nactions.filler+=/shadow_word_death,cycle_targets=1\n# Use Shadow Word: Pain while moving as a low-priority action with T31 4pc\nactions.filler+=/shadow_word_pain,cycle_targets=1,if=set_bonus.tier31_4pc\n# Use Shadow Word: Pain while moving as a low-priority action without T31 4pc\nactions.filler+=/shadow_word_pain,cycle_targets=1,if=!set_bonus.tier31_4pc\n\nactions.empowered_filler+=/mind_spike_insanity,cycle_targets=1\nactions.empowered_filler+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up\n\nactions.main+=/variable,name=dots_up,op=set,value=active_dot.vampiric_touch=active_enemies||action.shadow_crash.in_flight&talent.whispering_shadows||fight_remains<8\nactions.main+=/call_action_list,name=cds,if=fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension\nactions.main+=/mindbender,if=variable.dots_up&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||fight_remains<15)\n# Use Void Bolt at the highest priority\nactions.main+=/void_bolt,if=variable.dots_up\nactions.main+=/devouring_plague,cycle_targets=1,if=remains<=gcd.max||(!talent.distorted_reality||active_enemies=1)&insanity.deficit<=16\nactions.main+=/shadow_word_death,if=(set_bonus.tier31_4pc||pet.fiend.active&talent.inescapable_torment&set_bonus.tier31_2pc)&dot.devouring_plague.ticking\n# High priority Mind Blast action when using Inescapable Torment\nactions.main+=/mind_blast,cycle_targets=1,if=(dot.devouring_plague.remains>execute_time&(cooldown.mind_blast.full_recharge_time<=gcd.max+execute_time)||pet.fiend.remains<=execute_time+gcd.max)&pet.fiend.active&talent.inescapable_torment&pet.fiend.remains>execute_time&active_enemies<=7\n# High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds\nactions.main+=/shadow_word_death,cycle_targets=1,if=dot.devouring_plague.ticking&pet.fiend.remains<=2&pet.fiend.active&talent.inescapable_torment&active_enemies<=7\n## actions.main+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n# Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s\nactions.main+=/devouring_plague,if=fight_remains<=duration+4\n# Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.\nactions.main+=/devouring_plague,cycle_targets=1,if=(!talent.distorted_reality||active_enemies=1||remains<=gcd.max)&(insanity.deficit<=35&talent.distorted_reality||buff.dark_ascension.up||buff.mind_devourer.up&cooldown.mind_blast.up)\nactions.main+=/void_torrent,cycle_targets=1,if=!variable.holding_crash&talent.idol_of_cthun&cooldown.mind_blast.full_recharge_time>=3&talent.void_eruption&dot.devouring_plague.remains>=2.5\nactions.main+=/shadow_word_death,if=set_bonus.tier31_2pc\n# Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range\nactions.main+=/shadow_crash,if=!variable.holding_crash&(dot.vampiric_touch.refreshable||buff.deaths_torment.stack>9&set_bonus.tier31_4pc&active_enemies>1)\n# Consume T31 4pc SWPs\nactions.main+=/shadow_word_pain,if=buff.deaths_torment.stack>9&set_bonus.tier31_4pc&active_enemies=1\n# Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active\nactions.main+=/shadow_word_death,if=variable.dots_up&talent.inescapable_torment&pet.fiend.active&((!talent.insidious_ire&!talent.idol_of_yoggsaron)||buff.deathspeaker.up)&!set_bonus.tier31_2pc\n# Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon\nactions.main+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=12&(cooldown.shadow_crash.remains>=dot.vampiric_touch.remains||variable.holding_crash||!talent.whispering_shadows)&(!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.main+=/mind_blast,if=(!buff.mind_devourer.up||cooldown.void_eruption.up&talent.void_eruption)\n# Void Torrent if you are not holding Shadow Crash for an add pack coming, prefer the target with the most DoTs active. Only cast if Devouring Plague is on that target and will last at least 2 seconds\nactions.main+=/void_torrent,cycle_targets=1,if=!variable.holding_crash&(!talent.idol_of_cthun||!talent.void_eruption)&dot.devouring_plague.remains>=2.5,interrupt_if=cooldown.shadow_word_death.ready&pet.fiend.active&set_bonus.tier31_2pc\n# Cast Mindgames if all DoTs will be active by the time the cast finishes\nactions.main+=/call_action_list,name=filler\n\n# Use Halo to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/halo\n# Use Divine Star to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/divine_star\n# Use Holy Nova when Rhapsody is fully stacked to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/holy_nova,if=buff.rhapsody.stack=20&talent.rhapsody\n\nactions.trinkets+=/use_item,name=voidmenders_shadowgem,if=buff.power_infusion.up||boss&fight_remains<20\nactions.trinkets+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,if=gcd.remains>0||boss&fight_remains<20\nactions.trinkets+=/use_item,name=dreambinder_loom_of_the_great_cycle,use_off_gcd=1,if=gcd.remains>0||boss&fight_remains<20\nactions.trinkets+=/use_item,name=darkmoon_deck_box_inferno\nactions.trinkets+=/use_item,name=darkmoon_deck_box_rime\nactions.trinkets+=/use_item,name=darkmoon_deck_box_dance\nactions.trinkets+=/use_item,name=conjured_chillglobe\nactions.trinkets+=/use_item,name=iceblood_deathsnare,if=(!raid_event.adds.exists||raid_event.adds.up||spell_targets.iceblood_deathsnare>=5)||fight_remains<20\n# Use Erupting Spear Fragment with cooldowns, adds are currently active, or the fight will end in less than 20 seconds\nactions.trinkets+=/use_item,name=erupting_spear_fragment,if=buff.power_infusion.up||raid_event.adds.up||boss&fight_remains<20\n# Use Belor'relos on cooldown except to hold for incoming adds or if already facing 5 or more targets\nactions.trinkets+=/use_item,name=belorrelos_the_suncaller,if=(!raid_event.adds.exists||raid_event.adds.up||spell_targets.belorrelos_the_suncaller>=5||fight_remains<20)&equipped.belorrelos_the_suncaller\n# Use Beacon to the Beyond on cooldown except to hold for incoming adds or if already facing 5 or more targets\nactions.trinkets+=/use_item,name=beacon_to_the_beyond,if=!raid_event.adds.exists||raid_event.adds.up||spell_targets.beacon_to_the_beyond>=5||boss&fight_remains<20\nactions.trinkets+=/use_items,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up||(cooldown.void_eruption.remains>10&trinket.cooldown.duration<=60)||boss&fight_remains<20\nactions.trinkets+=/use_item,name=desperate_invokers_codex",
["spec"] = 258,
},
["Marksmanship"] = {
["source"] = "# https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231224,
["author"] = "SimC",
["desc"] = "2023-12-06: Hunter's Mark adjustment.\n\n2023-11-16: Hunter's Mark.\n\n2023-11-08: Add missing variable and lists.\n\n2023-11-05: Patch 10.2.\n\n2023-07-19: Make Trueshot conditions more forgiving in short fights.\n\n2023-07-15: Make Trueshot conditions more transparent.\n\n2023-07-02: Rapid Fire timing vs. Aimed Shot; add Steel Trap.\n\n2023-06-26: Don't Trueshot during a Trueshot.\n\n2023-05-12: Simplify Trueshot logic and remove a Steady Shot entry.\n\n2023-04-30: Trigger Salvo with Multi-Shot when Volley isn't talented.\n\n2023-04-26: Update from SimulationCraft.",
["lists"] = {
["trickshots"] = {
{
["enabled"] = true,
["criteria"] = "talent.steady_focus.enabled & steady_focus_count & buff.steady_focus.remains < 8",
["action"] = "steady_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.razor_fragments.up",
["action"] = "kill_shot",
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["action"] = "death_chakram",
["enabled"] = true,
},
{
["action"] = "stampede",
["enabled"] = true,
},
{
["action"] = "wailing_arrow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "refreshable & talent.hydras_bite.enabled & ! talent.serpentstalkers_trickery.enabled",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 7",
["action"] = "barrage",
},
{
["action"] = "volley",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.remains >= execute_time & talent.surging_shots.enabled",
["action"] = "rapid_fire",
},
{
["enabled"] = true,
["criteria"] = "variable.trueshot_ready",
["action"] = "trueshot",
},
{
["enabled"] = true,
["description"] = "For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. Generally only cast if it would cleave with Trick Shots. Don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise.",
["action"] = "aimed_shot",
["criteria"] = "talent.serpentstalkers_trickery.enabled & ( buff.trick_shots.remains >= execute_time & ( buff.precise_shots.down || buff.trueshot.up || full_recharge_time < cast_time + gcd.max ) )",
},
{
["enabled"] = true,
["action"] = "aimed_shot",
["cycle_targets"] = 1,
["description"] = "For no Serpentstalker's Trickery, target the highest Latent Poison stack. Same general rules as the previous line.",
["criteria"] = "( buff.trick_shots.remains >= execute_time & ( buff.precise_shots.down || buff.trueshot.up || full_recharge_time < cast_time + gcd.max ) )",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.remains >= execute_time",
["action"] = "rapid_fire",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.up & buff.precise_shots.up & focus > cost + action.aimed_shot.cost & active_enemies < 4",
["action"] = "chimaera_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.down || ( buff.precise_shots.up || buff.bulletstorm.stack = 10 ) & focus > cost + action.aimed_shot.cost",
["action"] = "multishot",
},
{
["enabled"] = true,
["action"] = "serpent_sting",
["cycle_targets"] = 1,
["description"] = "Only use baseline Serpent Sting as a filler in cleave if it's the only source of applying Latent Poison.",
["criteria"] = "refreshable & talent.poison_injection.enabled & ! talent.serpentstalkers_trickery.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "steel_trap",
},
{
["enabled"] = true,
["criteria"] = "focus > cost + action.aimed_shot.cost",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "focus > cost + action.aimed_shot.cost",
["action"] = "multishot",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "bag_of_tricks",
},
{
["action"] = "steady_shot",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "counter_shot",
["enabled"] = true,
},
{
["action"] = "tranquilizing_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.trueshot.ready & ( ! raid_event.adds.exists & ( ! talent.bullseye.enabled || fight_remains > cooldown.trueshot.duration_guess + buff.trueshot.duration / 2 || buff.bullseye.stack = buff.bullseye.max_stack ) & ( ! trinket.t1.has_use_buff || trinket.t1.cooldown.remains > 30 || trinket.t1.cooldown.ready ) & ( ! trinket.t2.has_use_buff || trinket.t2.cooldown.remains > 30 || trinket.t2.cooldown.ready ) || raid_event.adds.exists & ( ! raid_event.adds.up & ( raid_event.adds.duration + raid_event.adds.in < 25 || raid_event.adds.in > 60 ) || raid_event.adds.up & raid_event.adds.remains > 10 ) || boss & fight_remains < 25 )",
["var_name"] = "trueshot_ready",
["description"] = "Determine if it is a good time to use Trueshot. Raid event optimization takes priority so usage is saved for multiple targets as long as it won't delay over half its duration. Otherwise allow for small delays to line up buff effect trinkets, and when using Bullseye, delay the last usage of the fight for max stacks.",
},
{
["enabled"] = true,
["criteria"] = "( settings.mark_any || target.is_boss ) & active_dot.hunters_mark = 0 & target.health_pct > 80 & ( group || target.time_to_pct_80 > gcd.max * 20 )",
["action"] = "hunters_mark",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 3 || ! talent.trick_shots.enabled",
["list_name"] = "st",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "trickshots",
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "buff.coordinated_assault_empower.up & talent.birds_of_prey.enabled",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "cooldown.death_chakram.duration = 45",
["action"] = "death_chakram",
},
{
["action"] = "wildfire_bomb",
["enabled"] = true,
},
{
["action"] = "stampede",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( cooldown.fury_of_the_eagle.remains || ! talent.fury_of_the_eagle.enabled )",
["action"] = "coordinated_assault",
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.wildfire_bomb.full_recharge_time > spell_targets / 2",
["action"] = "carve",
},
{
["enabled"] = true,
["name"] = "djaruun_pillar_of_the_elder_flame",
["action"] = "djaruun_pillar_of_the_elder_flame",
},
{
["enabled"] = true,
["criteria"] = "cooldown.butchery.full_recharge_time > cast_time & raid_event.adds.exists || ! talent.butchery.enabled",
["action"] = "fury_of_the_eagle",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.exists",
["action"] = "butchery",
},
{
["enabled"] = true,
["criteria"] = "( full_recharge_time < gcd.max || dot.shrapnel_bomb.ticking & ( dot.internal_bleeding.stack < 2 || dot.shrapnel_bomb.remains < gcd.max || raid_event.adds.remains < 10 ) ) & ! raid_event.adds.exists",
["action"] = "butchery",
},
{
["enabled"] = true,
["criteria"] = "! raid_event.adds.exists",
["action"] = "fury_of_the_eagle",
},
{
["enabled"] = true,
["criteria"] = "dot.shrapnel_bomb.ticking",
["action"] = "carve",
},
{
["enabled"] = true,
["criteria"] = "( ! next_wi_bomb.shrapnel || ! talent.wildfire_infusion.enabled )",
["action"] = "butchery",
},
{
["enabled"] = true,
["criteria"] = "debuff.latent_poison.stack > 8",
["action"] = "mongoose_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "debuff.latent_poison.stack > 8",
["action"] = "raptor_strike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max & full_recharge_time < gcd.max",
["action"] = "kill_command",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max",
["action"] = "flanking_strike",
},
{
["action"] = "carve",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.coordinated_assault.up",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max",
["action"] = "steel_trap",
},
{
["action"] = "spearhead",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.spearhead.remains",
["action"] = "mongoose_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 12 & ( ! talent.vipers_venom.enabled || talent.hydras_bite.enabled )",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mongoose_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "raptor_strike",
["cycle_targets"] = 1,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "! talent.lone_wolf.enabled",
["action"] = "summon_pet",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! trinket.t2.has_cooldown || trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff || ! trinket.t1.is.mirror_of_fractured_tomorrows & ( trinket.t2.is.mirror_of_fractured_tomorrows || trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) ) || ! trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration < trinket.t1.cooldown.duration || trinket.t2.cast_time < trinket.t1.cast_time || trinket.t2.cast_time = trinket.t1.cast_time & trinket.t2.cooldown.duration = trinket.t1.cooldown.duration ) )",
["var_name"] = "trinket_1_stronger",
["description"] = "Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! variable.trinket_1_stronger",
["var_name"] = "trinket_2_stronger",
},
{
["enabled"] = true,
["precast_time"] = "10",
["action"] = "salvo",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["description"] = "Precast Aimed Shot on one or two targets unless we could cleave it with Volley on two targets.",
["criteria"] = "active_enemies < 3 & ( ! talent.volley.enabled || active_enemies < 2 )",
["action"] = "aimed_shot",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 || ! talent.steady_focus.enabled",
["action"] = "wailing_arrow",
},
{
["enabled"] = true,
["description"] = "Precast Steady Shot on two targets if we are saving Aimed Shot to cleave with Volley, otherwise on three or more targets.",
["criteria"] = "active_enemies > 2 || talent.volley.enabled & active_enemies = 2",
["action"] = "steady_shot",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 13",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 16",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 16",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up || cooldown.trueshot.remains > 30 || boss & fight_remains < 9",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.up & ( buff.bloodlust.up || target.health.pct < 20 ) || boss & fight_remains < 26",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 || cooldown.volley.remains < 10",
["action"] = "salvo",
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "talent.steady_focus.enabled & steady_focus_count & ( buff.steady_focus.remains < 8 || buff.steady_focus.down & ! buff.trueshot.up )",
["action"] = "steady_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.trick_shots.remains < execute_time",
["action"] = "rapid_fire",
},
{
["enabled"] = true,
["criteria"] = "focus + cast_regen < focus.max",
["action"] = "kill_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.salvo.up || variable.trueshot_ready || cooldown.trueshot.remains > 45 || boss & fight_remains < 12",
["action"] = "volley",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.serpentstalkers_trickery.enabled & buff.trueshot.down",
["action"] = "serpent_sting",
["cycle_targets"] = 1,
},
{
["action"] = "explosive_shot",
["enabled"] = true,
},
{
["action"] = "stampede",
["enabled"] = true,
},
{
["action"] = "death_chakram",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "wailing_arrow",
},
{
["enabled"] = true,
["criteria"] = "( talent.surging_shots.enabled || action.aimed_shot.full_recharge_time > action.aimed_shot.cast_time + cast_time ) & ( focus + cast_regen < focus.max )",
["action"] = "rapid_fire",
},
{
["enabled"] = true,
["criteria"] = "cooldown.trueshot.ready & buff.trueshot.down & ( active_enemies = 1 & ( ! talent.bullseye.enabled || time < 15 || expected_combat_length > cooldown.trueshot.duration || fight_remains > cooldown.trueshot.duration_guess + buff.trueshot.duration / 2 || buff.bullseye.stack = buff.bullseye.max_stack ) & ( ! trinket.t1.has_use_buff || trinket.t1.cooldown.remains > 30 || trinket.t1.cooldown.ready ) & ( ! trinket.t2.has_use_buff || trinket.t2.cooldown.remains > 30 || trinket.t2.cooldown.ready ) || active_enemies > 1 || boss & fight_remains < 25 )",
["action"] = "trueshot",
},
{
["enabled"] = true,
["description"] = "Trigger Salvo if Volley isn't being used to trigger it.",
["criteria"] = "buff.salvo.up & ! talent.volley.enabled",
["action"] = "multishot",
},
{
["enabled"] = true,
["action"] = "aimed_shot",
["cycle_targets"] = 1,
["description"] = "With Serpentstalker's Trickery target the lowest remaining Serpent Sting. Without Chimaera Shot don't overwrite Precise Shots unless either Trueshot is active or Aimed Shot would cap before its next cast. On two targets with Chimaera Shot don't overwrite Precise Shots unless the target is within Careful Aim range in addition to either Trueshot being active or Aimed Shot capping before its next cast. Overwrite freely if it can cleave.",
["criteria"] = "talent.serpentstalkers_trickery.enabled & ( buff.precise_shots.down || ( buff.trueshot.up || full_recharge_time < gcd.max + cast_time ) & ( ! talent.chimaera_shot.enabled || active_enemies < 2 || ca_active ) || buff.trick_shots.remains > execute_time & active_enemies > 1 )",
},
{
["enabled"] = true,
["action"] = "aimed_shot",
["cycle_targets"] = 1,
["description"] = "Without Serpentstalker's Trickery, target the highest Latent Poison stack. Same rules as the previous line.",
["criteria"] = "buff.precise_shots.down || ( buff.trueshot.up || full_recharge_time < gcd.max + cast_time ) & ( ! talent.chimaera_shot.enabled || active_enemies < 2 || ca_active ) || buff.trick_shots.remains > execute_time & active_enemies > 1",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "wailing_arrow",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "kill_command",
},
{
["action"] = "steel_trap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.precise_shots.up || focus > cost + action.aimed_shot.cost",
["action"] = "chimaera_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.precise_shots.up || focus > cost + action.aimed_shot.cost",
["action"] = "arcane_shot",
},
{
["enabled"] = true,
["criteria"] = "buff.trueshot.down",
["action"] = "bag_of_tricks",
},
{
["action"] = "steady_shot",
["enabled"] = true,
},
},
["trinkets"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.trueshot_ready",
["var_name"] = "sync_ready",
["description"] = "True if effects that are desirable to sync a trinket buff with are ready.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.trueshot.up",
["var_name"] = "sync_active",
["description"] = "True if effecs that are desirable to sync a trinket buff with are active.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.trueshot.remains_guess",
["var_name"] = "sync_remains",
["description"] = "Time until the effects that are desirable to sync a trinket buff with will be ready.",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.",
["criteria"] = "trinket.t1.has_use_buff & ( variable.sync_ready & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_1_stronger & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 & fight_remains > trinket.t1.cooldown.duration + 20 || trinket.t2.has_use_buff & trinket.t2.cooldown.remains > variable.sync_remains - 15 & trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_2_stronger & ( trinket.t2.cooldown.remains & ( trinket.t2.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t2.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t1.cooldown.duration / 3 || trinket.t1.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t1.cooldown.duration > fight_remains ) ) ) || trinket.t2.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t2.cooldown.duration / 3 ) ) ) || ! trinket.t1.has_use_buff & ( trinket.t1.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t2.has_use_buff & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains ) || trinket.t2.has_use_buff & ( variable.sync_remains > 20 || trinket.t2.cooldown.remains > 20 ) ) || boss & fight_remains < 25 & ( variable.trinket_1_stronger || trinket.t2.cooldown.remains )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "trinket.t2.has_use_buff & ( variable.sync_ready & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || ! variable.sync_ready & ( variable.trinket_2_stronger & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 & fight_remains > trinket.t2.cooldown.duration + 20 || trinket.t1.has_use_buff & trinket.t1.cooldown.remains > variable.sync_remains - 15 & trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains + 45 > fight_remains ) || variable.trinket_1_stronger & ( trinket.t1.cooldown.remains & ( trinket.t1.cooldown.remains - 5 < variable.sync_remains & variable.sync_remains >= 20 || trinket.t1.cooldown.remains - 5 >= variable.sync_remains & ( variable.sync_remains > trinket.t2.cooldown.duration / 3 || trinket.t2.cooldown.duration < fight_remains & ( variable.sync_remains + trinket.t2.cooldown.duration > fight_remains ) ) ) || trinket.t1.cooldown.ready & variable.sync_remains > 20 & variable.sync_remains < trinket.t1.cooldown.duration / 3 ) ) ) || ! trinket.t2.has_use_buff & ( trinket.t2.cast_time = 0 || ! variable.sync_active ) & ( ! trinket.t1.has_use_buff & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains ) || trinket.t1.has_use_buff & ( variable.sync_remains > 20 || trinket.t1.cooldown.remains > 20 ) ) || boss & fight_remains < 25 & ( variable.trinket_2_stronger || trinket.t1.cooldown.remains )",
},
},
},
["version"] = 20231224,
["warnings"] = "The import for 'trickshots' required some automated changes.\nLine 1: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 7: Converted 'talent.hydras_bite' to 'talent.hydras_bite.enabled' (1x).\nLine 7: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\nLine 10: Converted 'talent.surging_shots' to 'talent.surging_shots.enabled' (1x).\nLine 12: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\nLine 17: Converted 'talent.poison_injection' to 'talent.poison_injection.enabled' (1x).\nLine 17: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.bullseye' to 'talent.bullseye.enabled' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 3: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 3: Converted operations in 'cooldown.trueshot.ready&(!raid_event.adds.exists&(!talent.bullseye.enabled||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration%2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.t1.has_use_buff||trinket.t1.cooldown.remains>30||trinket.t1.cooldown.ready)&(!trinket.t2.has_use_buff||trinket.t2.cooldown.remains>30||trinket.t2.cooldown.ready)||raid_event.adds.exists&(!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10)||boss&fight_remains<25)' to 'cooldown.trueshot.ready&(!raid_event.adds.exists&(!talent.bullseye.enabled||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration/2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.t1.has_use_buff||trinket.t1.cooldown.remains>30||trinket.t1.cooldown.ready)&(!trinket.t2.has_use_buff||trinket.t2.cooldown.remains>30||trinket.t2.cooldown.ready)||raid_event.adds.exists&(!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10)||boss&fight_remains<25)'.\nLine 7: Converted 'talent.trick_shots' to 'talent.trick_shots.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'talent.lone_wolf' to 'talent.lone_wolf.enabled' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\nLine 7: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 8: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 4: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted operations in 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration%3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration%3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration%3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(variable.sync_remains>20||trinket.t2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)' to 'trinket.t1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.t1.cooldown.duration/3&fight_remains>trinket.t1.cooldown.duration+20||trinket.t2.has_use_buff&trinket.t2.cooldown.remains>variable.sync_remains-15&trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.t2.cooldown.remains&(trinket.t2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t1.cooldown.duration/3||trinket.t1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t1.cooldown.duration>fight_remains)))||trinket.t2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t2.cooldown.duration/3)))||!trinket.t1.has_use_buff&(trinket.t1.cast_time=0||!variable.sync_active)&(!trinket.t2.has_use_buff&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)||trinket.t2.has_use_buff&(variable.sync_remains>20||trinket.t2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.t2.cooldown.remains)'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 5: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted operations in 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration%3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration%3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration%3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(variable.sync_remains>20||trinket.t1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)' to 'trinket.t2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.t2.cooldown.duration/3&fight_remains>trinket.t2.cooldown.duration+20||trinket.t1.has_use_buff&trinket.t1.cooldown.remains>variable.sync_remains-15&trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.t1.cooldown.remains&(trinket.t1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.t1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.t2.cooldown.duration/3||trinket.t2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.t2.cooldown.duration>fight_remains)))||trinket.t1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.t1.cooldown.duration/3)))||!trinket.t2.has_use_buff&(trinket.t2.cast_time=0||!variable.sync_active)&(!trinket.t1.has_use_buff&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)||trinket.t1.has_use_buff&(variable.sync_remains>20||trinket.t1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.t1.cooldown.remains)'.\n\nThe import for 'st' required some automated changes.\nLine 1: Converted 'talent.steady_focus' to 'talent.steady_focus.enabled' (1x).\nLine 5: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\nLine 10: Converted 'talent.surging_shots' to 'talent.surging_shots.enabled' (1x).\nLine 11: Converted 'talent.bullseye' to 'talent.bullseye.enabled' (1x).\nLine 11: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 11: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\nLine 11: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 11: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 11: Converted operations in 'cooldown.trueshot.ready&buff.trueshot.down&(active_enemies=1&(!talent.bullseye.enabled||time<15||expected_combat_length>cooldown.trueshot.duration||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration%2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.t1.has_use_buff||trinket.t1.cooldown.remains>30||trinket.t1.cooldown.ready)&(!trinket.t2.has_use_buff||trinket.t2.cooldown.remains>30||trinket.t2.cooldown.ready)||active_enemies>1||boss&fight_remains<25)' to 'cooldown.trueshot.ready&buff.trueshot.down&(active_enemies=1&(!talent.bullseye.enabled||time<15||expected_combat_length>cooldown.trueshot.duration||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration/2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.t1.has_use_buff||trinket.t1.cooldown.remains>30||trinket.t1.cooldown.ready)&(!trinket.t2.has_use_buff||trinket.t2.cooldown.remains>30||trinket.t2.cooldown.ready)||active_enemies>1||boss&fight_remains<25)'.\nLine 12: Converted 'talent.volley' to 'talent.volley.enabled' (1x).\nLine 13: Converted 'talent.serpentstalkers_trickery' to 'talent.serpentstalkers_trickery.enabled' (1x).\nLine 13: Converted 'talent.chimaera_shot' to 'talent.chimaera_shot.enabled' (1x).\nLine 14: Converted 'talent.chimaera_shot' to 'talent.chimaera_shot.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 1: Converted 'talent.birds_of_prey' to 'talent.birds_of_prey.enabled' (1x).\nLine 5: Converted 'talent.fury_of_the_eagle' to 'talent.fury_of_the_eagle.enabled' (1x).\nLine 7: Converted operations in 'cooldown.wildfire_bomb.full_recharge_time>spell_targets%2' to 'cooldown.wildfire_bomb.full_recharge_time>spell_targets/2'.\nLine 9: Converted 'talent.butchery' to 'talent.butchery.enabled' (1x).\nLine 14: Converted 'talent.wildfire_infusion' to 'talent.wildfire_infusion.enabled' (1x).\nLine 24: Converted 'talent.vipers_venom' to 'talent.vipers_venom.enabled' (1x).\nLine 24: Converted 'talent.hydras_bite' to 'talent.hydras_bite.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/summon_pet,if=!talent.lone_wolf\n# Determine the stronger trinket to sync with cooldowns. In descending priority: buff effects > damage effects, longer > shorter cooldowns, longer > shorter cast times. Special case to consider Mirror of Fractured Tomorrows weaker than other buff effects since its power is split between the dmg effect and the buff effect.\nactions.precombat+=/variable,name=trinket_1_stronger,value=!trinket.2.has_cooldown||trinket.1.has_use_buff&(!trinket.2.has_use_buff||!trinket.1.is.mirror_of_fractured_tomorrows&(trinket.2.is.mirror_of_fractured_tomorrows||trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))||!trinket.1.has_use_buff&(!trinket.2.has_use_buff&(trinket.2.cooldown.duration<trinket.1.cooldown.duration||trinket.2.cast_time<trinket.1.cast_time||trinket.2.cast_time=trinket.1.cast_time&trinket.2.cooldown.duration=trinket.1.cooldown.duration))\nactions.precombat+=/variable,name=trinket_2_stronger,value=!variable.trinket_1_stronger\nactions.precombat+=/salvo,precast_time=10\nactions.precombat+=/use_item,name=algethar_puzzle_box\n# Precast Aimed Shot on one or two targets unless we could cleave it with Volley on two targets.\nactions.precombat+=/aimed_shot,if=active_enemies<3&(!talent.volley||active_enemies<2)\nactions.precombat+=/wailing_arrow,if=active_enemies>2||!talent.steady_focus\n# Precast Steady Shot on two targets if we are saving Aimed Shot to cleave with Volley, otherwise on three or more targets.\nactions.precombat+=/steady_shot,if=active_enemies>2||talent.volley&active_enemies=2\n\nactions=counter_shot\nactions+=/tranquilizing_shot\n# Determine if it is a good time to use Trueshot. Raid event optimization takes priority so usage is saved for multiple targets as long as it won't delay over half its duration. Otherwise allow for small delays to line up buff effect trinkets, and when using Bullseye, delay the last usage of the fight for max stacks.\nactions+=/variable,name=trueshot_ready,value=cooldown.trueshot.ready&(!raid_event.adds.exists&(!talent.bullseye||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration%2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.1.has_use_buff||trinket.1.cooldown.remains>30||trinket.1.cooldown.ready)&(!trinket.2.has_use_buff||trinket.2.cooldown.remains>30||trinket.2.cooldown.ready)||raid_event.adds.exists&(!raid_event.adds.up&(raid_event.adds.duration+raid_event.adds.in<25||raid_event.adds.in>60)||raid_event.adds.up&raid_event.adds.remains>10)||boss&fight_remains<25)\nactions+=/hunters_mark,if=(settings.mark_any||target.is_boss)&active_dot.hunters_mark=0&target.health_pct>80&(group||target.time_to_pct_80>gcd.max*20)\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3||!talent.trick_shots\nactions+=/call_action_list,name=trickshots,strict=1,if=active_enemies>2\n### Call for Power Infusion when Trueshot is up.\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.trueshot.remains>12\nactions.cds+=/berserking,if=boss&fight_remains<13\nactions.cds+=/blood_fury,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<16\nactions.cds+=/ancestral_call,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<16\nactions.cds+=/fireblood,if=buff.trueshot.up||cooldown.trueshot.remains>30||boss&fight_remains<9\nactions.cds+=/lights_judgment,if=buff.trueshot.down\nactions.cds+=/potion,if=buff.trueshot.up&(buff.bloodlust.up||target.health.pct<20)||boss&fight_remains<26\nactions.cds+=/salvo,if=active_enemies>2||cooldown.volley.remains<10\n\nactions.cleave+=/kill_shot,if=buff.coordinated_assault_empower.up&talent.birds_of_prey\nactions.cleave+=/death_chakram,if=cooldown.death_chakram.duration=45\nactions.cleave+=/wildfire_bomb\nactions.cleave+=/stampede\nactions.cleave+=/coordinated_assault,if=(cooldown.fury_of_the_eagle.remains||!talent.fury_of_the_eagle)\nactions.cleave+=/explosive_shot\nactions.cleave+=/carve,if=cooldown.wildfire_bomb.full_recharge_time>spell_targets%2\nactions.cleave+=/use_item,name=djaruun_pillar_of_the_elder_flame\nactions.cleave+=/fury_of_the_eagle,if=cooldown.butchery.full_recharge_time>cast_time&raid_event.adds.exists||!talent.butchery\nactions.cleave+=/butchery,if=raid_event.adds.exists\nactions.cleave+=/butchery,if=(full_recharge_time<gcd||dot.shrapnel_bomb.ticking&(dot.internal_bleeding.stack<2||dot.shrapnel_bomb.remains<gcd||raid_event.adds.remains<10))&!raid_event.adds.exists\nactions.cleave+=/fury_of_the_eagle,if=!raid_event.adds.exists\nactions.cleave+=/carve,if=dot.shrapnel_bomb.ticking\nactions.cleave+=/butchery,if=(!next_wi_bomb.shrapnel||!talent.wildfire_infusion)\nactions.cleave+=/mongoose_bite,cycle_targets=1,if=debuff.latent_poison.stack>8\nactions.cleave+=/raptor_strike,cycle_targets=1,if=debuff.latent_poison.stack>8\nactions.cleave+=/kill_command,cycle_targets=1,if=focus+cast_regen<focus.max&full_recharge_time<gcd\nactions.cleave+=/flanking_strike,if=focus+cast_regen<focus.max\nactions.cleave+=/carve\nactions.cleave+=/kill_shot,if=!buff.coordinated_assault.up\nactions.cleave+=/steel_trap,if=focus+cast_regen<focus.max\nactions.cleave+=/spearhead\nactions.cleave+=/mongoose_bite,cycle_targets=1,if=buff.spearhead.remains\nactions.cleave+=/serpent_sting,cycle_targets=1,if=refreshable&target.time_to_die>12&(!talent.vipers_venom||talent.hydras_bite)\nactions.cleave+=/mongoose_bite,cycle_targets=1,\nactions.cleave+=/raptor_strike,cycle_targets=1,\n\nactions.st+=/steady_shot,if=talent.steady_focus&steady_focus_count&(buff.steady_focus.remains<8||buff.steady_focus.down&!buff.trueshot.up)\nactions.st+=/rapid_fire,if=buff.trick_shots.remains<execute_time\nactions.st+=/kill_shot,if=focus+cast_regen<focus.max\nactions.st+=/volley,if=buff.salvo.up||variable.trueshot_ready||cooldown.trueshot.remains>45||boss&fight_remains<12\nactions.st+=/serpent_sting,cycle_targets=1,if=refreshable&!talent.serpentstalkers_trickery&buff.trueshot.down\nactions.st+=/explosive_shot\nactions.st+=/stampede\nactions.st+=/death_chakram\nactions.st+=/wailing_arrow,if=active_enemies>1\nactions.st+=/rapid_fire,if=(talent.surging_shots||action.aimed_shot.full_recharge_time>action.aimed_shot.cast_time+cast_time)&(focus+cast_regen<focus.max)\nactions.st+=/trueshot,if=cooldown.trueshot.ready&buff.trueshot.down&(active_enemies=1&(!talent.bullseye||time<15||expected_combat_length>cooldown.trueshot.duration||fight_remains>cooldown.trueshot.duration_guess+buff.trueshot.duration%2||buff.bullseye.stack=buff.bullseye.max_stack)&(!trinket.1.has_use_buff||trinket.1.cooldown.remains>30||trinket.1.cooldown.ready)&(!trinket.2.has_use_buff||trinket.2.cooldown.remains>30||trinket.2.cooldown.ready)||active_enemies>1||boss&fight_remains<25)\n# Trigger Salvo if Volley isn't being used to trigger it.\nactions.st+=/multishot,if=buff.salvo.up&!talent.volley\n# With Serpentstalker's Trickery target the lowest remaining Serpent Sting. Without Chimaera Shot don't overwrite Precise Shots unless either Trueshot is active or Aimed Shot would cap before its next cast. On two targets with Chimaera Shot don't overwrite Precise Shots unless the target is within Careful Aim range in addition to either Trueshot being active or Aimed Shot capping before its next cast. Overwrite freely if it can cleave.\nactions.st+=/aimed_shot,cycle_targets=1,if=talent.serpentstalkers_trickery&(buff.precise_shots.down||(buff.trueshot.up||full_recharge_time<gcd+cast_time)&(!talent.chimaera_shot||active_enemies<2||ca_active)||buff.trick_shots.remains>execute_time&active_enemies>1)\n# Without Serpentstalker's Trickery, target the highest Latent Poison stack. Same rules as the previous line.\nactions.st+=/aimed_shot,cycle_targets=1,if=buff.precise_shots.down||(buff.trueshot.up||full_recharge_time<gcd+cast_time)&(!talent.chimaera_shot||active_enemies<2||ca_active)||buff.trick_shots.remains>execute_time&active_enemies>1\nactions.st+=/wailing_arrow,if=buff.trueshot.down\nactions.st+=/kill_command,if=buff.trueshot.down\nactions.st+=/steel_trap\nactions.st+=/chimaera_shot,if=buff.precise_shots.up||focus>cost+action.aimed_shot.cost\nactions.st+=/arcane_shot,if=buff.precise_shots.up||focus>cost+action.aimed_shot.cost\nactions.st+=/bag_of_tricks,if=buff.trueshot.down\nactions.st+=/steady_shot\n\nactions.trickshots+=/steady_shot,if=talent.steady_focus&steady_focus_count&buff.steady_focus.remains<8\nactions.trickshots+=/kill_shot,if=buff.razor_fragments.up\nactions.trickshots+=/explosive_shot\nactions.trickshots+=/death_chakram\nactions.trickshots+=/stampede\nactions.trickshots+=/wailing_arrow\nactions.trickshots+=/serpent_sting,cycle_targets=1,if=refreshable&talent.hydras_bite&!talent.serpentstalkers_trickery\nactions.trickshots+=/barrage,if=active_enemies>7\nactions.trickshots+=/volley\nactions.trickshots+=/rapid_fire,if=buff.trick_shots.remains>=execute_time&talent.surging_shots\nactions.trickshots+=/trueshot,if=variable.trueshot_ready\n# For Serpentstalker's Trickery, target the lowest remaining Serpent Sting. Generally only cast if it would cleave with Trick Shots. Don't overwrite Precise Shots unless Trueshot is up or Aimed Shot would cap otherwise.\nactions.trickshots+=/aimed_shot,cycle_targets=1+action.serpent_sting.in_flight_to_target*99,if=talent.serpentstalkers_trickery&(buff.trick_shots.remains>=execute_time&(buff.precise_shots.down||buff.trueshot.up||full_recharge_time<cast_time+gcd))\n# For no Serpentstalker's Trickery, target the highest Latent Poison stack. Same general rules as the previous line.\nactions.trickshots+=/aimed_shot,cycle_targets=1,if=(buff.trick_shots.remains>=execute_time&(buff.precise_shots.down||buff.trueshot.up||full_recharge_time<cast_time+gcd))\nactions.trickshots+=/rapid_fire,if=buff.trick_shots.remains>=execute_time\nactions.trickshots+=/chimaera_shot,if=buff.trick_shots.up&buff.precise_shots.up&focus>cost+action.aimed_shot.cost&active_enemies<4\nactions.trickshots+=/multishot,if=buff.trick_shots.down||(buff.precise_shots.up||buff.bulletstorm.stack=10)&focus>cost+action.aimed_shot.cost\n# Only use baseline Serpent Sting as a filler in cleave if it's the only source of applying Latent Poison.\nactions.trickshots+=/serpent_sting,cycle_targets=1,if=refreshable&talent.poison_injection&!talent.serpentstalkers_trickery\nactions.trickshots+=/steel_trap,if=buff.trueshot.down\nactions.trickshots+=/kill_shot,if=focus>cost+action.aimed_shot.cost\nactions.trickshots+=/multishot,if=focus>cost+action.aimed_shot.cost\nactions.trickshots+=/bag_of_tricks,if=buff.trueshot.down\nactions.trickshots+=/steady_shot\n\n# True if effects that are desirable to sync a trinket buff with are ready.\nactions.trinkets+=/variable,name=sync_ready,value=variable.trueshot_ready\n# True if effecs that are desirable to sync a trinket buff with are active.\nactions.trinkets+=/variable,name=sync_active,value=buff.trueshot.up\n# Time until the effects that are desirable to sync a trinket buff with will be ready.\nactions.trinkets+=/variable,name=sync_remains,value=cooldown.trueshot.remains_guess\n# Uses buff effect trinkets with cooldowns and is willing to delay usage up to half the trinket cooldown if it won't lose a usage in the fight. Fills in downtime with weaker buff effects if they won't also be saved for later cooldowns (happens if it won't delay over half the trinket cooldown and a stronger trinket won't be up in time) or damage effects if they won't inferfere with any buff effect usage. Intended to be slot-agnostic so that any order of the same trinket pair should result in the same usage.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=trinket.1.has_use_buff&(variable.sync_ready&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||!variable.sync_ready&(variable.trinket_1_stronger&(variable.sync_remains>trinket.1.cooldown.duration%3&fight_remains>trinket.1.cooldown.duration+20||trinket.2.has_use_buff&trinket.2.cooldown.remains>variable.sync_remains-15&trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_2_stronger&(trinket.2.cooldown.remains&(trinket.2.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.2.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.1.cooldown.duration%3||trinket.1.cooldown.duration<fight_remains&(variable.sync_remains+trinket.1.cooldown.duration>fight_remains)))||trinket.2.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.2.cooldown.duration%3)))||!trinket.1.has_use_buff&(trinket.1.cast_time=0||!variable.sync_active)&(!trinket.2.has_use_buff&(variable.trinket_1_stronger||trinket.2.cooldown.remains)||trinket.2.has_use_buff&(variable.sync_remains>20||trinket.2.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_1_stronger||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=trinket.2.has_use_buff&(variable.sync_ready&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||!variable.sync_ready&(variable.trinket_2_stronger&(variable.sync_remains>trinket.2.cooldown.duration%3&fight_remains>trinket.2.cooldown.duration+20||trinket.1.has_use_buff&trinket.1.cooldown.remains>variable.sync_remains-15&trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains+45>fight_remains)||variable.trinket_1_stronger&(trinket.1.cooldown.remains&(trinket.1.cooldown.remains-5<variable.sync_remains&variable.sync_remains>=20||trinket.1.cooldown.remains-5>=variable.sync_remains&(variable.sync_remains>trinket.2.cooldown.duration%3||trinket.2.cooldown.duration<fight_remains&(variable.sync_remains+trinket.2.cooldown.duration>fight_remains)))||trinket.1.cooldown.ready&variable.sync_remains>20&variable.sync_remains<trinket.1.cooldown.duration%3)))||!trinket.2.has_use_buff&(trinket.2.cast_time=0||!variable.sync_active)&(!trinket.1.has_use_buff&(variable.trinket_2_stronger||trinket.1.cooldown.remains)||trinket.1.has_use_buff&(variable.sync_remains>20||trinket.1.cooldown.remains>20))||boss&fight_remains<25&(variable.trinket_2_stronger||trinket.1.cooldown.remains)",
["spec"] = 254,
},
["Mistweaver"] = {
["builtIn"] = true,
["date"] = 20230325,
["spec"] = 270,
["desc"] = "2023-02-16:  Added option to avoid recasting Faeline Stomp when standing in an existing faeline (for mana efficiency).\n\n2023-03-25:  Add Roll/Chi Torpedo with specialization option.",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies <= 3",
["action"] = "thunder_focus_tea",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 3",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || buff.teachings_of_the_monastery.up & active_enemies <= 3",
["action"] = "blackout_kick",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "spinning_crane_kick",
["enabled"] = true,
},
},
["st"] = {
{
["action"] = "thunder_focus_tea",
["enabled"] = true,
},
{
["action"] = "rising_sun_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || buff.teachings_of_the_monastery.up & cooldown.rising_sun_kick.remains > gcd.max",
["action"] = "blackout_kick",
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.teachings_of_the_monastery.enabled || buff.teachings_of_the_monastery.stack < 3 || buff.teachings_of_the_monastery.remains < 2",
["action"] = "tiger_palm",
},
},
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "distance_check",
["action"] = "roll",
},
{
["enabled"] = true,
["criteria"] = "distance_check",
["action"] = "chi_torpedo",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! settings.save_faeline || ! ( buff.ancient_concordance.up || buff.awakened_faeline.up )",
["action"] = "faeline_stomp",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies < 3",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "chi_burst",
["enabled"] = true,
},
{
["action"] = "chi_wave",
["enabled"] = true,
},
},
},
["version"] = 20230325,
["warnings"] = "The import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 3: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\nLine 6: Converted 'talent.teachings_of_the_monastery' to 'talent.teachings_of_the_monastery.enabled' (1x).\n\nImported 4 action lists.\n",
["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst\nactions.precombat+=/chi_wave\n\nactions+=/spear_hand_strike\nactions+=/roll,if=distance_check\nactions+=/chi_torpedo,if=distance_check\nactions+=/use_items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion\nactions+=/faeline_stomp,if=!settings.save_faeline||!(buff.ancient_concordance.up||buff.awakened_faeline.up)\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3\n\nactions.st+=/thunder_focus_tea\nactions.st+=/rising_sun_kick\nactions.st+=/blackout_kick,if=!talent.teachings_of_the_monastery||buff.teachings_of_the_monastery.up&cooldown.rising_sun_kick.remains>gcd.max\nactions.st+=/chi_wave\nactions.st+=/chi_burst\nactions.st+=/tiger_palm,if=!talent.teachings_of_the_monastery||buff.teachings_of_the_monastery.stack<3||buff.teachings_of_the_monastery.remains<2\n\nactions.aoe+=/thunder_focus_tea,if=active_enemies<=3\nactions.aoe+=/rising_sun_kick,if=active_enemies<=3\nactions.aoe+=/blackout_kick,if=!talent.teachings_of_the_monastery||buff.teachings_of_the_monastery.up&active_enemies<=3\nactions.aoe+=/chi_wave\nactions.aoe+=/chi_burst\nactions.aoe+=/spinning_crane_kick",
["author"] = "Aikanaka",
},
["Subtlety"] = {
["builtIn"] = true,
["date"] = 20240508,
["spec"] = 261,
["desc"] = "2024-05-08: SimC update.\n\n2024-03-12: Minor sim update.\n\n2024-02-07: Make troubleshooting Secret Technique easier.\n\n2024-01-05: Sim update.\n\n2023-11-13:  Sim update.\n\n2023-11-09:  Minor SimC update.\n\n2023-11-08:  Fix profile import.\n\n2023-11-07:  Further 10.2 updates.\n\n2023-11-05:  Patch 10.2.\n\n2023-06-03: Skip Rupture in multi-target when Rupture is on another enemy or your target will die relatively soon.\n\n2023-05-14:  Relax stealth_cds action list requirements.\n - Shiv.\n\n2023-05-12:  10.1 updates.\n\n2023-03-19:  10.0.7 update.\n\n2023-03-28:  Optimize efficiency.\n\n2023-04-05:  Move precombat Al'gethar Puzzle Box before Stealth.",
["lists"] = {
["stealthed"] = {
{
["enabled"] = true,
["criteria"] = "buff.stealth.up & ( spell_targets.shuriken_storm < 4 || priority_rotation )",
["action"] = "shadowstrike",
["description"] = "Always Strike froM Stealth",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Finish when on Animacharged combo points or max combo points.",
["criteria"] = "effective_combo_points >= cp_max_spend || buff.shuriken_tornado.up & combo_points.deficit <= 2 || combo_points.deficit <= 1 + ( talent.deeper_stratagem.enabled || talent.secret_stratagem.enabled )",
["list_name"] = "finish",
},
{
["enabled"] = true,
["criteria"] = "! buff.premeditation.up & buff.shadow_dance.remains >= 3 & buff.shadow_blades.up & ! used_for_danse & talent.danse_macabre.enabled & spell_targets.shuriken_storm <= 3 & ! buff.the_rotten.up",
["action"] = "backstab",
["description"] = "Backstab for Danse Macabre stack generation during Shadowblades.",
},
{
["enabled"] = true,
["criteria"] = "! buff.premeditation.up & buff.shadow_dance.remains >= 3 & buff.shadow_blades.up & ! used_for_danse & talent.danse_macabre.enabled & spell_targets.shuriken_storm <= 4",
["action"] = "gloomblade",
["description"] = "Gloomblade for Danse Macabre stack generation during Shadowblades.",
},
{
["enabled"] = true,
["criteria"] = "! used_for_danse & buff.shadow_blades.up",
["action"] = "shadowstrike",
["description"] = "Shadow Strike for Danse Macabre stack generation during Shadowblades.",
},
{
["enabled"] = true,
["criteria"] = "! buff.premeditation.up & spell_targets >= 4",
["action"] = "shuriken_storm",
},
{
["action"] = "shadowstrike",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["criteria"] = "debuff.dispellable_enrage.up",
["action"] = "shiv",
["description"] = "Dispel Enrages with Shiv.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.slice_and_dice.up || spell_targets.shuriken_storm >= cp_max_spend",
["description"] = "Used to determine whether cooldowns wait for SnD based on targets.",
["var_name"] = "snd_condition",
},
{
["enabled"] = true,
["description"] = "Check CDs at first",
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shuriken_storm < cp_max_spend & buff.slice_and_dice.remains < gcd.max & fight_remains > 6 & combo_points >= 4",
["action"] = "slice_and_dice",
["description"] = "Apply Slice and Dice at 4+ CP if it expires within the next GCD or is not up",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run fully switches to the Stealthed Rotation (by doing so, it forces pooling if nothing is available).",
["strict"] = 1,
["criteria"] = "stealthed.all",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "20 + talent.vigor.rank * 25 + talent.thistle_tea.enabled * 20 + talent.shadowcraft.enabled * 20",
["description"] = "Used to define when to use stealth CDs or builders",
["var_name"] = "stealth_threshold",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy >= variable.stealth_threshold",
["var_name"] = "stealth_helper",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy.deficit <= variable.stealth_threshold",
["criteria"] = "! talent.vigor.enabled || talent.shadowcraft.enabled",
["var_name"] = "stealth_helper",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Consider using a Stealth CD when reaching the energy threshold",
["strict"] = 1,
["criteria"] = "variable.stealth_helper || talent.invigorating_shadowdust.enabled",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Finish at maximum or close to maximum combo point value or at 4+ against 4 targets (outside stealth)",
["criteria"] = "combo_points.deficit <= 1 || fight_remains <= 1 & effective_combo_points >= 3 || spell_targets.shuriken_storm >= 4 & effective_combo_points >= 4",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use a builder when reaching the energy threshold",
["criteria"] = "energy.deficit <= variable.stealth_threshold",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
["description"] = "Lowest priority in all of the APL because it causes a GCD",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["action"] = "stealth",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "slice_and_dice",
["criteria"] = "refreshable",
["precombat_seconds"] = "1",
},
},
["build"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets >= 2 + ( talent.gloomblade.enabled & buff.lingering_shadow.remains >= 6 || buff.perforated_veins.up )",
["action"] = "shuriken_storm",
["description"] = "Keep using Shuriken Storm for Lingering Shadows on high stacks.",
},
{
["action"] = "gloomblade",
["enabled"] = true,
},
{
["action"] = "backstab",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! equipped.witherbarks_branch || equipped.witherbarks_branch & cooldown.witherbarks_branch.remains <= 8 || equipped.bandolier_of_twisted_blades || talent.invigorating_shadowdust.enabled )",
["description"] = "Helper Variable for Flagellation for trinket synchronisation",
["var_name"] = "trinket_conditions",
},
{
["enabled"] = true,
["criteria"] = "! talent.secret_technique.enabled & combo_points >= 5",
["action"] = "cold_blood",
["description"] = "Cold Blood on 5 combo points when not playing Secret Technique",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & target.time_to_die >= 16 & ( buff.perforated_veins.up || ! talent.perforated_veins.enabled )",
["action"] = "sepsis",
},
{
["enabled"] = true,
["action"] = "flagellation",
["cycle_targets"] = 1,
["criteria"] = "variable.snd_condition & combo_points >= 5 & target.time_to_die > 10 & ( variable.trinket_conditions & cooldown.shadow_blades.remains <= 3 || fight_remains <= 28 || cooldown.shadow_blades.remains >= 14 & talent.invigorating_shadowdust.enabled & talent.shadow_dance.enabled ) & ( ! talent.invigorating_shadowdust.enabled || talent.sepsis.enabled || ! talent.shadow_dance.enabled || talent.invigorating_shadowdust.rank = 2 & spell_targets.shuriken_storm >= 2 || cooldown.symbols_of_death.remains <= 3 || buff.symbols_of_death.remains > 3 )",
["description"] = "Defines Flagellation use in a stacked manner with trinkets and Shadow Blades",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ( ! buff.the_rotten.up || ! set_bonus.tier30_2pc ) & buff.symbols_of_death.remains <= 3 & ( ! talent.flagellation.enabled || cooldown.flagellation.remains > 10 || buff.shadow_dance.remains >= 2 & talent.invigorating_shadowdust.enabled || cooldown.flagellation.up & combo_points >= 5 & ! talent.invigorating_shadowdust.enabled )",
["action"] = "symbols_of_death",
["description"] = "Align Symbols of Death to Flagellation.",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ( combo_points <= 1 || set_bonus.tier31_4pc ) & ( buff.flagellation_buff.up || buff.flagellation_persist.up || ! talent.flagellation.enabled )",
["action"] = "shadow_blades",
["description"] = "Align Shadow Blades to Flagellation.",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & combo_points.deficit >= 3",
["action"] = "echoing_reprimand",
["description"] = "ER during Shadow Dance.",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & buff.symbols_of_death.up & combo_points <= 2 & ! buff.premeditation.up & ( ! talent.flagellation.enabled || cooldown.flagellation.remains > 20 ) & spell_targets.shuriken_storm >= 3",
["action"] = "shuriken_tornado",
["description"] = "Shuriken Tornado with Symbols of Death on 3 and more targets",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & ! buff.shadow_dance.up & ! buff.flagellation_buff.up & ! buff.flagellation_persist.up & ! buff.shadow_blades.up & spell_targets.shuriken_storm <= 2 & ! raid_event.adds.up",
["action"] = "shuriken_tornado",
["description"] = "Shuriken Tornado only outside of cooldowns",
},
{
["enabled"] = true,
["criteria"] = "! buff.shadow_dance.up & fight_remains <= 8 + talent.subterfuge.enabled",
["action"] = "shadow_dance",
},
{
["enabled"] = true,
["criteria"] = "variable.snd_condition & combo_points.deficit >= 3 & ( ! cooldown.shadow_dance.up || talent.shadow_dance.enabled & buff.shadow_dance.up & ! talent.invigorating_shadowdust.enabled || spell_targets.shuriken_storm < 4 & ! talent.invigorating_shadowdust.enabled || talent.the_rotten.enabled || raid_event.adds.up )",
["action"] = "goremaws_bite",
["description"] = "Goremaws Bite during Shadow Dance if possible.",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & cooldown.thistle_tea.charges_fractional >= 2.5 & buff.shadow_dance.remains >= 4",
["action"] = "thistle_tea",
["description"] = "Thistle Tea during Shadow Dance when close to max stacks.",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & buff.shadow_dance.remains >= 4 & cooldown.secret_technique.remains <= 10",
["action"] = "thistle_tea",
["description"] = "Thistle Tea during Shadow Dance when Secret Techniques is up.",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( energy.deficit >= ( 100 ) || ! buff.thistle_tea.up & fight_remains <= ( 6 * cooldown.thistle_tea.charges ) ) & ( cooldown.symbols_of_death.remains >= 3 || buff.symbols_of_death.up ) & combo_points.deficit >= 2",
["action"] = "thistle_tea",
["description"] = "Thistle Tea for energy",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.react || fight_remains < 30 || buff.symbols_of_death.up & ( buff.shadow_blades.up || cooldown.shadow_blades.remains <= 10 )",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_blades.up || ! talent.shadow_blades.enabled & buff.symbols_of_death.up || fight_remains < 20",
["var_name"] = "racial_sync",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["name"] = "irideus_fragment",
["description"] = "Sync specific trinkets to Flagellation or Shadow Dance.",
["criteria"] = "( buff.cold_blood.up || ( ! talent.danse_macabre.enabled & buff.shadow_dance.up || buff.danse_macabre.stack >= 3 ) & ! talent.cold_blood.enabled ) || fight_remains < 10",
["action"] = "irideus_fragment",
},
{
["enabled"] = true,
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
["criteria"] = "( buff.cold_blood.up || ( ! talent.danse_macabre.enabled & buff.shadow_dance.up || buff.danse_macabre.stack >= 3 ) & ! talent.cold_blood.enabled ) || boss & fight_remains < 10",
},
{
["enabled"] = true,
["name"] = "witherbarks_branch",
["action"] = "witherbarks_branch",
["criteria"] = "buff.flagellation_buff.up & talent.invigorating_shadowdust.enabled || buff.shadow_blades.up || equipped.bandolier_of_twisted_blades & raid_event.adds.up",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "buff.shadow_dance.up & ( target.time_to_die >= 15 || equipped.ashes_of_the_embersoul )",
},
{
["enabled"] = true,
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
["criteria"] = "! stealthed.all & ( buff.deeper_daggers.up || ! talent.deeper_daggers.enabled ) & ( ! raid_event.adds.up || ! equipped.stormeaters_boon || cooldown.stormeaters_boon.remains > 20 )",
},
{
["enabled"] = true,
["name"] = "manic_grieftorch",
["action"] = "manic_grieftorch",
["criteria"] = "! buff.shadow_blades.up & ! buff.shadow_dance.up & ( ! cooldown.mirror_of_fractured_tomorrows.ready || ! equipped.mirror_of_fractured_tomorrows ) & ( ! cooldown.ashes_of_the_embersoul.ready || ! equipped.ashes_of_the_embersoul ) & ( ! cooldown.irideus_fragment.ready || ! equipped.irideus_fragment ) || fight_remains < 10",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & ( ! cooldown.mirror_of_fractured_tomorrows.ready || ! equipped.mirror_of_fractured_tomorrows ) & ( ! cooldown.ashes_of_the_embersoul.ready || ! equipped.ashes_of_the_embersoul ) || boss & fight_remains < 10",
["action"] = "use_items",
["description"] = "Default fallback for usable items: Use outside of Stealth/Shadow Dance.",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadow_dance.charges_fractional >= 0.75 + talent.shadow_dance.enabled",
["description"] = "Helper Variable for Shadow Dance.",
["var_name"] = "shd_threshold",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! buff.the_rotten.up || ! set_bonus.tier30_2pc ) & ( ! talent.cold_blood.enabled || cooldown.cold_blood.remains < 4 || cooldown.cold_blood.remains > 10 )",
["description"] = "Helper variable to check for Cold Blood and The Rotten buff.",
["var_name"] = "rotten_cb",
},
{
["enabled"] = true,
["criteria"] = "( combo_points.deficit > 1 || buff.shadow_blades.up & talent.invigorating_shadowdust.enabled ) & ! variable.shd_threshold & ( cooldown.flagellation.remains >= 60 || ! talent.flagellation.enabled || fight_remains <= ( 30 * cooldown.vanish.charges ) ) & ( cooldown.symbols_of_death.remains > 3 || ! set_bonus.tier30_2pc ) & ( cooldown.secret_technique.remains >= 10 || ! talent.secret_technique.enabled || cooldown.vanish.charges >= 2 & talent.invigorating_shadowdust.enabled & ( buff.the_rotten.up || ! talent.the_rotten.enabled ) & ! raid_event.adds.up )",
["action"] = "vanish",
["description"] = "Consider Flagellation, Symbols and Secret Technique cooldown when using Vanish with Shadow Dust.",
},
{
["enabled"] = true,
["for_next"] = 1,
["description"] = "Pool for Shadowmeld unless we are about to cap on Dance charges.",
["criteria"] = "race.night_elf",
["extra_amount"] = "40",
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "energy >= 40 & energy.deficit >= 10 & ! variable.shd_threshold & combo_points.deficit > 4",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points.deficit >= 3",
["var_name"] = "shd_combo_points",
},
{
["enabled"] = true,
["criteria"] = "( dot.rupture.ticking || talent.invigorating_shadowdust.enabled ) & variable.rotten_cb & ( ! talent.the_first_dance.enabled || combo_points.deficit >= 4 || buff.shadow_blades.up ) & ( variable.shd_combo_points & variable.shd_threshold || ( buff.shadow_blades.up || cooldown.symbols_of_death.up & ! talent.sepsis.enabled || buff.symbols_of_death.remains >= 4 & ! set_bonus.tier30_2pc || ! buff.symbols_of_death.remains & set_bonus.tier30_2pc ) & cooldown.secret_technique.remains < 10 + 12 * ( ! talent.invigorating_shadowdust.enabled || set_bonus.tier30_2pc ) )",
["action"] = "shadow_dance",
["description"] = "Shadow dance when Rupture is up and synchronize depending on talent choice.",
},
},
["finish"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( action.gloomblade.used_for_danse || action.shadowstrike.used_for_danse || action.backstab.used_for_danse || action.shuriken_storm.used_for_danse ) & ( action.eviscerate.used_for_danse || action.black_powder.used_for_danse || action.rupture.used_for_danse ) || ! talent.danse_macabre.enabled",
["description"] = "Defines what abilities need to be used for DM stacks before casting Secret Technique.",
["var_name"] = "secret_condition",
},
{
["enabled"] = true,
["criteria"] = "! dot.rupture.ticking & target.time_to_die - remains > 6",
["action"] = "rupture",
["description"] = "Apply Rupture if its not up.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.premeditation.enabled & spell_targets.shuriken_storm < 5",
["var_name"] = "premed_snd_condition",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & ! variable.premed_snd_condition & spell_targets.shuriken_storm < 6 & ! buff.shadow_dance.up & buff.slice_and_dice.remains < fight_remains & refreshable",
["action"] = "slice_and_dice",
["description"] = "Refresh Slice and Dice outside of Shadow Dance.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.thistle_tea.up & spell_targets.shuriken_storm = 1 || buff.shadow_dance.up & ( spell_targets.shuriken_storm = 1 || dot.rupture.ticking & spell_targets.shuriken_storm >= 2 )",
["description"] = "Variable to decide when not to use Rupture.",
["var_name"] = "skip_rupture",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.skip_rupture || priority_rotation ) & target.time_to_die - remains > 6 & refreshable",
["action"] = "rupture",
},
{
["enabled"] = true,
["criteria"] = "buff.finality_rupture.up & buff.shadow_dance.up & spell_targets.shuriken_storm <= 4 & ! action.rupture.used_for_danse",
["action"] = "rupture",
["description"] = "Refresh Rupture during Shadow Dance with Finality.",
},
{
["enabled"] = true,
["criteria"] = "( ( action.shadowstrike.used_for_danse || action.shuriken_storm.used_for_danse ) & ( action.eviscerate.used_for_danse || action.black_powder.used_for_danse || action.rupture.used_for_danse ) || ! talent.danse_macabre.enabled ) & cooldown.secret_technique.ready",
["action"] = "cold_blood",
},
{
["enabled"] = true,
["criteria"] = "( ( action.shadowstrike.used_for_danse || action.shuriken_storm.used_for_danse ) & ( action.eviscerate.used_for_danse || action.black_powder.used_for_danse || action.rupture.used_for_danse ) || ! talent.danse_macabre.enabled ) & ( ! talent.cold_blood.enabled || cooldown.cold_blood.remains > buff.shadow_dance.remains - 2 || ! talent.improved_shadow_dance.enabled )",
["action"] = "secret_technique",
["description"] = "Synchronizes Secret to Cold Blood if possible. Defaults to use once a builder and finisher is used.",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["criteria"] = "! variable.skip_rupture & ! priority_rotation & spell_targets.shuriken_storm >= 2 & target.time_to_die >= ( 2 * combo_points ) & refreshable",
["description"] = "Multidotting targets that will live long enough, refresh during pandemic.",
},
{
["enabled"] = true,
["criteria"] = "! variable.skip_rupture & remains < cooldown.symbols_of_death.remains + 10 & cooldown.symbols_of_death.remains <= 5 & target.time_to_die - remains > cooldown.symbols_of_death.remains + 5",
["action"] = "rupture",
["description"] = "Refresh Rupture early if it will expire during Symbols. Do that refresh if SoD gets ready in the next 5s.",
},
{
["enabled"] = true,
["criteria"] = "! priority_rotation & spell_targets >= 3",
["action"] = "black_powder",
},
{
["action"] = "eviscerate",
["enabled"] = true,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 2: Converted 'talent.deeper_stratagem' to 'talent.deeper_stratagem.enabled' (1x).\nLine 2: Converted 'talent.secret_stratagem' to 'talent.secret_stratagem.enabled' (1x).\nLine 3: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 4: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 8: Converted 'talent.thistle_tea' to 'talent.thistle_tea.enabled' (1x).\nLine 8: Converted 'talent.shadowcraft' to 'talent.shadowcraft.enabled' (1x).\nLine 10: Converted 'talent.vigor' to 'talent.vigor.enabled' (1x).\nLine 10: Converted 'talent.shadowcraft' to 'talent.shadowcraft.enabled' (1x).\nLine 11: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\n\nThe import for 'finish' required some automated changes.\nLine 1: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 8: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 9: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 9: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 9: Converted 'talent.improved_shadow_dance' to 'talent.improved_shadow_dance.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'trinket.witherbarks_branch.cooldown.remains' to 'cooldown.witherbarks_branch.remains'.\nLine 1: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 2: Converted 'talent.secret_technique' to 'talent.secret_technique.enabled' (1x).\nLine 3: Converted 'talent.perforated_veins' to 'talent.perforated_veins.enabled' (1x).\nLine 4: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 4: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 4: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 4: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\nLine 4: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 5: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 5: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 5: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 6: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 8: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 11: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 11: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 11: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 11: Converted 'talent.the_rotten' to 'talent.the_rotten.enabled' (1x).\nLine 16: Converted 'talent.shadow_blades' to 'talent.shadow_blades.enabled' (1x).\nLine 21: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 21: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 22: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 22: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 23: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 25: Converted 'talent.deeper_daggers' to 'talent.deeper_daggers.enabled' (1x).\nLine 25: Converted 'trinket.stormeaters_boon.cooldown.remains' to 'cooldown.stormeaters_boon.remains'.\nLine 26: Converted 'trinket.mirror_of_fractured_tomorrows.cooldown.ready' to 'cooldown.mirror_of_fractured_tomorrows.ready'.\nLine 26: Converted 'trinket.ashes_of_the_embersoul.cooldown.ready' to 'cooldown.ashes_of_the_embersoul.ready'.\nLine 26: Converted 'trinket.irideus_fragment.cooldown.ready' to 'cooldown.irideus_fragment.ready'.\nLine 27: Converted 'trinket.mirror_of_fractured_tomorrows.cooldown.ready' to 'cooldown.mirror_of_fractured_tomorrows.ready'.\nLine 27: Converted 'trinket.ashes_of_the_embersoul.cooldown.ready' to 'cooldown.ashes_of_the_embersoul.ready'.\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.shadow_dance' to 'talent.shadow_dance.enabled' (1x).\nLine 2: Converted 'talent.cold_blood' to 'talent.cold_blood.enabled' (1x).\nLine 3: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 3: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 3: Converted 'talent.secret_technique' to 'talent.secret_technique.enabled' (1x).\nLine 3: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 3: Converted 'talent.the_rotten' to 'talent.the_rotten.enabled' (1x).\nLine 7: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\nLine 7: Converted 'talent.the_first_dance' to 'talent.the_first_dance.enabled' (1x).\nLine 7: Converted 'talent.sepsis' to 'talent.sepsis.enabled' (1x).\nLine 7: Converted 'talent.invigorating_shadowdust' to 'talent.invigorating_shadowdust.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 1: Converted 'talent.gloomblade' to 'talent.gloomblade.enabled' (1x).\n\nImported 7 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/apply_poison\nactions.precombat+=/stealth\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Dispel Enrages with Shiv.\nactions+=/shiv,if=debuff.dispellable_enrage.up\n# Used to determine whether cooldowns wait for SnD based on targets.\nactions+=/variable,name=snd_condition,value=buff.slice_and_dice.up||spell_targets.shuriken_storm>=cp_max_spend\n# Check CDs at first\nactions+=/call_action_list,name=cds\n# Apply Slice and Dice at 4+ CP if it expires within the next GCD or is not up\nactions+=/slice_and_dice,if=spell_targets.shuriken_storm<cp_max_spend&buff.slice_and_dice.remains<gcd.max&fight_remains>6&combo_points>=4\n# Run fully switches to the Stealthed Rotation (by doing so, it forces pooling if nothing is available).\nactions+=/run_action_list,name=stealthed,strict=1,if=stealthed.all\n## Only change rotation if we have priority_rotation set.\n## actions+=/variable,name=priority_rotation,value=priority_rotation\n# Used to define when to use stealth CDs or builders\nactions+=/variable,name=stealth_threshold,value=20+talent.vigor.rank*25+talent.thistle_tea*20+talent.shadowcraft*20\nactions+=/variable,name=stealth_helper,value=energy>=variable.stealth_threshold\nactions+=/variable,name=stealth_helper,value=energy.deficit<=variable.stealth_threshold,if=!talent.vigor||talent.shadowcraft\n# Consider using a Stealth CD when reaching the energy threshold\nactions+=/call_action_list,name=stealth_cds,strict=1,if=variable.stealth_helper||talent.invigorating_shadowdust\n# Finish at maximum or close to maximum combo point value or at 4+ against 4 targets (outside stealth)\nactions+=/call_action_list,name=finish,if=combo_points.deficit<=1||fight_remains<=1&effective_combo_points>=3||spell_targets.shuriken_storm>=4&effective_combo_points>=4\n# Use a builder when reaching the energy threshold\nactions+=/call_action_list,name=build,if=energy.deficit<=variable.stealth_threshold\n# Lowest priority in all of the APL because it causes a GCD\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n## Builders\n# Keep using Shuriken Storm for Lingering Shadows on high stacks.\nactions.build+=/shuriken_storm,if=spell_targets>=2+(talent.gloomblade&buff.lingering_shadow.remains>=6||buff.perforated_veins.up)\nactions.build+=/gloomblade\nactions.build+=/backstab\n\n## Cooldowns\n# Helper Variable for Flagellation for trinket synchronisation\nactions.cds+=/variable,name=trinket_conditions,value=(!equipped.witherbarks_branch||equipped.witherbarks_branch&trinket.witherbarks_branch.cooldown.remains<=8||equipped.bandolier_of_twisted_blades||talent.invigorating_shadowdust)\n# Cold Blood on 5 combo points when not playing Secret Technique\nactions.cds+=/cold_blood,if=!talent.secret_technique&combo_points>=5\nactions.cds+=/sepsis,if=variable.snd_condition&target.time_to_die>=16&(buff.perforated_veins.up||!talent.perforated_veins)\n# Defines Flagellation use in a stacked manner with trinkets and Shadow Blades\nactions.cds+=/flagellation,cycle_targets=1,if=variable.snd_condition&combo_points>=5&target.time_to_die>10&(variable.trinket_conditions&cooldown.shadow_blades.remains<=3||fight_remains<=28||cooldown.shadow_blades.remains>=14&talent.invigorating_shadowdust&talent.shadow_dance)&(!talent.invigorating_shadowdust||talent.sepsis||!talent.shadow_dance||talent.invigorating_shadowdust.rank=2&spell_targets.shuriken_storm>=2||cooldown.symbols_of_death.remains<=3||buff.symbols_of_death.remains>3)\n# Align Symbols of Death to Flagellation.\nactions.cds+=/symbols_of_death,if=variable.snd_condition&(!buff.the_rotten.up||!set_bonus.tier30_2pc)&buff.symbols_of_death.remains<=3&(!talent.flagellation||cooldown.flagellation.remains>10||buff.shadow_dance.remains>=2&talent.invigorating_shadowdust||cooldown.flagellation.up&combo_points>=5&!talent.invigorating_shadowdust)\n# Align Shadow Blades to Flagellation.\nactions.cds+=/shadow_blades,if=variable.snd_condition&(combo_points<=1||set_bonus.tier31_4pc)&(buff.flagellation_buff.up||buff.flagellation_persist.up||!talent.flagellation)\n# ER during Shadow Dance.\nactions.cds+=/echoing_reprimand,if=variable.snd_condition&combo_points.deficit>=3\n# Shuriken Tornado with Symbols of Death on 3 and more targets\nactions.cds+=/shuriken_tornado,if=variable.snd_condition&buff.symbols_of_death.up&combo_points<=2&!buff.premeditation.up&(!talent.flagellation||cooldown.flagellation.remains>20)&spell_targets.shuriken_storm>=3\n# Shuriken Tornado only outside of cooldowns\nactions.cds+=/shuriken_tornado,if=variable.snd_condition&!buff.shadow_dance.up&!buff.flagellation_buff.up&!buff.flagellation_persist.up&!buff.shadow_blades.up&spell_targets.shuriken_storm<=2&!raid_event.adds.up\nactions.cds+=/shadow_dance,if=!buff.shadow_dance.up&fight_remains<=8+talent.subterfuge.enabled\n# Goremaws Bite during Shadow Dance if possible.\nactions.cds+=/goremaws_bite,if=variable.snd_condition&combo_points.deficit>=3&(!cooldown.shadow_dance.up||talent.shadow_dance&buff.shadow_dance.up&!talent.invigorating_shadowdust||spell_targets.shuriken_storm<4&!talent.invigorating_shadowdust||talent.the_rotten||raid_event.adds.up)\n# Thistle Tea during Shadow Dance when close to max stacks.\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&cooldown.thistle_tea.charges_fractional>=2.5&buff.shadow_dance.remains>=4\n# Thistle Tea during Shadow Dance when Secret Techniques is up.\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&buff.shadow_dance.remains>=4&cooldown.secret_technique.remains<=10\n# Thistle Tea for energy\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.deficit>=(100)||!buff.thistle_tea.up&fight_remains<=(6*cooldown.thistle_tea.charges))&(cooldown.symbols_of_death.remains>=3||buff.symbols_of_death.up)&combo_points.deficit>=2\nactions.cds+=/potion,if=buff.bloodlust.react||fight_remains<30||buff.symbols_of_death.up&(buff.shadow_blades.up||cooldown.shadow_blades.remains<=10)\nactions.cds+=/variable,name=racial_sync,value=buff.shadow_blades.up||!talent.shadow_blades&buff.symbols_of_death.up||fight_remains<20\nactions.cds+=/blood_fury,if=variable.racial_sync\nactions.cds+=/berserking,if=variable.racial_sync\nactions.cds+=/fireblood,if=variable.racial_sync\nactions.cds+=/ancestral_call,if=variable.racial_sync\n# Sync specific trinkets to Flagellation or Shadow Dance.\nactions.cds+=/use_item,name=irideus_fragment,if=(buff.cold_blood.up||(!talent.danse_macabre&buff.shadow_dance.up||buff.danse_macabre.stack>=3)&!talent.cold_blood)||fight_remains<10\nactions.cds+=/use_item,name=ashes_of_the_embersoul,if=(buff.cold_blood.up||(!talent.danse_macabre&buff.shadow_dance.up||buff.danse_macabre.stack>=3)&!talent.cold_blood)||boss&fight_remains<10\nactions.cds+=/use_item,name=witherbarks_branch,if=buff.flagellation_buff.up&talent.invigorating_shadowdust||buff.shadow_blades.up||equipped.bandolier_of_twisted_blades&raid_event.adds.up\nactions.cds+=/use_item,name=mirror_of_fractured_tomorrows,if=buff.shadow_dance.up&(target.time_to_die>=15||equipped.ashes_of_the_embersoul)\nactions.cds+=/use_item,name=beacon_to_the_beyond,if=!stealthed.all&(buff.deeper_daggers.up||!talent.deeper_daggers)&(!raid_event.adds.up||!equipped.stormeaters_boon||trinket.stormeaters_boon.cooldown.remains>20)\nactions.cds+=/use_item,name=manic_grieftorch,if=!buff.shadow_blades.up&!buff.shadow_dance.up&(!trinket.mirror_of_fractured_tomorrows.cooldown.ready||!equipped.mirror_of_fractured_tomorrows)&(!trinket.ashes_of_the_embersoul.cooldown.ready||!equipped.ashes_of_the_embersoul)&(!trinket.irideus_fragment.cooldown.ready||!equipped.irideus_fragment)||fight_remains<10\n### PI\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.shadow_dance.up\n# Default fallback for usable items: Use outside of Stealth/Shadow Dance.\nactions.cds+=/use_items,if=!stealthed.all&(!trinket.mirror_of_fractured_tomorrows.cooldown.ready||!equipped.mirror_of_fractured_tomorrows)&(!trinket.ashes_of_the_embersoul.cooldown.ready||!equipped.ashes_of_the_embersoul)||boss&fight_remains<10\n\n## Finisher\n# Defines what abilities need to be used for DM stacks before casting Secret Technique.\nactions.finish+=/variable,name=secret_condition,value=(action.gloomblade.used_for_danse||action.shadowstrike.used_for_danse||action.backstab.used_for_danse||action.shuriken_storm.used_for_danse)&(action.eviscerate.used_for_danse||action.black_powder.used_for_danse||action.rupture.used_for_danse)||!talent.danse_macabre\n# Apply Rupture if its not up.\nactions.finish+=/rupture,if=!dot.rupture.ticking&target.time_to_die-remains>6\nactions.finish+=/variable,name=premed_snd_condition,value=talent.premeditation.enabled&spell_targets.shuriken_storm<5\n# Refresh Slice and Dice outside of Shadow Dance.\nactions.finish+=/slice_and_dice,if=!stealthed.all&!variable.premed_snd_condition&spell_targets.shuriken_storm<6&!buff.shadow_dance.up&buff.slice_and_dice.remains<fight_remains&refreshable\n# Variable to decide when not to use Rupture.\nactions.finish+=/variable,name=skip_rupture,value=buff.thistle_tea.up&spell_targets.shuriken_storm=1||buff.shadow_dance.up&(spell_targets.shuriken_storm=1||dot.rupture.ticking&spell_targets.shuriken_storm>=2)\nactions.finish+=/rupture,if=(!variable.skip_rupture||priority_rotation)&target.time_to_die-remains>6&refreshable\n# Refresh Rupture during Shadow Dance with Finality.\nactions.finish+=/rupture,if=buff.finality_rupture.up&buff.shadow_dance.up&spell_targets.shuriken_storm<=4&!action.rupture.used_for_danse\nactions.finish+=/cold_blood,if=((action.shadowstrike.used_for_danse||action.shuriken_storm.used_for_danse)&(action.eviscerate.used_for_danse||action.black_powder.used_for_danse||action.rupture.used_for_danse)||!talent.danse_macabre)&cooldown.secret_technique.ready\n# Synchronizes Secret to Cold Blood if possible. Defaults to use once a builder and finisher is used.\nactions.finish+=/secret_technique,if=((action.shadowstrike.used_for_danse||action.shuriken_storm.used_for_danse)&(action.eviscerate.used_for_danse||action.black_powder.used_for_danse||action.rupture.used_for_danse)||!talent.danse_macabre)&(!talent.cold_blood||cooldown.cold_blood.remains>buff.shadow_dance.remains-2||!talent.improved_shadow_dance)\n# Multidotting targets that will live long enough, refresh during pandemic.\nactions.finish+=/rupture,cycle_targets=1,if=!variable.skip_rupture&!priority_rotation&spell_targets.shuriken_storm>=2&target.time_to_die>=(2*combo_points)&refreshable\n# Refresh Rupture early if it will expire during Symbols. Do that refresh if SoD gets ready in the next 5s.\nactions.finish+=/rupture,if=!variable.skip_rupture&remains<cooldown.symbols_of_death.remains+10&cooldown.symbols_of_death.remains<=5&target.time_to_die-remains>cooldown.symbols_of_death.remains+5\nactions.finish+=/black_powder,if=!priority_rotation&spell_targets>=3\nactions.finish+=/eviscerate\n\n## Stealth Cooldowns\n# Helper Variable for Shadow Dance.\nactions.stealth_cds+=/variable,name=shd_threshold,value=cooldown.shadow_dance.charges_fractional>=0.75+talent.shadow_dance\n# Helper variable to check for Cold Blood and The Rotten buff.\nactions.stealth_cds+=/variable,name=rotten_cb,value=(!buff.the_rotten.up||!set_bonus.tier30_2pc)&(!talent.cold_blood||cooldown.cold_blood.remains<4||cooldown.cold_blood.remains>10)\n# Consider Flagellation, Symbols and Secret Technique cooldown when using Vanish with Shadow Dust.\nactions.stealth_cds+=/vanish,if=(combo_points.deficit>1||buff.shadow_blades.up&talent.invigorating_shadowdust)&!variable.shd_threshold&(cooldown.flagellation.remains>=60||!talent.flagellation||fight_remains<=(30*cooldown.vanish.charges))&(cooldown.symbols_of_death.remains>3||!set_bonus.tier30_2pc)&(cooldown.secret_technique.remains>=10||!talent.secret_technique||cooldown.vanish.charges>=2&talent.invigorating_shadowdust&(buff.the_rotten.up||!talent.the_rotten)&!raid_event.adds.up)\n# Pool for Shadowmeld unless we are about to cap on Dance charges.\nactions.stealth_cds+=/pool_resource,for_next=1,extra_amount=40,if=race.night_elf\nactions.stealth_cds+=/shadowmeld,if=energy>=40&energy.deficit>=10&!variable.shd_threshold&combo_points.deficit>4\nactions.stealth_cds+=/variable,name=shd_combo_points,value=combo_points.deficit>=3\n# Shadow dance when Rupture is up and synchronize depending on talent choice.\nactions.stealth_cds+=/shadow_dance,if=(dot.rupture.ticking||talent.invigorating_shadowdust)&variable.rotten_cb&(!talent.the_first_dance||combo_points.deficit>=4||buff.shadow_blades.up)&(variable.shd_combo_points&variable.shd_threshold||(buff.shadow_blades.up||cooldown.symbols_of_death.up&!talent.sepsis||buff.symbols_of_death.remains>=4&!set_bonus.tier30_2pc||!buff.symbols_of_death.remains&set_bonus.tier30_2pc)&cooldown.secret_technique.remains<10+12*(!talent.invigorating_shadowdust||set_bonus.tier30_2pc))\n\n## Stealthed Rotation\n# Always Strike froM Stealth\nactions.stealthed+=/shadowstrike,if=buff.stealth.up&(spell_targets.shuriken_storm<4||priority_rotation)\n# Finish when on Animacharged combo points or max combo points.\nactions.stealthed+=/call_action_list,name=finish,if=effective_combo_points>=cp_max_spend||buff.shuriken_tornado.up&combo_points.deficit<=2||combo_points.deficit<=1+(talent.deeper_stratagem||talent.secret_stratagem)\n# Backstab for Danse Macabre stack generation during Shadowblades.\nactions.stealthed+=/backstab,if=!buff.premeditation.up&buff.shadow_dance.remains>=3&buff.shadow_blades.up&!used_for_danse&talent.danse_macabre&spell_targets.shuriken_storm<=3&!buff.the_rotten.up\n# Gloomblade for Danse Macabre stack generation during Shadowblades.\nactions.stealthed+=/gloomblade,if=!buff.premeditation.up&buff.shadow_dance.remains>=3&buff.shadow_blades.up&!used_for_danse&talent.danse_macabre&spell_targets.shuriken_storm<=4\n# Shadow Strike for Danse Macabre stack generation during Shadowblades.\nactions.stealthed+=/shadowstrike,if=!used_for_danse&buff.shadow_blades.up\nactions.stealthed+=/shuriken_storm,if=!buff.premeditation.up&spell_targets>=4\nactions.stealthed+=/shadowstrike",
},
["Preservation"] = {
["builtIn"] = true,
["date"] = 20231119,
["spec"] = 1468,
["lists"] = {
["default"] = {
{
["action"] = "quell",
["enabled"] = true,
},
{
["action"] = "cauterizing_flame",
["enabled"] = true,
},
{
["action"] = "unravel",
["enabled"] = true,
},
{
["action"] = "deep_breath",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 14 + cast_time",
["action"] = "fire_breath",
["empower_to"] = "1",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 8 + cast_time",
["action"] = "fire_breath",
["empower_to"] = "2",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 2 + cast_time",
["action"] = "fire_breath",
["empower_to"] = "3",
},
{
["enabled"] = true,
["criteria"] = "empowering.fire_breath || fight_remains > cast_time",
["action"] = "fire_breath",
["empower_to"] = "4",
},
{
["enabled"] = true,
["criteria"] = "moving & buff.hover.down & settings.use_hover",
["action"] = "hover",
},
{
["enabled"] = true,
["criteria"] = "buff.essence_burst.up & ( ! moving || buff.hover.remains > cast_time ) || essence.time_to_max < cast_time & settings.spend_essence",
["action"] = "disintegrate",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2",
["action"] = "azure_strike",
},
{
["enabled"] = true,
["criteria"] = "! moving || buff.hover.remains > cast_time",
["action"] = "living_flame",
},
{
["enabled"] = true,
["criteria"] = "moving & buff.hover.down",
["action"] = "azure_strike",
},
},
["precombat"] = {
{
["action"] = "blessing_of_the_bronze",
["enabled"] = true,
},
},
},
["version"] = 20231119,
["warnings"] = "Imported 2 action lists.\n",
["profile"] = "actions.precombat+=/blessing_of_the_bronze\n\nactions+=/quell\nactions+=/cauterizing_flame\nactions+=/unravel\nactions+=/deep_breath\nactions+=/potion\nactions+=/use_items\nactions+=/fire_breath,empower_to=1,if=fight_remains>14+cast_time\nactions+=/fire_breath,empower_to=2,if=fight_remains>8+cast_time\nactions+=/fire_breath,empower_to=3,if=fight_remains>2+cast_time\nactions+=/fire_breath,empower_to=4,if=empowering.fire_breath||fight_remains>cast_time\nactions+=/hover,if=moving&buff.hover.down&settings.use_hover\nactions+=/disintegrate,if=buff.essence_burst.up&(!moving||buff.hover.remains>cast_time)||essence.time_to_max<cast_time&settings.spend_essence\nactions+=/azure_strike,if=active_enemies>2\nactions+=/living_flame,if=!moving||buff.hover.remains>cast_time\nactions+=/azure_strike,if=moving&buff.hover.down",
["author"] = "Kahekili",
},
["Devastation"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/apl/apl_evoker.cpp",
["builtIn"] = true,
["date"] = 20231216,
["spec"] = 1467,
["desc"] = "2023-12-16: Fix missing FB in AOE.\n\n2023-11-29: Minor sim updates.\n\n2023-11-16: Usable item added.\n\n2023-11-07: Patch 10.2 update.\n\n2023-07-24: Adjust Spoils trinket logic.\n\n2023-06-26: Fix ES in single-target.\n\n2023-06-24: Adjust FB/ES and Disintegrate.\n\n2023-06-03: Change Verdant Embrace conditions; restore non-T30 FB/ES usage.\n\n2023-05-29: Minor updates from SimulationCraft.\n\n2023-05-28: Ensure FB/ES can finish if target is about to die.  (Simplified.)\n\n2023-05-14: Revise '==' to '=' for consistency.\n\n2023-05-12: Incremental SimC update (drops 'st_opener' priority).\n\n2023-05-08: Substantial changes to SimC once again.\n\n2023-05-04:  Incremental SimC updates (Shattering Star, Fire Breath, Eternity Surge, Pyre, Living Flame).\n\n2023-04-30:  Updated from SimC for 10.1.\n\n2023-04-05:  Update from SimC cleaning up AOE priority a bit.\n\n2023-03-08:  Routine update from SimulationCraft refining Pyre usage at different target counts and stacks of Charged Blast.\n\n2023-02-14:  Added Dragonrage Animosity Padding (dr_padding) setting.",
["lists"] = {
["es"] = {
{
["enabled"] = true,
["action"] = "eternity_surge",
["empower_to"] = "1",
["description"] = "Eternity Surge, use rank most applicable to targets.",
["criteria"] = "active_enemies <= 1 + talent.eternitys_span.enabled || buff.dragonrage.remains < 1.75 * spell_haste & buff.dragonrage.remains >= 1 * spell_haste || buff.dragonrage.up & ( active_enemies = 5 || ! talent.eternitys_span.enabled & active_enemies >= 6 || talent.eternitys_span.enabled & active_enemies >= 8 )",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2 + 2 * talent.eternitys_span.enabled || buff.dragonrage.remains < 2.5 * spell_haste & buff.dragonrage.remains >= 1.75 * spell_haste",
["action"] = "eternity_surge",
["empower_to"] = "2",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 3 + 3 * talent.eternitys_span.enabled || ! talent.font_of_magic.enabled || buff.dragonrage.remains <= 3.25 * spell_haste & buff.dragonrage.remains >= 2.5 * spell_haste",
["action"] = "eternity_surge",
["empower_to"] = "3",
},
{
["enabled"] = true,
["action"] = "eternity_surge",
["empower_to"] = "4",
},
},
["st"] = {
{
["enabled"] = true,
["name"] = "kharnalex_the_first_light",
["action"] = "kharnalex_the_first_light",
["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down & raid_event.movement.in > 6",
["description"] = "ST Action List, it's a mess, but it's getting better!",
},
{
["enabled"] = true,
["criteria"] = "raid_event.movement.in < 2 & ! buff.hover.up",
["use_off_gcd"] = 1,
["description"] = "Movement Logic, Time spiral logic might need some tweaking actions.st+=/time_spiral,if=raid_event.movement.in<3&cooldown.hover.remains>=3&!buff.hover.up",
["action"] = "hover",
},
{
["enabled"] = true,
["description"] = "Spend firestorm procs ASAP",
["criteria"] = "buff.snapfire.up",
["action"] = "firestorm",
},
{
["enabled"] = true,
["description"] = "Relaxed Dragonrage Entry Requirements, cannot reliably reach third extend under normal conditions (Bloodlust + Power Infusion/Very high haste gear)  DS optimization: Only cast if current fight will last 32s+ or encounter ends in less than 30s",
["criteria"] = "cooldown.fire_breath.remains < 4 & cooldown.eternity_surge.remains < 10 & target.time_to_die >= 32 || boss & fight_remains < 30",
["action"] = "dragonrage",
},
{
["enabled"] = true,
["description"] = "Tip second FB if not playing font of magic or if playing EBF, otherwise tip ES.",
["criteria"] = "buff.dragonrage.up & ( ( ( ! talent.font_of_magic.enabled || talent.everburning_flame.enabled ) & cooldown.fire_breath.remains < cooldown.eternity_surge.remains & buff.dragonrage.remains < 14 ) || ( cooldown.eternity_surge.remains < cooldown.fire_breath.remains & ! talent.everburning_flame.enabled & talent.font_of_magic.enabled ) )",
["action"] = "tip_the_scales",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Fire breath logic  Play around power swell if you don't have pi or lust up. Play around blazing shards if outside of DR.  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s",
["criteria"] = "( ! talent.dragonrage.enabled || variable.next_dragonrage > variable.dr_prep_time_st || ! talent.animosity.enabled ) & ( ( buff.power_swell.remains < variable.r1_cast_time || buff.bloodlust.up || buff.power_infusion.up || buff.dragonrage.up ) & ( buff.blazing_shards.remains < variable.r1_cast_time || buff.dragonrage.up ) ) & ( ! cooldown.eternity_surge.up || ! talent.event_horizon.enabled || ! buff.dragonrage.up ) & ( target.time_to_die >= 8 || boss & fight_remains < 30 )",
["list_name"] = "fb",
},
{
["enabled"] = true,
["description"] = "Use Disintegrate after FB opener in DR.",
["criteria"] = "buff.dragonrage.remains > 19 & cooldown.fire_breath.remains > 28 & talent.eye_of_infinity.enabled & set_bonus.tier30_2pc",
["action"] = "disintegrate",
},
{
["enabled"] = true,
["description"] = "Throw Star on CD, Don't overcap with Arcane Vigor.",
["criteria"] = "( buff.essence_burst.stack < buff.essence_burst.max_stack || ! talent.arcane_vigor.enabled ) & ( ! cooldown.fire_breath.up || ! talent.event_horizon.enabled )",
["action"] = "shattering_star",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Eternity Surge logic  Play around power swell if you don't have pi or lust up. Play around blazing shards if outside of DR.  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s",
["criteria"] = "( ! talent.dragonrage.enabled || variable.next_dragonrage > variable.dr_prep_time_st || ! talent.animosity.enabled ) & ( ( buff.power_swell.remains < variable.r1_cast_time || buff.bloodlust.up || buff.power_infusion.up ) & ( buff.blazing_shards.remains < variable.r1_cast_time || buff.dragonrage.up ) ) & ( target.time_to_die >= 8 || boss & fight_remains < 30 )",
["list_name"] = "es",
},
{
["enabled"] = true,
["action"] = "wait",
["sec"] = "cooldown.fire_breath.remains",
["criteria"] = "talent.animosity.enabled & buff.dragonrage.up & buff.dragonrage.remains < gcd.max + variable.r1_cast_time * buff.tip_the_scales.down & buff.dragonrage.remains - cooldown.fire_breath.remains >= variable.r1_cast_time * buff.tip_the_scales.down",
["description"] = "Wait for FB/ES to be ready if spending another GCD would result in the cast no longer fitting inside of DR",
},
{
["enabled"] = true,
["sec"] = "cooldown.eternity_surge.remains",
["action"] = "wait",
["criteria"] = "talent.animosity.enabled & buff.dragonrage.up & buff.dragonrage.remains < gcd.max + variable.r1_cast_time & buff.dragonrage.remains - cooldown.eternity_surge.remains > variable.r1_cast_time * buff.tip_the_scales.down",
},
{
["enabled"] = true,
["description"] = "Spend the last 1 or 2 GCDs of DR on fillers to exit with 2 EBs",
["criteria"] = "buff.dragonrage.up & buff.dragonrage.remains < ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max & buff.burnout.up",
["action"] = "living_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.dragonrage.up & buff.dragonrage.remains < ( buff.essence_burst.max_stack - buff.essence_burst.stack ) * gcd.max",
["action"] = "azure_strike",
},
{
["enabled"] = true,
["description"] = "Spend burnout procs without overcapping resources",
["criteria"] = "buff.burnout.up & ( buff.leaping_flames.up & ! buff.essence_burst.up || ! buff.leaping_flames.up & buff.essence_burst.stack < buff.essence_burst.max_stack ) & essence.deficit >= 2",
["action"] = "living_flame",
},
{
["enabled"] = true,
["description"] = "Spend pyre if raging inferno debuff is active and you have 20 stacks of CB on 2T",
["criteria"] = "debuff.in_firestorm.up & talent.raging_inferno.enabled & buff.charged_blast.stack = 20 & active_enemies >= 2",
["action"] = "pyre",
},
{
["enabled"] = true,
["chain"] = "1",
["action"] = "disintegrate",
["interrupt_if"] = "evoker.use_clipping&buff.dragonrage.up&ticks>=2&(!(buff.power_infusion.up&buff.bloodlust.up)||cooldown.fire_breath.up||cooldown.eternity_surge.up)&(raid_event.movement.in>2||buff.hover.up)",
["early_chain_if"] = "evoker.use_early_chaining&ticks>=2&essence.deficit<2&(raid_event.movement.in>2||buff.hover.up)",
["criteria"] = "raid_event.movement.in > 2 || buff.hover.up",
["description"] = "Dis logic Early Chain if needed for ressources management. Clip after in DR after third tick for more important buttions, atm that is: empowers, burnout & SS. burnout and SS you only clip for if both lust & pi isn't up.",
},
{
["enabled"] = true,
["description"] = "Hard cast only outside of SS and DR windows",
["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down",
["action"] = "firestorm",
},
{
["enabled"] = true,
["description"] = "Use Deep Breath on 2T, unless adds will come before it'll be ready again or if talented ID.",
["criteria"] = "! buff.dragonrage.up & active_enemies >= 2 & ( ( raid_event.adds.in >= 120 & ! talent.onyx_legacy.enabled ) || ( raid_event.adds.in >= 60 & talent.onyx_legacy.enabled ) )",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["criteria"] = "! buff.dragonrage.up & talent.imminent_destruction.enabled & ! debuff.shattering_star_debuff.up",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Get Ancient Flame as Filler",
["criteria"] = "talent.ancient_flame.enabled & ! buff.ancient_flame.up & ! buff.shattering_star_debuff.up & talent.scarlet_adaptation.enabled & ! buff.dragonrage.up",
["list_name"] = "green",
},
{
["enabled"] = true,
["description"] = "Cast LF outside of DR, In DR only cast with Iridescence.",
["criteria"] = "! buff.dragonrage.up || ( buff.iridescence_red.remains > execute_time || buff.iridescence_blue.up ) & active_enemies = 1",
["action"] = "living_flame",
},
{
["enabled"] = true,
["description"] = "Fallback for movement",
["action"] = "azure_strike",
},
},
["default"] = {
{
["action"] = "quell",
["enabled"] = true,
},
{
["action"] = "unravel",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Delay pot in ST if you are about to SS - mostly relevant for opener where you want DR->FB->SS->rotation",
["criteria"] = "buff.dragonrage.up & ( ! cooldown.shattering_star.up || active_enemies >= 2 ) || boss & fight_remains < 35",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.dragonrage.remains",
["var_name"] = "next_dragonrage",
["description"] = "Variable that evaluates when next dragonrage is by working out the maximum between the dragonrage cd and your empowers, ignoring CDR effect estimates.",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "cooldown.eternity_surge.remains - 2 * gcd.max",
["var_name"] = "next_dragonrage",
},
{
["enabled"] = true,
["op"] = "max",
["action"] = "variable",
["value"] = "cooldown.fire_breath.remains - gcd.max",
["var_name"] = "next_dragonrage",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "If we're already empowering a Fire Breath cast, check its empowerment level.",
["strict"] = 1,
["criteria"] = "empowering.fire_breath",
["list_name"] = "fb",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "If we're already empowering an Eternity Surge cast, check its empowerment level.",
["strict"] = 1,
["criteria"] = "empowering.eternity_surge",
["list_name"] = "es",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "st",
},
},
["green"] = {
{
["enabled"] = true,
["description"] = "Green Spells used to trigger Ancient Flame",
["action"] = "emerald_blossom",
},
{
["action"] = "verdant_embrace",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["action"] = "shattering_star",
["cycle_targets"] = 1,
["description"] = "AOE action list, This is kind of a mess again and should prolly be rewritten completely  Open with star before DR to save a global and start with a free EB",
["criteria"] = "cooldown.dragonrage.up",
},
{
["enabled"] = true,
["description"] = "Send DR on CD with no regard to the safety of the mobs - DPS loss to hold DR for empowers, in real world scenario maybe you hold if you are going for longer DRs  DS optimization: Only cast if current fight will last 32s+ or encounter ends in less than 30s",
["criteria"] = "target.time_to_die >= 32 || boss & fight_remains < 30",
["action"] = "dragonrage",
},
{
["enabled"] = true,
["description"] = "Use tip to get that sweet aggro",
["criteria"] = "buff.dragonrage.up & ( active_enemies <= 3 + 3 * talent.eternitys_span.enabled || ! cooldown.fire_breath.up )",
["action"] = "tip_the_scales",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cast Fire Breath - stagger for swell/blazing shards outside DR  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s",
["criteria"] = "empowering.fire_breath || ( ! talent.dragonrage.enabled || variable.next_dragonrage > variable.dr_prep_time_aoe || ! talent.animosity.enabled ) & ( ( buff.power_swell.remains < variable.r1_cast_time || ( ! talent.volatility.enabled & active_enemies = 3 ) ) & buff.blazing_shards.remains < variable.r1_cast_time || buff.dragonrage.up ) & ( target.time_to_die >= 8 || boss & fight_remains < 30 )",
["list_name"] = "fb",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cast Eternity Surge - stagger for swell/blazing shards outside DR  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s",
["criteria"] = "empowering.eternity_surge || buff.dragonrage.up || ! talent.dragonrage.enabled || ( cooldown.dragonrage.remains > variable.dr_prep_time_aoe & ( buff.power_swell.remains < variable.r1_cast_time || ( ! talent.volatility.enabled & active_enemies = 3 ) ) & buff.blazing_shards.remains < variable.r1_cast_time ) & ( target.time_to_die >= 8 || boss & fight_remains < 30 )",
["list_name"] = "es",
},
{
["enabled"] = true,
["description"] = "Cast DB if not in DR and not going to overflow essence.",
["criteria"] = "! buff.dragonrage.up & essence.deficit > 3",
["action"] = "deep_breath",
},
{
["enabled"] = true,
["description"] = "Send SS when it doesn't overflow EB, without vigor send on CD",
["criteria"] = "buff.essence_burst.stack < buff.essence_burst.max_stack || ! talent.arcane_vigor.enabled",
["action"] = "shattering_star",
},
{
["enabled"] = true,
["description"] = "Cast Firestorm before spending ressources",
["action"] = "firestorm",
},
{
["enabled"] = true,
["action"] = "pyre",
["cycle_targets"] = 1,
["description"] = "Pyre 5T+",
["criteria"] = "active_enemies >= 5",
},
{
["enabled"] = true,
["action"] = "pyre",
["cycle_targets"] = 1,
["description"] = "Pyre 4T with if both EB & Irid Blue isn't up or not playing Eternity Span",
["criteria"] = "active_enemies >= 4 & ( ! buff.essence_burst.up & ! buff.iridescence_blue.up || ! talent.eternitys_span.enabled )",
},
{
["enabled"] = true,
["action"] = "pyre",
["cycle_targets"] = 1,
["description"] = "Pyre 4t if playing Volatility  Pyre on 3T if playing CB+Volatility and neither EB or blue buff is up",
["criteria"] = "active_enemies >= 4 & talent.volatility.enabled",
},
{
["enabled"] = true,
["action"] = "pyre",
["cycle_targets"] = 1,
["description"] = "Pyre on 3T if not playing Volatility if Irid red is up or EB isn't up.",
["criteria"] = "active_enemies >= 3 & talent.volatility.enabled & talent.charged_blast.enabled & ! buff.essence_burst.up & ! buff.iridescence_blue.up",
},
{
["enabled"] = true,
["action"] = "pyre",
["cycle_targets"] = 1,
["description"] = "Pyre with 15 stacks of CB",
["criteria"] = "active_enemies >= 3 & talent.volatility.enabled & ! talent.charged_blast.enabled & ( buff.iridescence_red.up || ! buff.essence_burst.up )",
},
{
["enabled"] = true,
["description"] = "Cast LF with leaping flames if: not playing burnout, burnout is up, more than 4 enemies, or scarlet adaptation is up.",
["criteria"] = "( ! talent.burnout.enabled || buff.burnout.up || active_enemies >= 4 || buff.scarlet_adaptation.up ) & buff.leaping_flames.up & ! buff.essence_burst.up & essence < essence.max - 1",
["action"] = "living_flame",
},
{
["enabled"] = true,
["name"] = "kharnalex_the_first_light",
["action"] = "kharnalex_the_first_light",
["criteria"] = "! buff.dragonrage.up & debuff.shattering_star_debuff.down & active_enemies <= 5",
["description"] = "Use staff on 5T or below",
},
{
["enabled"] = true,
["chain"] = "1",
["action"] = "disintegrate",
["interrupt_if"] = "evoker.use_clipping&buff.dragonrage.up&ticks>=2&(!(buff.power_infusion.up&buff.bloodlust.up)||cooldown.fire_breath.up||cooldown.eternity_surge.up)&(raid_event.movement.in>2||buff.hover.up)",
["early_chain_if"] = "evoker.use_early_chaining&ticks>=2&essence.deficit<2&(raid_event.movement.in>2||buff.hover.up)",
["criteria"] = "! moving || buff.hover.up",
["description"] = "Yoinked the disintegrate logic from ST",
},
{
["enabled"] = true,
["description"] = "Cast LF with burnout and snapfire proc for those juicy insta firestorms",
["criteria"] = "talent.snapfire.enabled & buff.burnout.up",
["action"] = "living_flame",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Get Ancient Flame as Filler",
["criteria"] = "talent.ancient_flame.enabled & ! buff.ancient_flame.up & ! buff.dragonrage.up",
["list_name"] = "green",
},
{
["enabled"] = true,
["description"] = "Fallback filler",
["action"] = "azure_strike",
},
},
["trinkets"] = {
{
["enabled"] = true,
["action"] = "dreambinder_loom_of_the_great_cycle",
["use_off_gcd"] = 1,
["description"] = "Use Dreambinder on CD",
["criteria"] = "gcd.remains > 0.5",
["name"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["name"] = "iridal_the_earths_master",
["cycle_targets"] = 1,
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0.5",
["action"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
["criteria"] = "( ( buff.emerald_trance_stacking.stack >= 2 & ( variable.has_external_pi ) ) || ( cooldown.dragonrage.remains <= 3 & cooldown.fire_breath.remains < 7 & cooldown.eternity_surge.remains < 13 & target.time_to_die >= 35 & ( ( ! variable.has_external_pi & active_enemies <= 2 ) || ! set_bonus.tier31_2pc ) ) || ( cooldown.dragonrage.remains <= 3 & active_enemies >= 3 ) ) || boss & fight_remains <= 20",
["description"] = "Nymues is used before Dragonrage unless you have PI, then it is used on 2 Stacks of Emerald Trance. In AoE it is used before DR.",
},
{
["enabled"] = true,
["action"] = "belorrelos_the_suncaller",
["use_off_gcd"] = 1,
["description"] = "Belorrelos is used on CD if not playing Nymues, it is used after Nymues if it is played. On AoE use after other use trinket.",
["criteria"] = "( gcd.remains > 0.5 & ( ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || active_enemies <= 2 ) & ( cooldown.nymues_unraveling_spindle.remains || ! equipped.nymues_unraveling_spindle ) ) || boss & fight_remains <= 20",
["name"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["description"] = "Fit in a Burnout/Green spell/Azure strike as you cast belorrelos for the 'free' GCD",
["criteria"] = "buff.burnout.up & ( ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || active_enemies <= 2 ) & equipped.belorrelos_the_suncaller & cooldown.belorrelos_the_suncaller.remains <= gcd.max & cooldown.item_cd_1141.ready & ( cooldown.nymues_unraveling_spindle.remains || ! equipped.nymues_unraveling_spindle )",
["action"] = "living_flame",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "talent.ancient_flame.enabled & ( ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || active_enemies <= 2 ) & equipped.belorrelos_the_suncaller & cooldown.belorrelos_the_suncaller.remains <= gcd.max & cooldown.item_cd_1141.ready & ( cooldown.nymues_unraveling_spindle.remains || ! equipped.nymues_unraveling_spindle )",
["list_name"] = "green",
},
{
["enabled"] = true,
["criteria"] = "equipped.belorrelos_the_suncaller & ( ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || active_enemies <= 2 ) & cooldown.belorrelos_the_suncaller.remains <= gcd.max & cooldown.item_cd_1141.ready & ( cooldown.nymues_unraveling_spindle.remains || ! equipped.nymues_unraveling_spindle )",
["action"] = "azure_strike",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "The trinket with the highest estimated value, will be used first and paired with Dragonrage.  Trinkets are used on 4 stacks of Emerald Trance, unless playing double buff trinket, then one is used after SS/FB and the next on CD. Or with DR in AoE",
["criteria"] = "buff.dragonrage.up & ( ( buff.emerald_trance_stacking.stack >= 4 & set_bonus.tier31_2pc ) || ( variable.trinket_2_buffs & ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! equipped.nymues_unraveling_spindle & trinket.t2.cooldown.remains ) || ( ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! set_bonus.tier31_2pc ) || active_enemies >= 3 ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 || variable.trinket_2_exclude ) & ! variable.trinket_1_manual || trinket.t1.buff_duration >= fight_remains || trinket.t1.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 1 )",
},
{
["enabled"] = true,
["criteria"] = "buff.dragonrage.up & ( ( buff.emerald_trance_stacking.stack >= 4 & set_bonus.tier31_2pc ) || ( variable.trinket_1_buffs & ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! equipped.nymues_unraveling_spindle & trinket.t1.cooldown.remains ) || ( ! cooldown.fire_breath.up & ! cooldown.shattering_star.up & ! set_bonus.tier31_2pc ) || active_enemies >= 3 ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 || variable.trinket_1_exclude ) & ! variable.trinket_2_manual || trinket.t2.buff_duration >= fight_remains || trinket.t2.cooldown.duration <= 60 & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ( ! buff.dragonrage.up || variable.trinket_priority = 2 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ! variable.trinket_1_manual",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) & ( variable.next_dragonrage > 20 || ! talent.dragonrage.enabled ) & ! variable.trinket_2_manual",
["action"] = "trinket2",
["slot"] = "trinket2",
},
},
["fb"] = {
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "1",
["description"] = "Fire Breath, use rank appropriate to target count/talents.",
["criteria"] = "( buff.dragonrage.up & active_enemies <= 2 ) || ( active_enemies = 1 & ! talent.everburning_flame.enabled ) || ( buff.dragonrage.remains < 1.75 * spell_haste & buff.dragonrage.remains >= 1 * spell_haste )",
},
{
["enabled"] = true,
["criteria"] = "( ! debuff.in_firestorm.up & talent.everburning_flame.enabled & active_enemies <= 3 ) || ( active_enemies = 2 & ! talent.everburning_flame.enabled ) || ( buff.dragonrage.remains < 2.5 * spell_haste & buff.dragonrage.remains >= 1.75 * spell_haste )",
["action"] = "fire_breath",
["empower_to"] = "2",
},
{
["enabled"] = true,
["criteria"] = "( talent.everburning_flame.enabled & buff.dragonrage.up & active_enemies >= 5 ) || ! talent.font_of_magic.enabled || ( debuff.in_firestorm.up & talent.everburning_flame.enabled & active_enemies <= 3 ) || ( buff.dragonrage.remains <= 3.25 * spell_haste & buff.dragonrage.remains >= 2.5 * spell_haste )",
["action"] = "fire_breath",
["empower_to"] = "3",
},
{
["enabled"] = true,
["action"] = "fire_breath",
["empower_to"] = "4",
},
},
["precombat"] = {
{
["action"] = "blessing_of_the_bronze",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Decide which trinket to pair with Dragonrage, prefer 2 minute and 1 minute trinkets",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.dragonrage.duration = 0 || cooldown.dragonrage.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.dragonrage.duration = 0 || cooldown.dragonrage.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.spoils_of_neltharus || trinket.t1.is.belorrelos_the_suncaller || trinket.t1.is.nymues_unraveling_spindle",
["var_name"] = "trinket_1_manual",
["description"] = "Estimates a trinkets value by comparing the cooldown of the trinket, divided by the duration of the buff it provides. Has a intellect modifier (currently 1.5x) to give a higher priority to intellect trinkets. The intellect modifier should be changed as intellect priority increases or decreases. As well as a modifier for if a trinket will or will not sync with cooldowns.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.spoils_of_neltharus || trinket.t2.is.belorrelos_the_suncaller || trinket.t2.is.nymues_unraveling_spindle",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1.0 * spell_haste",
["var_name"] = "r1_cast_time",
["description"] = "Rank 1 empower spell cast time",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "dr_prep_time_aoe",
["description"] = "Variable for when to start holding empowers for upcoming DR in AoE. - From my testing 4sec seems like the sweetspot, but it's very minor diff so far - Holding for more than 6 seconds it begins to become a loss.",
["default"] = "4",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "dr_prep_time_st",
["description"] = "Variable for when to start holding empowers for upcoming DR in ST.",
["default"] = "13",
},
{
["enabled"] = true,
["name"] = "shadowed_orb_of_torment",
["action"] = "shadowed_orb_of_torment",
},
{
["enabled"] = true,
["description"] = "Get Scarlet Adaptation",
["criteria"] = "talent.scarlet_adaptation.enabled",
["action"] = "verdant_embrace",
},
{
["enabled"] = true,
["criteria"] = "talent.firestorm.enabled",
["action"] = "firestorm",
},
{
["enabled"] = true,
["criteria"] = "! talent.firestorm.enabled",
["action"] = "living_flame",
},
},
},
["version"] = 20231216,
["warnings"] = "The import for 'es' required some automated changes.\nLine 1: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 1: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 1: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 2: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 3: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 3: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 5: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\nLine 5: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\nLine 5: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\nLine 5: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\nLine 6: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 6: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 6: Converted 'talent.event_horizon' to 'talent.event_horizon.enabled' (1x).\nLine 7: Converted 'talent.eye_of_infinity' to 'talent.eye_of_infinity.enabled' (1x).\nLine 8: Converted 'talent.arcane_vigor' to 'talent.arcane_vigor.enabled' (1x).\nLine 8: Converted 'talent.event_horizon' to 'talent.event_horizon.enabled' (1x).\nLine 9: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 9: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 10: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 11: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 15: Converted 'talent.raging_inferno' to 'talent.raging_inferno.enabled' (1x).\nLine 18: Converted 'talent.onyx_legacy' to 'talent.onyx_legacy.enabled' (1x).\nLine 18: Converted 'talent.onyx_legacy' to 'talent.onyx_legacy.enabled' (1x).\nLine 19: Converted 'talent.imminent_destruction' to 'talent.imminent_destruction.enabled' (1x).\nLine 20: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\nLine 20: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 2: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 3: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%trinket.t1.cooldown.duration=0)'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 5: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%trinket.t2.cooldown.duration=0)'.\nLine 6: Converted 'trinket.1.is.spoils_of_neltharus' to 'trinket.t1.is.spoils_of_neltharus' (1x).\nLine 6: Converted 'trinket.1.is.belorrelos_the_suncaller' to 'trinket.t1.is.belorrelos_the_suncaller' (1x).\nLine 6: Converted 'trinket.1.is.nymues_unraveling_spindle' to 'trinket.t1.is.nymues_unraveling_spindle' (1x).\nLine 7: Converted 'trinket.2.is.spoils_of_neltharus' to 'trinket.t2.is.spoils_of_neltharus' (1x).\nLine 7: Converted 'trinket.2.is.belorrelos_the_suncaller' to 'trinket.t2.is.belorrelos_the_suncaller' (1x).\nLine 7: Converted 'trinket.2.is.nymues_unraveling_spindle' to 'trinket.t2.is.nymues_unraveling_spindle' (1x).\nLine 8: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 8: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 9: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 9: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 10: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 10: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 10: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 10: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 10: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 15: Converted 'talent.scarlet_adaptation' to 'talent.scarlet_adaptation.enabled' (1x).\nLine 16: Converted 'talent.firestorm' to 'talent.firestorm.enabled' (1x).\nLine 17: Converted 'talent.firestorm' to 'talent.firestorm.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 4: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 4: Converted 'talent.animosity' to 'talent.animosity.enabled' (1x).\nLine 4: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 5: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 5: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 7: Converted 'talent.arcane_vigor' to 'talent.arcane_vigor.enabled' (1x).\nLine 10: Converted 'talent.eternitys_span' to 'talent.eternitys_span.enabled' (1x).\nLine 11: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 12: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 12: Converted 'talent.charged_blast' to 'talent.charged_blast.enabled' (1x).\nLine 13: Converted 'talent.volatility' to 'talent.volatility.enabled' (1x).\nLine 13: Converted 'talent.charged_blast' to 'talent.charged_blast.enabled' (1x).\nLine 14: Converted 'talent.burnout' to 'talent.burnout.enabled' (1x).\nLine 17: Converted 'talent.snapfire' to 'talent.snapfire.enabled' (1x).\nLine 18: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.belorrelos_the_suncaller.cooldown.remains' to 'cooldown.belorrelos_the_suncaller.remains'.\nLine 5: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 6: Converted 'talent.ancient_flame' to 'talent.ancient_flame.enabled' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.belorrelos_the_suncaller.cooldown.remains' to 'cooldown.belorrelos_the_suncaller.remains'.\nLine 6: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.belorrelos_the_suncaller.cooldown.remains' to 'cooldown.belorrelos_the_suncaller.remains'.\nLine 7: Converted 'trinket.nymues_unraveling_spindle.cooldown.remains' to 'cooldown.nymues_unraveling_spindle.remains'.\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'talent.dragonrage' to 'talent.dragonrage.enabled' (1x).\n\nThe import for 'fb' required some automated changes.\nLine 1: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\nLine 2: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\nLine 2: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\nLine 3: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\nLine 3: Converted 'talent.font_of_magic' to 'talent.font_of_magic.enabled' (1x).\nLine 3: Converted 'talent.everburning_flame' to 'talent.everburning_flame.enabled' (1x).\n\nImported 8 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/blessing_of_the_bronze\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.intellect||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit||trinket.1.is.mirror_of_fractured_tomorrows\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.intellect||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit||trinket.2.is.mirror_of_fractured_tomorrows\n# Decide which trinket to pair with Dragonrage, prefer 2 minute and 1 minute trinkets\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.dragonrage.duration=0||cooldown.dragonrage.duration%%trinket.2.cooldown.duration=0)\n# Estimates a trinkets value by comparing the cooldown of the trinket, divided by the duration of the buff it provides. Has a intellect modifier (currently 1.5x) to give a higher priority to intellect trinkets. The intellect modifier should be changed as intellect priority increases or decreases. As well as a modifier for if a trinket will or will not sync with cooldowns.\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.spoils_of_neltharus||trinket.1.is.belorrelos_the_suncaller||trinket.1.is.nymues_unraveling_spindle\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.spoils_of_neltharus||trinket.2.is.belorrelos_the_suncaller||trinket.2.is.nymues_unraveling_spindle\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.intellect)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.intellect)*(variable.trinket_1_sync))\n# Rank 1 empower spell cast time\nactions.precombat+=/variable,name=r1_cast_time,value=1.0*spell_haste\n# Variable for when to start holding empowers for upcoming DR in AoE. - From my testing 4sec seems like the sweetspot, but it's very minor diff so far - Holding for more than 6 seconds it begins to become a loss.\nactions.precombat+=/variable,name=dr_prep_time_aoe,default=4,op=reset\n# Variable for when to start holding empowers for upcoming DR in ST.\nactions.precombat+=/variable,name=dr_prep_time_st,default=13,op=reset\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\n# Get Scarlet Adaptation\nactions.precombat+=/verdant_embrace,if=talent.scarlet_adaptation\nactions.precombat+=/firestorm,if=talent.firestorm\nactions.precombat+=/living_flame,if=!talent.firestorm\n\nactions+=/quell\nactions+=/unravel\n# Delay pot in ST if you are about to SS - mostly relevant for opener where you want DR->FB->SS->rotation\nactions+=/potion,if=buff.dragonrage.up&(!cooldown.shattering_star.up||active_enemies>=2)||boss&fight_remains<35\n# Variable that evaluates when next dragonrage is by working out the maximum between the dragonrage cd and your empowers, ignoring CDR effect estimates.\nactions+=/variable,name=next_dragonrage,value=cooldown.dragonrage.remains\nactions+=/variable,name=next_dragonrage,op=max,value=cooldown.eternity_surge.remains-2*gcd.max\nactions+=/variable,name=next_dragonrage,op=max,value=cooldown.fire_breath.remains-gcd.max\n### Invoke External Power Infusions if they're available during dragonrage\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.dragonrage.up&((buff.emerald_trance_stacking.stack>=3&set_bonus.tier31_2pc)||(!cooldown.fire_breath.up&!cooldown.shattering_star.up&!set_bonus.tier31_2pc))\nactions+=/call_action_list,name=trinkets\n# If we're already empowering a Fire Breath cast, check its empowerment level.\nactions+=/run_action_list,name=fb,strict=1,if=empowering.fire_breath\n# If we're already empowering an Eternity Surge cast, check its empowerment level.\nactions+=/run_action_list,name=es,strict=1,if=empowering.eternity_surge\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2\nactions+=/run_action_list,name=st\n\n# AOE action list; This is kind of a mess again and should prolly be rewritten completely  Open with star before DR to save a global and start with a free EB\nactions.aoe+=/shattering_star,cycle_targets=1,if=cooldown.dragonrage.up\n# Send DR on CD with no regard to the safety of the mobs - DPS loss to hold DR for empowers, in real world scenario maybe you hold if you are going for longer DRs  DS optimization: Only cast if current fight will last 32s+ or encounter ends in less than 30s\nactions.aoe+=/dragonrage,if=target.time_to_die>=32||boss&fight_remains<30\n# Use tip to get that sweet aggro\nactions.aoe+=/tip_the_scales,if=buff.dragonrage.up&(active_enemies<=3+3*talent.eternitys_span||!cooldown.fire_breath.up)\n# Cast Fire Breath - stagger for swell/blazing shards outside DR  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.aoe+=/call_action_list,name=fb,if=empowering.fire_breath||(!talent.dragonrage||variable.next_dragonrage>variable.dr_prep_time_aoe||!talent.animosity)&((buff.power_swell.remains<variable.r1_cast_time||(!talent.volatility&active_enemies=3))&buff.blazing_shards.remains<variable.r1_cast_time||buff.dragonrage.up)&(target.time_to_die>=8||boss&fight_remains<30)\n# Cast Eternity Surge - stagger for swell/blazing shards outside DR  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.aoe+=/call_action_list,name=es,if=empowering.eternity_surge||buff.dragonrage.up||!talent.dragonrage||(cooldown.dragonrage.remains>variable.dr_prep_time_aoe&(buff.power_swell.remains<variable.r1_cast_time||(!talent.volatility&active_enemies=3))&buff.blazing_shards.remains<variable.r1_cast_time)&(target.time_to_die>=8||boss&fight_remains<30)\n# Cast DB if not in DR and not going to overflow essence.\nactions.aoe+=/deep_breath,if=!buff.dragonrage.up&essence.deficit>3\n# Send SS when it doesn't overflow EB, without vigor send on CD\nactions.aoe+=/shattering_star,if=buff.essence_burst.stack<buff.essence_burst.max_stack||!talent.arcane_vigor\n# Cast Firestorm before spending ressources\nactions.aoe+=/firestorm\n# Pyre 5T+\nactions.aoe+=/pyre,cycle_targets=1,if=active_enemies>=5\n# Pyre 4T with if both EB & Irid Blue isn't up or not playing Eternity Span\nactions.aoe+=/pyre,cycle_targets=1,if=active_enemies>=4&(!buff.essence_burst.up&!buff.iridescence_blue.up||!talent.eternitys_span)\n# Pyre 4t if playing Volatility  Pyre on 3T if playing CB+Volatility and neither EB or blue buff is up\nactions.aoe+=/pyre,cycle_targets=1,if=active_enemies>=4&talent.volatility\n# Pyre on 3T if not playing Volatility if Irid red is up or EB isn't up.\nactions.aoe+=/pyre,cycle_targets=1,if=active_enemies>=3&talent.volatility&talent.charged_blast&!buff.essence_burst.up&!buff.iridescence_blue.up\n# Pyre with 15 stacks of CB\nactions.aoe+=/pyre,cycle_targets=1,if=active_enemies>=3&talent.volatility&!talent.charged_blast&(buff.iridescence_red.up||!buff.essence_burst.up)\n# Cast LF with leaping flames if: not playing burnout, burnout is up, more than 4 enemies, or scarlet adaptation is up.\nactions.aoe+=/living_flame,if=(!talent.burnout||buff.burnout.up||active_enemies>=4||buff.scarlet_adaptation.up)&buff.leaping_flames.up&!buff.essence_burst.up&essence<essence.max-1\n# Use staff on 5T or below\nactions.aoe+=/use_item,name=kharnalex_the_first_light,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down&active_enemies<=5\n# Yoinked the disintegrate logic from ST\nactions.aoe+=/disintegrate,chain=1,early_chain_if=evoker.use_early_chaining&ticks>=2&essence.deficit<2&(raid_event.movement.in>2||buff.hover.up),interrupt_if=evoker.use_clipping&buff.dragonrage.up&ticks>=2&(!(buff.power_infusion.up&buff.bloodlust.up)||cooldown.fire_breath.up||cooldown.eternity_surge.up)&(raid_event.movement.in>2||buff.hover.up),if=!moving||buff.hover.up\n# Cast LF with burnout and snapfire proc for those juicy insta firestorms\nactions.aoe+=/living_flame,if=talent.snapfire&buff.burnout.up\n# Get Ancient Flame as Filler\nactions.aoe+=/call_action_list,name=green,if=talent.ancient_flame&!buff.ancient_flame.up&!buff.dragonrage.up\n# Fallback filler\nactions.aoe+=/azure_strike\n\n# Eternity Surge, use rank most applicable to targets.\nactions.es+=/eternity_surge,empower_to=1,if=active_enemies<=1+talent.eternitys_span||buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste||buff.dragonrage.up&(active_enemies=5||!talent.eternitys_span&active_enemies>=6||talent.eternitys_span&active_enemies>=8)\nactions.es+=/eternity_surge,empower_to=2,if=active_enemies<=2+2*talent.eternitys_span||buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste\nactions.es+=/eternity_surge,empower_to=3,if=active_enemies<=3+3*talent.eternitys_span||!talent.font_of_magic||buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste\nactions.es+=/eternity_surge,empower_to=4\n\n# Fire Breath, use rank appropriate to target count/talents.\nactions.fb+=/fire_breath,empower_to=1,if=(buff.dragonrage.up&active_enemies<=2)||(active_enemies=1&!talent.everburning_flame)||(buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste)\nactions.fb+=/fire_breath,empower_to=2,if=(!debuff.in_firestorm.up&talent.everburning_flame&active_enemies<=3)||(active_enemies=2&!talent.everburning_flame)||(buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste)\nactions.fb+=/fire_breath,empower_to=3,if=(talent.everburning_flame&buff.dragonrage.up&active_enemies>=5)||!talent.font_of_magic||(debuff.in_firestorm.up&talent.everburning_flame&active_enemies<=3)||(buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste)\nactions.fb+=/fire_breath,empower_to=4\n\n# Green Spells used to trigger Ancient Flame\nactions.green+=/emerald_blossom\nactions.green+=/verdant_embrace\n\n# ST Action List, it's a mess, but it's getting better!\nactions.st+=/use_item,name=kharnalex_the_first_light,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down&raid_event.movement.in>6\n# Movement Logic, Time spiral logic might need some tweaking actions.st+=/time_spiral,if=raid_event.movement.in<3&cooldown.hover.remains>=3&!buff.hover.up\nactions.st+=/hover,use_off_gcd=1,if=raid_event.movement.in<2&!buff.hover.up\n# Spend firestorm procs ASAP\nactions.st+=/firestorm,if=buff.snapfire.up\n# Relaxed Dragonrage Entry Requirements, cannot reliably reach third extend under normal conditions (Bloodlust + Power Infusion/Very high haste gear)  DS optimization: Only cast if current fight will last 32s+ or encounter ends in less than 30s\nactions.st+=/dragonrage,if=cooldown.fire_breath.remains<4&cooldown.eternity_surge.remains<10&target.time_to_die>=32||boss&fight_remains<30\n# Tip second FB if not playing font of magic or if playing EBF, otherwise tip ES.\nactions.st+=/tip_the_scales,if=buff.dragonrage.up&(((!talent.font_of_magic||talent.everburning_flame)&cooldown.fire_breath.remains<cooldown.eternity_surge.remains&buff.dragonrage.remains<14)||(cooldown.eternity_surge.remains<cooldown.fire_breath.remains&!talent.everburning_flame&talent.font_of_magic))\n# Fire breath logic  Play around power swell if you don't have pi or lust up. Play around blazing shards if outside of DR.  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.st+=/call_action_list,name=fb,if=(!talent.dragonrage||variable.next_dragonrage>variable.dr_prep_time_st||!talent.animosity)&((buff.power_swell.remains<variable.r1_cast_time||buff.bloodlust.up||buff.power_infusion.up||buff.dragonrage.up)&(buff.blazing_shards.remains<variable.r1_cast_time||buff.dragonrage.up))&(!cooldown.eternity_surge.up||!talent.event_horizon||!buff.dragonrage.up)&(target.time_to_die>=8||boss&fight_remains<30)\n# Use Disintegrate after FB opener in DR.\nactions.st+=/disintegrate,if=buff.dragonrage.remains>19&cooldown.fire_breath.remains>28&talent.eye_of_infinity&set_bonus.tier30_2pc\n# Throw Star on CD, Don't overcap with Arcane Vigor.\nactions.st+=/shattering_star,if=(buff.essence_burst.stack<buff.essence_burst.max_stack||!talent.arcane_vigor)&(!cooldown.fire_breath.up||!talent.event_horizon)\n# Eternity Surge logic  Play around power swell if you don't have pi or lust up. Play around blazing shards if outside of DR.  DS optimization: Only cast if current fight will last 8s+ or encounter ends in less than 30s\nactions.st+=/call_action_list,name=es,if=(!talent.dragonrage||variable.next_dragonrage>variable.dr_prep_time_st||!talent.animosity)&((buff.power_swell.remains<variable.r1_cast_time||buff.bloodlust.up||buff.power_infusion.up)&(buff.blazing_shards.remains<variable.r1_cast_time||buff.dragonrage.up))&(target.time_to_die>=8||boss&fight_remains<30)\n# Wait for FB/ES to be ready if spending another GCD would result in the cast no longer fitting inside of DR\nactions.st+=/wait,sec=cooldown.fire_breath.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time*buff.tip_the_scales.down&buff.dragonrage.remains-cooldown.fire_breath.remains>=variable.r1_cast_time*buff.tip_the_scales.down\nactions.st+=/wait,sec=cooldown.eternity_surge.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time&buff.dragonrage.remains-cooldown.eternity_surge.remains>variable.r1_cast_time*buff.tip_the_scales.down\n# Spend the last 1 or 2 GCDs of DR on fillers to exit with 2 EBs\nactions.st+=/living_flame,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max&buff.burnout.up\nactions.st+=/azure_strike,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max\n# Spend burnout procs without overcapping resources\nactions.st+=/living_flame,if=buff.burnout.up&(buff.leaping_flames.up&!buff.essence_burst.up||!buff.leaping_flames.up&buff.essence_burst.stack<buff.essence_burst.max_stack)&essence.deficit>=2\n# Spend pyre if raging inferno debuff is active and you have 20 stacks of CB on 2T\nactions.st+=/pyre,if=debuff.in_firestorm.up&talent.raging_inferno&buff.charged_blast.stack=20&active_enemies>=2\n# Dis logic Early Chain if needed for ressources management. Clip after in DR after third tick for more important buttions, atm that is: empowers, burnout & SS. burnout and SS you only clip for if both lust & pi isn't up.\nactions.st+=/disintegrate,chain=1,early_chain_if=evoker.use_early_chaining&ticks>=2&essence.deficit<2&(raid_event.movement.in>2||buff.hover.up),interrupt_if=evoker.use_clipping&buff.dragonrage.up&ticks>=2&(!(buff.power_infusion.up&buff.bloodlust.up)||cooldown.fire_breath.up||cooldown.eternity_surge.up)&(raid_event.movement.in>2||buff.hover.up),if=raid_event.movement.in>2||buff.hover.up\n# Hard cast only outside of SS and DR windows\nactions.st+=/firestorm,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down\n# Use Deep Breath on 2T, unless adds will come before it'll be ready again or if talented ID.\nactions.st+=/deep_breath,if=!buff.dragonrage.up&active_enemies>=2&((raid_event.adds.in>=120&!talent.onyx_legacy)||(raid_event.adds.in>=60&talent.onyx_legacy))\nactions.st+=/deep_breath,if=!buff.dragonrage.up&talent.imminent_destruction&!debuff.shattering_star_debuff.up\n# Get Ancient Flame as Filler\nactions.st+=/call_action_list,name=green,if=talent.ancient_flame&!buff.ancient_flame.up&!buff.shattering_star_debuff.up&talent.scarlet_adaptation&!buff.dragonrage.up\n# Cast LF outside of DR, In DR only cast with Iridescence.\nactions.st+=/living_flame,if=!buff.dragonrage.up||(buff.iridescence_red.remains>execute_time||buff.iridescence_blue.up)&active_enemies=1\n# Fallback for movement\nactions.st+=/azure_strike\n\n# Use Dreambinder on CD\nactions.trinkets+=/use_item,name=dreambinder_loom_of_the_great_cycle,use_off_gcd=1,if=gcd.remains>0.5\nactions.trinkets+=/use_item,name=iridal_the_earths_master,cycle_targets=1,use_off_gcd=1,if=gcd.remains>0.5\n# Nymues is used before Dragonrage unless you have PI, then it is used on 2 Stacks of Emerald Trance. In AoE it is used before DR.\nactions.trinkets+=/use_item,name=nymues_unraveling_spindle,if=((buff.emerald_trance_stacking.stack>=2&(variable.has_external_pi))||(cooldown.dragonrage.remains<=3&cooldown.fire_breath.remains<7&cooldown.eternity_surge.remains<13&target.time_to_die>=35&((!variable.has_external_pi&active_enemies<=2)||!set_bonus.tier31_2pc))||(cooldown.dragonrage.remains<=3&active_enemies>=3))||boss&fight_remains<=20\n# Belorrelos is used on CD if not playing Nymues, it is used after Nymues if it is played. On AoE use after other use trinket.\nactions.trinkets+=/use_item,name=belorrelos_the_suncaller,use_off_gcd=1,if=(gcd.remains>0.5&((trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||active_enemies<=2)&(trinket.nymues_unraveling_spindle.cooldown.remains||!equipped.nymues_unraveling_spindle))||boss&fight_remains<=20\n# Fit in a Burnout/Green spell/Azure strike as you cast belorrelos for the 'free' GCD\nactions.trinkets+=/living_flame,if=buff.burnout.up&((trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||active_enemies<=2)&equipped.belorrelos_the_suncaller&trinket.belorrelos_the_suncaller.cooldown.remains<=gcd.max&cooldown.item_cd_1141.ready&(trinket.nymues_unraveling_spindle.cooldown.remains||!equipped.nymues_unraveling_spindle)\nactions.trinkets+=/call_action_list,name=green,if=talent.ancient_flame&((trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||active_enemies<=2)&equipped.belorrelos_the_suncaller&trinket.belorrelos_the_suncaller.cooldown.remains<=gcd.max&cooldown.item_cd_1141.ready&(trinket.nymues_unraveling_spindle.cooldown.remains||!equipped.nymues_unraveling_spindle)\nactions.trinkets+=/azure_strike,if=equipped.belorrelos_the_suncaller&((trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||active_enemies<=2)&trinket.belorrelos_the_suncaller.cooldown.remains<=gcd.max&cooldown.item_cd_1141.ready&(trinket.nymues_unraveling_spindle.cooldown.remains||!equipped.nymues_unraveling_spindle)\n# The trinket with the highest estimated value, will be used first and paired with Dragonrage.  Trinkets are used on 4 stacks of Emerald Trance, unless playing double buff trinket, then one is used after SS/FB and the next on CD. Or with DR in AoE\nactions.trinkets+=/use_item,slot=trinket1,if=buff.dragonrage.up&((buff.emerald_trance_stacking.stack>=4&set_bonus.tier31_2pc)||(variable.trinket_2_buffs&!cooldown.fire_breath.up&!cooldown.shattering_star.up&!equipped.nymues_unraveling_spindle&trinket.2.cooldown.remains)||(!cooldown.fire_breath.up&!cooldown.shattering_star.up&!set_bonus.tier31_2pc)||active_enemies>=3)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1||variable.trinket_2_exclude)&!variable.trinket_1_manual||trinket.1.proc.any_dps.duration>=fight_remains||trinket.1.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=1)\nactions.trinkets+=/use_item,slot=trinket2,if=buff.dragonrage.up&((buff.emerald_trance_stacking.stack>=4&set_bonus.tier31_2pc)||(variable.trinket_1_buffs&!cooldown.fire_breath.up&!cooldown.shattering_star.up&!equipped.nymues_unraveling_spindle&trinket.1.cooldown.remains)||(!cooldown.fire_breath.up&!cooldown.shattering_star.up&!set_bonus.tier31_2pc)||active_enemies>=3)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2||variable.trinket_1_exclude)&!variable.trinket_2_manual||trinket.2.proc.any_dps.duration>=fight_remains||trinket.2.cooldown.duration<=60&(variable.next_dragonrage>20||!talent.dragonrage)&(!buff.dragonrage.up||variable.trinket_priority=2)\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(variable.next_dragonrage>20||!talent.dragonrage)&!variable.trinket_1_manual\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)&(variable.next_dragonrage>20||!talent.dragonrage)&!variable.trinket_2_manual",
},
["Brewmaster"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20230524,
["author"] = "SimC",
["desc"] = "2023-05-24:  Beacon/WoO alignment no longer needed.\n\n2023-05-15:  Oops, reimplement fallback rotation.\n\n2023-05-08:  SCK and Beacon to the Beyond changes.\n\n2023-02-26:  Added Touch of Death back to the priority (appears to be missing from SimC).\n\nThe SimC Brewmaster priority uses Purifying Brew and Celestial Brew aggressively for DPS.  The addon has pared this back to support survivability.",
["lists"] = {
["cooldowns_niuzao_woo"] = {
{
["action"] = "weapons_of_order",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & debuff.weapons_of_order_debuff.stack > 3",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & ! buff.weapons_of_order.up & cooldown.weapons_of_order.remains > 10",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "buff.weapons_of_order.remains <= 16 & talent.weapons_of_order.enabled",
["action"] = "invoke_niuzao_the_black_ox",
},
{
["enabled"] = true,
["criteria"] = "! talent.weapons_of_order.enabled",
["action"] = "invoke_niuzao_the_black_ox",
},
},
["cooldowns_improved_niuzao_cta"] = {
{
["action"] = "weapons_of_order",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & debuff.weapons_of_order_debuff.stack > 3",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & ! buff.weapons_of_order.up & cooldown.weapons_of_order.remains > 10",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "buff.weapons_of_order.remains <= 30 - 17 & action.purifying_brew.last_used > action.weapons_of_order.last_used + 10 + 2 * 0.05",
["action"] = "invoke_niuzao_the_black_ox",
},
},
["rotation_boc_dfb"] = {
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rising_sun_kick.enabled",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled & buff.rushing_jade_wind.remains < 1",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "buff.blackout_combo.up",
["action"] = "breath_of_fire",
},
{
["action"] = "keg_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.full_recharge_time * ( 1 - cooldown.keg_smash.charges_fractional ) ) >= 65 & talent.black_ox_brew.enabled",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & energy + energy.regen * ( cooldown.keg_smash.full_recharge_time * ( 1 - cooldown.keg_smash.charges_fractional ) ) >= 65",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 || ( talent.walk_with_the_ox.enabled & talent.charred_passions.enabled )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.full_recharge_time * ( 1 - cooldown.keg_smash.charges_fractional ) ) >= 65",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "talent.celestial_brew.enabled & ! buff.blackout_combo.up",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "rotation_fallback",
},
},
["rotation_chp"] = {
{
["enabled"] = true,
["criteria"] = "! buff.charred_passions.up",
["action"] = "breath_of_fire",
},
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rising_sun_kick.enabled",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled & buff.rushing_jade_wind.remains < 1",
["action"] = "rushing_jade_wind",
},
{
["action"] = "keg_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.full_recharge_time * ( 1 - cooldown.keg_smash.charges_fractional ) ) >= 65 & talent.black_ox_brew.enabled",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 || ( talent.walk_with_the_ox.enabled & talent.charred_passions.enabled )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.full_recharge_time * ( 1 - cooldown.keg_smash.charges_fractional ) ) >= 65",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "talent.celestial_brew.enabled & ! buff.blackout_combo.up",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "rotation_fallback",
},
},
["default"] = {
{
["action"] = "spear_hand_strike",
["enabled"] = true,
},
{
["action"] = "diffuse_magic",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "settings.purify_for_celestial & ( time_to_max_charges < gcd.max || buff.purified_chi.up & buff.purified_chi.remains < 1.5 * gcd.max ) || cooldown.celestial_brew.remains < 2 * gcd.max & charges_fractional > 1.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "tanking & ( ! talent.improved_celestial_brew.enabled || buff.purified_chi.up ) & buff.blackout_combo.down",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["action"] = "purifying_brew",
["criteria"] = "talent.improved_invoke_niuzao_the_black_ox.enabled & settings.purify_for_niuzao & pet.niuzao_the_black_ox.active",
["line_cd"] = "5",
},
{
["enabled"] = true,
["description"] = "Use configured purify_stagger_currhp from Brewmaster options.",
["criteria"] = "group & buff.blackout_combo.down & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["description"] = "Use configured purify_stagger_currhp from Brewmaster options.",
["criteria"] = "solo & buff.blackout_combo.down & settings.purify_stagger_currhp > 0 & stagger.pct >= settings.purify_stagger_currhp * 0.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["description"] = "Use configured purify_stagger_maxhp from Brewmaster options.",
["criteria"] = "group & buff.blackout_combo.down & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["description"] = "Use configured purify_stagger_maxhp from Brewmaster options.",
["criteria"] = "solo & buff.blackout_combo.down & settings.purify_stagger_maxhp > 0 & stagger.pct >= settings.purify_stagger_maxhp * 0.5",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["description"] = "Stagger % of 20 will kill you in 2.5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.",
["criteria"] = "group & buff.blackout_combo.down & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 20",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["description"] = "Stagger % of 10 will kill you in 5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.",
["criteria"] = "solo & buff.blackout_combo.down & settings.purify_stagger_currhp = 0 & settings.purify_stagger_maxhp = 0 & stagger.pct > 10",
["action"] = "purifying_brew",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 75 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & buff.fortifying_brew.down",
["action"] = "dampen_harm",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 50 & incoming_damage_3s > health.max * ( 0.2 + ( 0.2 * group ) ) & ( buff.dampen_harm.down )",
["action"] = "fortifying_brew",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.summon_white_tiger_statue.enabled",
["action"] = "summon_white_tiger_statue",
},
{
["action"] = "touch_of_death",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.weapons_of_order_debuff.stack > 3 || talent.weapons_of_order.enabled || boss & fight_remains < 25",
["action"] = "use_items",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( talent.invoke_niuzao_the_black_ox.rank + talent.improved_invoke_niuzao_the_black_ox.rank ) = 2 & ( talent.weapons_of_order.rank + talent.call_to_arms.rank ) <= 1",
["list_name"] = "cooldowns_improved_niuzao_woo",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( talent.invoke_niuzao_the_black_ox.rank + talent.improved_invoke_niuzao_the_black_ox.rank ) = 2 & ( talent.weapons_of_order.rank + talent.call_to_arms.rank ) = 2",
["list_name"] = "cooldowns_improved_niuzao_cta",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( talent.invoke_niuzao_the_black_ox.rank + talent.improved_invoke_niuzao_the_black_ox.rank ) <= 1",
["list_name"] = "cooldowns_niuzao_woo",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.blackout_combo.enabled & talent.dragonfire_brew.enabled & talent.salsalabims_strength.enabled",
["list_name"] = "rotation_boc_dfb",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.dragonfire_brew.enabled & talent.salsalabims_strength.enabled",
["list_name"] = "rotation_dfb",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.charred_passions.enabled & talent.salsalabims_strength.enabled",
["list_name"] = "rotation_chp",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.salsalabims_strength.enabled || ! ( talent.dragonfire_brew.enabled || talent.charred_passions.enabled )",
["list_name"] = "rotation_fallback",
},
},
["precombat"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
},
["rotation_fallback"] = {
{
["enabled"] = true,
["criteria"] = "talent.rising_sun_kick.enabled",
["action"] = "rising_sun_kick",
},
{
["action"] = "keg_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.breath_of_fire.enabled",
["action"] = "breath_of_fire",
},
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.remains + execute_time ) >= 65 & talent.black_ox_brew.enabled",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 || ( talent.walk_with_the_ox.enabled & talent.charred_passions.enabled )",
["action"] = "spinning_crane_kick",
},
{
["action"] = "expel_harm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "! buff.blackout_combo.up & talent.celestial_brew.enabled",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
},
["cooldowns_improved_niuzao_woo"] = {
{
["action"] = "weapons_of_order",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & debuff.weapons_of_order_debuff.stack > 3",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "! buff.bonedust_brew.up & ! buff.weapons_of_order.up & cooldown.weapons_of_order.remains > 10",
["action"] = "bonedust_brew",
},
{
["enabled"] = true,
["criteria"] = "buff.bonedust_brew.up",
["action"] = "exploding_keg",
},
{
["enabled"] = true,
["criteria"] = "time - action.purifying_brew.last_used <= 5",
["action"] = "invoke_niuzao_the_black_ox",
},
},
["rotation_dfb"] = {
{
["action"] = "blackout_kick",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rising_sun_kick.enabled",
["action"] = "rising_sun_kick",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled & buff.rushing_jade_wind.remains < 1",
["action"] = "rushing_jade_wind",
},
{
["action"] = "breath_of_fire",
["enabled"] = true,
},
{
["action"] = "keg_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.full_recharge_time * ( 1 - cooldown.keg_smash.charges_fractional ) ) >= 65 & talent.black_ox_brew.enabled",
["action"] = "black_ox_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.rushing_jade_wind.enabled",
["action"] = "rushing_jade_wind",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 || ( talent.walk_with_the_ox.enabled & talent.charred_passions.enabled )",
["action"] = "spinning_crane_kick",
},
{
["enabled"] = true,
["criteria"] = "energy + energy.regen * ( cooldown.keg_smash.full_recharge_time * ( 1 - cooldown.keg_smash.charges_fractional ) ) >= 65",
["action"] = "expel_harm",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1",
["action"] = "tiger_palm",
},
{
["enabled"] = true,
["criteria"] = "talent.celestial_brew.enabled",
["action"] = "celestial_brew",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_wave.enabled",
["action"] = "chi_wave",
},
{
["enabled"] = true,
["criteria"] = "talent.chi_burst.enabled",
["action"] = "chi_burst",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "rotation_fallback",
},
},
},
["version"] = 20230524,
["warnings"] = "The import for 'default' required some automated changes.\nLine 4: Converted 'talent.improved_celestial_brew' to 'talent.improved_celestial_brew.enabled' (1x).\nLine 5: Converted 'talent.improved_invoke_niuzao_the_black_ox' to 'talent.improved_invoke_niuzao_the_black_ox.enabled' (1x).\nLine 17: Converted 'talent.weapons_of_order' to 'talent.weapons_of_order.enabled' (1x).\n\nImported 9 action lists.\n",
["spec"] = 268,
["profile"] = "actions.precombat+=/potion\nactions.precombat+=/chi_burst,if=talent.chi_burst.enabled\nactions.precombat+=/chi_wave,if=talent.chi_wave.enabled\n## Blackout Combo\n## actions.precombat+=/variable,name=boc_count,op=set,value=0\n\nactions+=/spear_hand_strike\nactions+=/diffuse_magic\nactions+=/purifying_brew,if=settings.purify_for_celestial&(time_to_max_charges<gcd.max||buff.purified_chi.up&buff.purified_chi.remains<1.5*gcd.max)||cooldown.celestial_brew.remains<2*gcd.max&charges_fractional>1.5\nactions+=/celestial_brew,if=tanking&(!talent.improved_celestial_brew||buff.purified_chi.up)&buff.blackout_combo.down\nactions+=/purifying_brew,line_cd=5,if=talent.improved_invoke_niuzao_the_black_ox&settings.purify_for_niuzao&pet.niuzao_the_black_ox.active\n# Use configured purify_stagger_currhp from Brewmaster options.\nactions+=/purifying_brew,if=group&buff.blackout_combo.down&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp\n# Use configured purify_stagger_currhp from Brewmaster options.\nactions+=/purifying_brew,if=solo&buff.blackout_combo.down&settings.purify_stagger_currhp>0&stagger.pct>=settings.purify_stagger_currhp*0.5\n# Use configured purify_stagger_maxhp from Brewmaster options.\nactions+=/purifying_brew,if=group&buff.blackout_combo.down&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp\n# Use configured purify_stagger_maxhp from Brewmaster options.\nactions+=/purifying_brew,if=solo&buff.blackout_combo.down&settings.purify_stagger_maxhp>0&stagger.pct>=settings.purify_stagger_maxhp*0.5\n# Stagger % of 20 will kill you in 2.5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.\nactions+=/purifying_brew,if=group&buff.blackout_combo.down&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>20\n# Stagger % of 10 will kill you in 5 seconds without healing or purifying.  Used when purify_stagger_currhp and maxhp are disabled.\nactions+=/purifying_brew,if=solo&buff.blackout_combo.down&settings.purify_stagger_currhp=0&settings.purify_stagger_maxhp=0&stagger.pct>10\nactions+=/dampen_harm,if=health.pct<75&incoming_damage_3s>health.max*(0.2+(0.2*group))&buff.fortifying_brew.down\nactions+=/fortifying_brew,if=health.pct<50&incoming_damage_3s>health.max*(0.2+(0.2*group))&(buff.dampen_harm.down)\nactions+=/potion\nactions+=/summon_white_tiger_statue,if=talent.summon_white_tiger_statue.enabled\nactions+=/touch_of_death\nactions+=/use_items,if=debuff.weapons_of_order_debuff.stack>3||talent.weapons_of_order||boss&fight_remains<25\nactions+=/blood_fury\nactions+=/berserking\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/call_action_list,name=cooldowns_improved_niuzao_woo,strict=1,if=(talent.invoke_niuzao_the_black_ox.rank+talent.improved_invoke_niuzao_the_black_ox.rank)=2&(talent.weapons_of_order.rank+talent.call_to_arms.rank)<=1\nactions+=/call_action_list,name=cooldowns_improved_niuzao_cta,strict=1,if=(talent.invoke_niuzao_the_black_ox.rank+talent.improved_invoke_niuzao_the_black_ox.rank)=2&(talent.weapons_of_order.rank+talent.call_to_arms.rank)=2\nactions+=/call_action_list,name=cooldowns_niuzao_woo,strict=1,if=(talent.invoke_niuzao_the_black_ox.rank+talent.improved_invoke_niuzao_the_black_ox.rank)<=1\nactions+=/call_action_list,name=rotation_boc_dfb,strict=1,if=talent.blackout_combo.enabled&talent.dragonfire_brew.enabled&talent.salsalabims_strength.enabled\nactions+=/call_action_list,name=rotation_dfb,strict=1,if=talent.dragonfire_brew.enabled&talent.salsalabims_strength.enabled\nactions+=/call_action_list,name=rotation_chp,strict=1,if=talent.charred_passions.enabled&talent.salsalabims_strength.enabled\nactions+=/call_action_list,name=rotation_fallback,strict=1,if=!talent.salsalabims_strength.enabled||!(talent.dragonfire_brew.enabled||talent.charred_passions.enabled)\n\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> when <a href='https://www.wowhead.com/spell=387184/weapons-of-order'>Weapons of Order</a> reaches 4 stacks.\n## actions.cooldowns_niuzao_woo+=/invoke_external_buff,name=power_infusion,if=buff.weapons_of_order.remains<=20\nactions.cooldowns_niuzao_woo+=/weapons_of_order\nactions.cooldowns_niuzao_woo+=/bonedust_brew,if=!buff.bonedust_brew.up&debuff.weapons_of_order_debuff.stack>3\nactions.cooldowns_niuzao_woo+=/bonedust_brew,if=!buff.bonedust_brew.up&!buff.weapons_of_order.up&cooldown.weapons_of_order.remains>10\nactions.cooldowns_niuzao_woo+=/exploding_keg,if=buff.bonedust_brew.up\nactions.cooldowns_niuzao_woo+=/invoke_niuzao_the_black_ox,if=buff.weapons_of_order.remains<=16&talent.weapons_of_order.enabled\nactions.cooldowns_niuzao_woo+=/invoke_niuzao_the_black_ox,if=!talent.weapons_of_order.enabled\n## actions.cooldowns_niuzao_woo+=/purifying_brew,if=stagger.amounttototalpct>=0.7&!buff.blackout_combo.up\n## actions.cooldowns_niuzao_woo+=/purifying_brew,if=cooldown.purifying_brew.remains_expected<5&!buff.blackout_combo.up\n\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> when <a href='https://www.wowhead.com/spell=387184/weapons-of-order'>Weapons of Order</a> reaches 4 stacks.\n## actions.cooldowns_improved_niuzao_woo+=/invoke_external_buff,name=power_infusion,if=buff.weapons_of_order.remains<=20\n## actions.cooldowns_improved_niuzao_woo+=/variable,name=pb_in_window,op=set,value=floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65),if=prev.invoke_niuzao_the_black_ox\n## actions.cooldowns_improved_niuzao_woo+=/variable,name=pb_in_window,op=sub,value=1,if=prev.purifying_brew&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05\n## actions.cooldowns_improved_niuzao_woo+=/purifying_brew,if=(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used%variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)\n## actions.cooldowns_improved_niuzao_woo+=/purifying_brew,use_off_gcd=1,if=(variable.pb_in_window=0&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used<1&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used>0)\nactions.cooldowns_improved_niuzao_woo+=/weapons_of_order\nactions.cooldowns_improved_niuzao_woo+=/bonedust_brew,if=!buff.bonedust_brew.up&debuff.weapons_of_order_debuff.stack>3\nactions.cooldowns_improved_niuzao_woo+=/bonedust_brew,if=!buff.bonedust_brew.up&!buff.weapons_of_order.up&cooldown.weapons_of_order.remains>10\nactions.cooldowns_improved_niuzao_woo+=/exploding_keg,if=buff.bonedust_brew.up\n## actions.cooldowns_improved_niuzao_woo+=/purifying_brew,if=cooldown.invoke_niuzao_the_black_ox.remains<=3.5&time-action.purifying_brew.last_used>=3.5+cooldown.invoke_niuzao_the_black_ox.remains\nactions.cooldowns_improved_niuzao_woo+=/invoke_niuzao_the_black_ox,if=time-action.purifying_brew.last_used<=5\n## actions.cooldowns_improved_niuzao_woo+=/purifying_brew,if=cooldown.purifying_brew.full_recharge_time*2<=cooldown.invoke_niuzao_the_black_ox.remains-3.5\n\n## Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> when <a href='https://www.wowhead.com/spell=387184/weapons-of-order'>Weapons of Order</a> reaches 4 stacks.\n## actions.cooldowns_improved_niuzao_cta+=/invoke_external_buff,name=power_infusion,if=buff.weapons_of_order.remains<=20\n## actions.cooldowns_improved_niuzao_cta+=/variable,name=pb_in_window,op=set,value=floor(cooldown.purifying_brew.charges_fractional+(10+2*0.05)%cooldown.purifying_brew.duration%0.65),if=prev.weapons_of_order\n## actions.cooldowns_improved_niuzao_cta+=/variable,name=pb_in_window,op=set,value=floor(cooldown.purifying_brew.charges_fractional+(20+4*0.05)%cooldown.purifying_brew.duration%0.65),if=prev.invoke_niuzao_the_black_ox\n## actions.cooldowns_improved_niuzao_cta+=/variable,name=pb_in_window,op=sub,value=1,if=prev.purifying_brew&(time-action.weapons_of_order.last_used<=10+2*0.05||time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)\n## actions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=(time-action.purifying_brew.last_used>=10+2*0.05-time+action.weapons_of_order.last_used%variable.pb_in_window&time-action.weapons_of_order.last_used<=10+2*0.05)\n## actions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=(time-action.purifying_brew.last_used>=20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used%variable.pb_in_window&time-action.invoke_niuzao_the_black_ox.last_used<=20+4*0.05)\n## actions.cooldowns_improved_niuzao_cta+=/purifying_brew,use_off_gcd=1,if=(variable.pb_in_window=0&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used<1&20+4*0.05-time+action.invoke_niuzao_the_black_ox.last_used>0)\n## actions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=cooldown.weapons_of_order.remains<=3.5&time-action.purifying_brew.last_used>=3.5+cooldown.weapons_of_order.remains\nactions.cooldowns_improved_niuzao_cta+=/weapons_of_order\nactions.cooldowns_improved_niuzao_cta+=/bonedust_brew,if=!buff.bonedust_brew.up&debuff.weapons_of_order_debuff.stack>3\nactions.cooldowns_improved_niuzao_cta+=/bonedust_brew,if=!buff.bonedust_brew.up&!buff.weapons_of_order.up&cooldown.weapons_of_order.remains>10\nactions.cooldowns_improved_niuzao_cta+=/exploding_keg,if=buff.bonedust_brew.up\n## actions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=cooldown.invoke_niuzao_the_black_ox.remains<=3.5&time-action.purifying_brew.last_used>=3.5+cooldown.invoke_niuzao_the_black_ox.remains&buff.weapons_of_order.remains<=30-17\nactions.cooldowns_improved_niuzao_cta+=/invoke_niuzao_the_black_ox,if=buff.weapons_of_order.remains<=30-17&action.purifying_brew.last_used>action.weapons_of_order.last_used+10+2*0.05\n## actions.cooldowns_improved_niuzao_cta+=/purifying_brew,if=cooldown.purifying_brew.full_recharge_time*2<=cooldown.weapons_of_order.remains-3.5&cooldown.purifying_brew.full_recharge_time*2<=cooldown.invoke_niuzao_the_black_ox.remains-3.5\n\nactions.rotation_boc_dfb+=/blackout_kick\nactions.rotation_boc_dfb+=/rising_sun_kick,if=talent.rising_sun_kick.enabled\nactions.rotation_boc_dfb+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled&buff.rushing_jade_wind.remains<1\nactions.rotation_boc_dfb+=/breath_of_fire,if=buff.blackout_combo.up\nactions.rotation_boc_dfb+=/keg_smash\nactions.rotation_boc_dfb+=/black_ox_brew,if=energy+energy.regen*(cooldown.keg_smash.full_recharge_time*(1-cooldown.keg_smash.charges_fractional))>=65&talent.black_ox_brew.enabled\nactions.rotation_boc_dfb+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_boc_dfb+=/spinning_crane_kick,if=active_enemies>1&energy+energy.regen*(cooldown.keg_smash.full_recharge_time*(1-cooldown.keg_smash.charges_fractional))>=65\nactions.rotation_boc_dfb+=/spinning_crane_kick,if=active_enemies>1||(talent.walk_with_the_ox.enabled&talent.charred_passions.enabled)\nactions.rotation_boc_dfb+=/expel_harm,if=energy+energy.regen*(cooldown.keg_smash.full_recharge_time*(1-cooldown.keg_smash.charges_fractional))>=65\nactions.rotation_boc_dfb+=/tiger_palm,if=active_enemies=1\nactions.rotation_boc_dfb+=/celestial_brew,if=talent.celestial_brew.enabled&!buff.blackout_combo.up\nactions.rotation_boc_dfb+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_boc_dfb+=/chi_burst,if=talent.chi_burst.enabled\nactions.rotation_boc_dfb+=/call_action_list,name=rotation_fallback\n\nactions.rotation_dfb+=/blackout_kick\nactions.rotation_dfb+=/rising_sun_kick,if=talent.rising_sun_kick.enabled\nactions.rotation_dfb+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled&buff.rushing_jade_wind.remains<1\nactions.rotation_dfb+=/breath_of_fire\nactions.rotation_dfb+=/keg_smash\nactions.rotation_dfb+=/black_ox_brew,if=energy+energy.regen*(cooldown.keg_smash.full_recharge_time*(1-cooldown.keg_smash.charges_fractional))>=65&talent.black_ox_brew.enabled\nactions.rotation_dfb+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_dfb+=/spinning_crane_kick,if=active_enemies>1||(talent.walk_with_the_ox.enabled&talent.charred_passions.enabled)\nactions.rotation_dfb+=/expel_harm,if=energy+energy.regen*(cooldown.keg_smash.full_recharge_time*(1-cooldown.keg_smash.charges_fractional))>=65\nactions.rotation_dfb+=/tiger_palm,if=active_enemies=1\nactions.rotation_dfb+=/celestial_brew,if=talent.celestial_brew.enabled\nactions.rotation_dfb+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_dfb+=/chi_burst,if=talent.chi_burst.enabled\nactions.rotation_dfb+=/call_action_list,name=rotation_fallback\n\nactions.rotation_chp+=/breath_of_fire,if=!buff.charred_passions.up\nactions.rotation_chp+=/blackout_kick\nactions.rotation_chp+=/rising_sun_kick,if=talent.rising_sun_kick.enabled\nactions.rotation_chp+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled&buff.rushing_jade_wind.remains<1\nactions.rotation_chp+=/keg_smash\nactions.rotation_chp+=/black_ox_brew,if=energy+energy.regen*(cooldown.keg_smash.full_recharge_time*(1-cooldown.keg_smash.charges_fractional))>=65&talent.black_ox_brew.enabled\nactions.rotation_chp+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_chp+=/spinning_crane_kick,if=active_enemies>1||(talent.walk_with_the_ox.enabled&talent.charred_passions.enabled)\nactions.rotation_chp+=/expel_harm,if=energy+energy.regen*(cooldown.keg_smash.full_recharge_time*(1-cooldown.keg_smash.charges_fractional))>=65\nactions.rotation_chp+=/tiger_palm,if=active_enemies=1\nactions.rotation_chp+=/celestial_brew,if=talent.celestial_brew.enabled&!buff.blackout_combo.up\nactions.rotation_chp+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_chp+=/chi_burst,if=talent.chi_burst.enabled\nactions.rotation_chp+=/call_action_list,name=rotation_fallback\n\nactions.rotation_fallback+=/rising_sun_kick,if=talent.rising_sun_kick.enabled\nactions.rotation_fallback+=/keg_smash\nactions.rotation_fallback+=/breath_of_fire,if=talent.breath_of_fire.enabled\nactions.rotation_fallback+=/blackout_kick\nactions.rotation_fallback+=/black_ox_brew,if=energy+energy.regen*(cooldown.keg_smash.remains+execute_time)>=65&talent.black_ox_brew.enabled\nactions.rotation_fallback+=/rushing_jade_wind,if=talent.rushing_jade_wind.enabled\nactions.rotation_fallback+=/spinning_crane_kick,if=active_enemies>1||(talent.walk_with_the_ox.enabled&talent.charred_passions.enabled)\nactions.rotation_fallback+=/expel_harm\nactions.rotation_fallback+=/tiger_palm,if=active_enemies=1\nactions.rotation_fallback+=/celestial_brew,if=!buff.blackout_combo.up&talent.celestial_brew.enabled\nactions.rotation_fallback+=/chi_wave,if=talent.chi_wave.enabled\nactions.rotation_fallback+=/chi_burst,if=talent.chi_burst.enabled",
},
["Havoc"] = {
["source"] = "SimulationCraft",
["builtIn"] = true,
["date"] = 20240114,
["spec"] = 577,
["desc"] = "2024-01-14: Don't let opener cause a no-recommendation scenario.\n\n2024-01-03: Resync with SimulationCraft.\n\n2023-11-29: Tweak opener & remove desired_targets references.\n\n2023-11-14: More relevant sim updates.\n\n2023-11-13: Sim updates.\n\n2023-11-07: Further 10.2 updates.\n\n2023-11-05: Patch 10.2.\n\n2023-07-18:  Removed redundant trinket entries.\n\n2023-07-15:  Revamp from SimulationCraft.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-04:  Add option to Throw Glaive without Blade Dance on CD.\n\n2023-06-25:  Allow generic trinkets to get recommended off-GCD.\n\n2023-06-03:  Move trinkets in default priority.\n\n2023-05-12:  Trinket updates from SimC.\n\n2023-04-30:  Updated from SimC for 10.1.\n\n2023-02-27:  If Fel Rush and Vengeful Retreat are disabled (despite Momentum and Tactical Retreat being talented), the priority will allow Essence Break to be recommended.\n\n2023-02-18:  Options regarding Fel Rush and Vengeful Retreat were revised. Only the filler/movement recommendations can be turned off using Havoc's specialization settings.  The entries associated with Isolated Prey, Momentum, Unbound Chaos, Initiative, and Vengeful Retreat may always be recommended if those talents are selected.",
["profile"] = "actions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)\nactions.precombat+=/arcane_torrent\nactions.precombat+=/immolation_aura\n\nactions+=/disrupt\nactions+=/consume_magic\nactions+=/call_action_list,name=cooldown\nactions+=/fel_rush,if=buff.unbound_chaos.up&buff.unbound_chaos.remains<gcd.max*2\nactions+=/variable,name=fel_barrage,op=set,value=talent.fel_barrage&(cooldown.fel_barrage.remains<gcd.max*7&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in<gcd.max*7||raid_event.adds.in>90)&(cooldown.metamorphosis.remains||active_enemies>2)||buff.fel_barrage.up)&!(active_enemies=1&!raid_event.adds.exists)\nactions+=/call_action_list,name=opener,strict=1,if=(cooldown.eye_beam.up||cooldown.metamorphosis.up)&time<15&(raid_event.adds.in>40)\nactions+=/run_action_list,name=fel_barrage,if=variable.fel_barrage&raid_event.adds.up\nactions+=/immolation_aura,if=active_enemies>2&talent.ragefire&buff.unbound_chaos.down&(!talent.fel_barrage||cooldown.fel_barrage.remains>recharge_time)&debuff.essence_break.down\nactions+=/immolation_aura,if=active_enemies>2&talent.ragefire&raid_event.adds.up&raid_event.adds.remains<15&raid_event.adds.remains>5&debuff.essence_break.down\nactions+=/fel_rush,if=buff.unbound_chaos.up&active_enemies>2&(!talent.inertia||cooldown.eye_beam.remains+2>buff.unbound_chaos.remains)\nactions+=/vengeful_retreat,use_off_gcd=1,if=talent.initiative&(cooldown.eye_beam.remains>15&gcd.remains<0.3||gcd.remains<0.1&cooldown.eye_beam.remains<=gcd.remains&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*2))&time>4\nactions+=/run_action_list,name=fel_barrage,if=variable.fel_barrage||!talent.demon_blades&talent.fel_barrage&(buff.fel_barrage.up||cooldown.fel_barrage.up)&buff.metamorphosis.down\nactions+=/run_action_list,name=meta,strict=1,if=buff.metamorphosis.up\nactions+=/fel_rush,if=buff.unbound_chaos.up&talent.inertia&buff.inertia.down&cooldown.blade_dance.remains<4&cooldown.eye_beam.remains>5&(action.immolation_aura.charges>0||action.immolation_aura.recharge_time+2<cooldown.eye_beam.remains||cooldown.eye_beam.remains>buff.unbound_chaos.remains-2)\nactions+=/fel_rush,if=talent.momentum&cooldown.eye_beam.remains<gcd.max*2\nactions+=/immolation_aura,if=buff.unbound_chaos.down&full_recharge_time<gcd.max*2&(raid_event.adds.in>full_recharge_time||active_enemies>desired_targets)\nactions+=/immolation_aura,if=immolation_aura,if=active_enemies>desired_targets&buff.unbound_chaos.down&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions+=/immolation_aura,if=talent.inertia&buff.unbound_chaos.down&cooldown.eye_beam.remains<5&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions+=/immolation_aura,if=talent.inertia&buff.inertia.down&buff.unbound_chaos.down&recharge_time+5<cooldown.eye_beam.remains&cooldown.blade_dance.remains&cooldown.blade_dance.remains<4&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)&charges_fractional>1.00\nactions+=/immolation_aura,if=fight_remains<15&cooldown.blade_dance.remains\nactions+=/eye_beam,if=!talent.essence_break&(!talent.chaotic_transformation||cooldown.metamorphosis.remains<5+3*talent.shattered_destiny||cooldown.metamorphosis.remains>15)&(active_enemies>desired_targets*2||raid_event.adds.in>30-talent.cycle_of_hatred.rank*13)\nactions+=/eye_beam,if=talent.essence_break&(cooldown.essence_break.remains<gcd.max*2+5*talent.shattered_destiny||talent.shattered_destiny&cooldown.essence_break.remains>10)&(cooldown.blade_dance.remains<7||raid_event.adds.up)&(!talent.initiative||cooldown.vengeful_retreat.remains>10||raid_event.adds.up)&(active_enemies+3>=desired_targets+raid_event.adds.count||raid_event.adds.in>30-talent.cycle_of_hatred.rank*6)&(!talent.inertia||buff.unbound_chaos.up||action.immolation_aura.charges=0&action.immolation_aura.recharge_time>5)&(!raid_event.adds.up||raid_event.adds.remains>8)||fight_remains<10\nactions+=/blade_dance,if=cooldown.eye_beam.remains>gcd.max||cooldown.eye_beam.up\nactions+=/glaive_tempest,if=active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10\nactions+=/sigil_of_flame,if=active_enemies>3\nactions+=/chaos_strike,if=debuff.essence_break.up\nactions+=/felblade\nactions+=/throw_glaive,if=full_recharge_time<=cooldown.blade_dance.remains&cooldown.metamorphosis.remains>5&talent.soulscar&set_bonus.tier31_2pc\nactions+=/throw_glaive,if=!set_bonus.tier31_2pc&(active_enemies>1||talent.soulscar)\nactions+=/chaos_strike,if=cooldown.eye_beam.remains>gcd.max*2||fury>80\nactions+=/immolation_aura,if=!talent.inertia&(raid_event.adds.in>full_recharge_time||active_enemies>desired_targets&active_enemies>2)\nactions+=/sigil_of_flame,if=buff.out_of_range.down&debuff.essence_break.down&(!talent.fel_barrage||cooldown.fel_barrage.remains>25||(active_enemies=1&!raid_event.adds.exists))\nactions+=/demons_bite\nactions+=/fel_rush,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)\nactions+=/arcane_torrent,if=buff.out_of_range.down&debuff.essence_break.down&fury<100\n\nactions.meta+=/death_sweep,if=buff.metamorphosis.remains<gcd.max\nactions.meta+=/annihilation,if=buff.metamorphosis.remains<gcd.max\nactions.meta+=/fel_rush,if=buff.unbound_chaos.up&talent.inertia\nactions.meta+=/fel_rush,if=talent.momentum&buff.momentum.remains<gcd.max*2\nactions.meta+=/annihilation,if=buff.inner_demon.up&(cooldown.eye_beam.remains<gcd.max*3&cooldown.blade_dance.remains||cooldown.metamorphosis.remains<gcd.max*3)\nactions.meta+=/essence_break,if=fury>20&(cooldown.metamorphosis.remains>10||cooldown.blade_dance.remains<gcd.max*2)&(buff.unbound_chaos.down||buff.inertia.up||!talent.inertia)||fight_remains<10\nactions.meta+=/immolation_aura,if=debuff.essence_break.down&cooldown.blade_dance.remains>gcd.max+0.5&buff.unbound_chaos.down&talent.inertia&buff.inertia.down&full_recharge_time+3<cooldown.eye_beam.remains&buff.metamorphosis.remains>5\nactions.meta+=/death_sweep\nactions.meta+=/eye_beam,if=debuff.essence_break.down&buff.inner_demon.down\nactions.meta+=/glaive_tempest,if=debuff.essence_break.down&(cooldown.blade_dance.remains>gcd.max*2||fury>60)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>10)\nactions.meta+=/sigil_of_flame,if=active_enemies>2\nactions.meta+=/annihilation,if=cooldown.blade_dance.remains>gcd.max*2||fury>60||buff.metamorphosis.remains<5&cooldown.felblade.up\nactions.meta+=/sigil_of_flame,if=buff.metamorphosis.remains>5\nactions.meta+=/felblade\nactions.meta+=/sigil_of_flame,if=debuff.essence_break.down\nactions.meta+=/immolation_aura,if=buff.out_of_range.down&recharge_time<(cooldown.eye_beam.remains<?buff.metamorphosis.remains)&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>full_recharge_time)\nactions.meta+=/fel_rush,if=talent.momentum\nactions.meta+=/fel_rush,if=buff.unbound_chaos.down&recharge_time<cooldown.eye_beam.remains&debuff.essence_break.down&(cooldown.eye_beam.remains>8||charges_fractional>1.01)&buff.out_of_range.down\nactions.meta+=/demons_bite\n\nactions.cooldown+=/metamorphosis,if=(!talent.initiative||cooldown.vengeful_retreat.remains)&((!talent.demonic||prev_gcd.1.death_sweep||prev_gcd.2.death_sweep||prev_gcd.3.death_sweep)&cooldown.eye_beam.remains&(!talent.essence_break||debuff.essence_break.up)&buff.fel_barrage.down&(raid_event.adds.in>40||(raid_event.adds.remains>8||!talent.fel_barrage)&active_enemies>2)||!talent.chaotic_transformation||fight_remains<30)\nactions.cooldown+=/potion,if=fight_remains<35||buff.metamorphosis.up\nactions.cooldown+=/use_item,slot=trinket1,use_off_gcd=1,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up)&(raid_event.adds.in>trinket.1.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.1.has_buff.any||fight_remains<25)&(!equipped.witherbarks_branch||trinket.2.cooldown.remains>20)&time>0\nactions.cooldown+=/use_item,slot=trinket2,use_off_gcd=1,if=((cooldown.eye_beam.remains<gcd.max&active_enemies>1||buff.metamorphosis.up)&(raid_event.adds.in>trinket.2.cooldown.duration-15||raid_event.adds.remains>8)||!trinket.2.has_buff.any||fight_remains<25)&(!equipped.witherbarks_branch||trinket.1.cooldown.remains>20)&time>0\nactions.cooldown+=/use_item,name=witherbarks_branch,if=(talent.essence_break&cooldown.essence_break.remains<gcd.max||!talent.essence_break)&(active_enemies+3>=desired_targets+raid_event.adds.count||raid_event.adds.in>105)||fight_remains<25\nactions.cooldown+=/the_hunt,if=debuff.essence_break.down&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>(1+!set_bonus.tier31_2pc)*45)&time>5\nactions.cooldown+=/elysian_decree,if=debuff.essence_break.down\n\nactions.opener+=/use_items\nactions.opener+=/vengeful_retreat,if=prev_gcd.1.death_sweep\nactions.opener+=/metamorphosis,if=prev_gcd.1.death_sweep||(!talent.chaotic_transformation)&(!talent.initiative||cooldown.vengeful_retreat.remains>2)||!talent.demonic\nactions.opener+=/felblade,if=debuff.essence_break.down,line_cd=60\nactions.opener+=/potion\nactions.opener+=/immolation_aura,if=charges=2&buff.unbound_chaos.down&(buff.inertia.down||active_enemies>2)\nactions.opener+=/annihilation,if=buff.inner_demon.up&(!talent.chaotic_transformation||cooldown.metamorphosis.up)\nactions.opener+=/eye_beam,if=debuff.essence_break.down&buff.inner_demon.down&(!buff.metamorphosis.up||cooldown.blade_dance.remains)\nactions.opener+=/fel_rush,if=talent.inertia&(buff.inertia.down||active_enemies>2)&buff.unbound_chaos.up\nactions.opener+=/the_hunt,if=active_enemies>desired_targets||raid_event.adds.in>40+50*!set_bonus.tier31_2pc\nactions.opener+=/essence_break\nactions.opener+=/death_sweep\nactions.opener+=/annihilation\nactions.opener+=/demons_bite\n\nactions.fel_barrage+=/variable,name=generator_up,op=set,value=cooldown.felblade.remains<gcd.max||cooldown.sigil_of_flame.remains<gcd.max\nactions.fel_barrage+=/variable,name=fury_gen,op=set,value=1%(2.6*attack_haste)*12+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10\nactions.fel_barrage+=/variable,name=gcd_drain,op=set,value=gcd.max*32\nactions.fel_barrage+=/annihilation,if=buff.inner_demon.up\nactions.fel_barrage+=/eye_beam,if=buff.fel_barrage.down&(active_enemies>1&raid_event.adds.up||raid_event.adds.in>40)\nactions.fel_barrage+=/essence_break,if=buff.fel_barrage.down&buff.metamorphosis.up\nactions.fel_barrage+=/death_sweep,if=buff.fel_barrage.down\nactions.fel_barrage+=/immolation_aura,if=buff.unbound_chaos.down&(active_enemies>2||buff.fel_barrage.up)\nactions.fel_barrage+=/glaive_tempest,if=buff.fel_barrage.down&active_enemies>1\nactions.fel_barrage+=/blade_dance,if=buff.fel_barrage.down\nactions.fel_barrage+=/fel_barrage,if=fury>100&(raid_event.adds.in>90||raid_event.adds.in<gcd.max||raid_event.adds.remains>4&active_enemies>2)\nactions.fel_barrage+=/fel_rush,if=buff.unbound_chaos.up&fury>20&buff.fel_barrage.up\nactions.fel_barrage+=/sigil_of_flame,if=fury.deficit>40&buff.fel_barrage.up\nactions.fel_barrage+=/felblade,if=buff.fel_barrage.up&fury.deficit>40\nactions.fel_barrage+=/death_sweep,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fel_barrage+=/glaive_tempest,if=fury-variable.gcd_drain-30>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fel_barrage+=/blade_dance,if=fury-variable.gcd_drain-35>0&(buff.fel_barrage.remains<3||variable.generator_up||fury>80||variable.fury_gen>18)\nactions.fel_barrage+=/arcane_torrent,if=fury.deficit>40&buff.fel_barrage.up\nactions.fel_barrage+=/fel_rush,if=buff.unbound_chaos.up\nactions.fel_barrage+=/the_hunt,if=fury>40&(active_enemies>=desired_targets+raid_event.adds.count||raid_event.adds.in>(1+set_bonus.tier31_2pc)*40)\nactions.fel_barrage+=/demons_bite",
["version"] = 20240114,
["warnings"] = "The import for 'opener' required some automated changes.\nLine 3: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 3: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 3: Converted 'talent.demonic' to 'talent.demonic.enabled' (1x).\nLine 7: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 9: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 5: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 8: Converted 'talent.ragefire' to 'talent.ragefire.enabled' (1x).\nLine 8: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 9: Converted 'talent.ragefire' to 'talent.ragefire.enabled' (1x).\nLine 10: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 11: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 12: Converted 'talent.demon_blades' to 'talent.demon_blades.enabled' (1x).\nLine 12: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 14: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 15: Converted 'talent.momentum' to 'talent.momentum.enabled' (1x).\nLine 18: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 19: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 21: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 21: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 21: Converted 'talent.shattered_destiny' to 'talent.shattered_destiny.enabled' (1x).\nLine 22: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 22: Converted 'talent.shattered_destiny' to 'talent.shattered_destiny.enabled' (1x).\nLine 22: Converted 'talent.shattered_destiny' to 'talent.shattered_destiny.enabled' (1x).\nLine 22: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 22: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 28: Converted 'talent.soulscar' to 'talent.soulscar.enabled' (1x).\nLine 29: Converted 'talent.soulscar' to 'talent.soulscar.enabled' (1x).\nLine 31: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 32: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 1: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 1: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 1: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\n\nThe import for 'meta' required some automated changes.\nLine 3: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 4: Converted 'talent.momentum' to 'talent.momentum.enabled' (1x).\nLine 6: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 7: Converted 'talent.inertia' to 'talent.inertia.enabled' (1x).\nLine 17: Converted 'talent.momentum' to 'talent.momentum.enabled' (1x).\n\nThe import for 'cooldown' required some automated changes.\nLine 1: Converted 'talent.initiative' to 'talent.initiative.enabled' (1x).\nLine 1: Converted 'talent.demonic' to 'talent.demonic.enabled' (1x).\nLine 1: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 1: Converted 'talent.fel_barrage' to 'talent.fel_barrage.enabled' (1x).\nLine 1: Converted 'talent.chaotic_transformation' to 'talent.chaotic_transformation.enabled' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_buff.any' (1x).\nLine 3: Converted 'trinket.1.has_buff.any' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_buff.any' (1x).\nLine 4: Converted 'trinket.2.has_buff.any' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nLine 5: Converted 'talent.essence_break' to 'talent.essence_break.enabled' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - any\n\nThe import for 'fel_barrage' required some automated changes.\nLine 2: Converted operations in '1%(2.6*attack_haste)*12+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10' to '1/(2.6*attack_haste)*12+buff.immolation_aura.stack*6+buff.tactical_retreat.up*10'.\n\nImported 6 action lists.\n",
["author"] = "SimC",
["lists"] = {
["opener"] = {
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.death_sweep",
["action"] = "vengeful_retreat",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.death_sweep || ( ! talent.chaotic_transformation.enabled ) & ( ! talent.initiative.enabled || cooldown.vengeful_retreat.remains > 2 ) || ! talent.demonic.enabled",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down",
["action"] = "felblade",
["line_cd"] = "60",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges = 2 & buff.unbound_chaos.down & ( buff.inertia.down || active_enemies > 2 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up & ( ! talent.chaotic_transformation.enabled || cooldown.metamorphosis.up )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & buff.inner_demon.down & ( ! buff.metamorphosis.up || cooldown.blade_dance.remains )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & ( buff.inertia.down || active_enemies > 2 ) & buff.unbound_chaos.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > desired_targets || raid_event.adds.in > 40 + 50 * ! set_bonus.tier31_2pc",
["action"] = "the_hunt",
},
{
["action"] = "essence_break",
["enabled"] = true,
},
{
["action"] = "death_sweep",
["enabled"] = true,
},
{
["action"] = "annihilation",
["enabled"] = true,
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "disrupt",
["enabled"] = true,
},
{
["action"] = "consume_magic",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldown",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & buff.unbound_chaos.remains < gcd.max * 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.fel_barrage.enabled & ( cooldown.fel_barrage.remains < gcd.max * 7 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in < gcd.max * 7 || raid_event.adds.in > 90 ) & ( cooldown.metamorphosis.remains || active_enemies > 2 ) || buff.fel_barrage.up ) & ! ( active_enemies = 1 & ! raid_event.adds.exists )",
["var_name"] = "fel_barrage",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( cooldown.eye_beam.up || cooldown.metamorphosis.up ) & time < 15 & ( raid_event.adds.in > 40 )",
["list_name"] = "opener",
},
{
["enabled"] = true,
["criteria"] = "variable.fel_barrage & raid_event.adds.up",
["action"] = "run_action_list",
["list_name"] = "fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & buff.unbound_chaos.down & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > recharge_time ) & debuff.essence_break.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2 & talent.ragefire.enabled & raid_event.adds.up & raid_event.adds.remains < 15 & raid_event.adds.remains > 5 & debuff.essence_break.down",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & active_enemies > 2 & ( ! talent.inertia.enabled || cooldown.eye_beam.remains + 2 > buff.unbound_chaos.remains )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "talent.initiative.enabled & ( cooldown.eye_beam.remains > 15 & gcd.remains < 0.3 || gcd.remains < 0.1 & cooldown.eye_beam.remains <= gcd.remains & ( cooldown.metamorphosis.remains > 10 || cooldown.blade_dance.remains < gcd.max * 2 ) ) & time > 4",
["action"] = "vengeful_retreat",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.fel_barrage || ! talent.demon_blades.enabled & talent.fel_barrage.enabled & ( buff.fel_barrage.up || cooldown.fel_barrage.up ) & buff.metamorphosis.down",
["action"] = "run_action_list",
["list_name"] = "fel_barrage",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.metamorphosis.up",
["list_name"] = "meta",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & talent.inertia.enabled & buff.inertia.down & cooldown.blade_dance.remains < 4 & cooldown.eye_beam.remains > 5 & ( action.immolation_aura.charges > 0 || action.immolation_aura.recharge_time + 2 < cooldown.eye_beam.remains || cooldown.eye_beam.remains > buff.unbound_chaos.remains - 2 )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "talent.momentum.enabled & cooldown.eye_beam.remains < gcd.max * 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & full_recharge_time < gcd.max * 2 & ( raid_event.adds.in > full_recharge_time || active_enemies > desired_targets )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > desired_targets & buff.unbound_chaos.down & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.unbound_chaos.down & cooldown.eye_beam.remains < 5 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.inertia.enabled & buff.inertia.down & buff.unbound_chaos.down & recharge_time + 5 < cooldown.eye_beam.remains & cooldown.blade_dance.remains & cooldown.blade_dance.remains < 4 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time ) & charges_fractional > 1.00",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 15 & cooldown.blade_dance.remains",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "! talent.essence_break.enabled & ( ! talent.chaotic_transformation.enabled || cooldown.metamorphosis.remains < 5 + 3 * talent.shattered_destiny.enabled || cooldown.metamorphosis.remains > 15 ) & ( active_enemies > desired_targets * 2 || raid_event.adds.in > 30 - talent.cycle_of_hatred.rank * 13 )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "talent.essence_break.enabled & ( cooldown.essence_break.remains < gcd.max * 2 + 5 * talent.shattered_destiny.enabled || talent.shattered_destiny.enabled & cooldown.essence_break.remains > 10 ) & ( cooldown.blade_dance.remains < 7 || raid_event.adds.up ) & ( ! talent.initiative.enabled || cooldown.vengeful_retreat.remains > 10 || raid_event.adds.up ) & ( active_enemies + 3 >= desired_targets + raid_event.adds.count || raid_event.adds.in > 30 - talent.cycle_of_hatred.rank * 6 ) & ( ! talent.inertia.enabled || buff.unbound_chaos.up || action.immolation_aura.charges = 0 & action.immolation_aura.recharge_time > 5 ) & ( ! raid_event.adds.up || raid_event.adds.remains > 8 ) || fight_remains < 10",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains > gcd.max || cooldown.eye_beam.up",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.up",
["action"] = "chaos_strike",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "full_recharge_time <= cooldown.blade_dance.remains & cooldown.metamorphosis.remains > 5 & talent.soulscar.enabled & set_bonus.tier31_2pc",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "! set_bonus.tier31_2pc & ( active_enemies > 1 || talent.soulscar.enabled )",
["action"] = "throw_glaive",
},
{
["enabled"] = true,
["criteria"] = "cooldown.eye_beam.remains > gcd.max * 2 || fury > 80",
["action"] = "chaos_strike",
},
{
["enabled"] = true,
["criteria"] = "! talent.inertia.enabled & ( raid_event.adds.in > full_recharge_time || active_enemies > desired_targets & active_enemies > 2 )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & ( ! talent.fel_barrage.enabled || cooldown.fel_barrage.remains > 25 || ( active_enemies = 1 & ! raid_event.adds.exists ) )",
["action"] = "sigil_of_flame",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 )",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & debuff.essence_break.down & fury < 100",
["action"] = "arcane_torrent",
},
},
["precombat"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration )",
["var_name"] = "trinket_sync_slot",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration )",
["var_name"] = "trinket_sync_slot",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "immolation_aura",
["enabled"] = true,
},
},
["meta"] = {
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains < gcd.max",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & talent.inertia.enabled",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "talent.momentum.enabled & buff.momentum.remains < gcd.max * 2",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up & ( cooldown.eye_beam.remains < gcd.max * 3 & cooldown.blade_dance.remains || cooldown.metamorphosis.remains < gcd.max * 3 )",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "fury > 20 & ( cooldown.metamorphosis.remains > 10 || cooldown.blade_dance.remains < gcd.max * 2 ) & ( buff.unbound_chaos.down || buff.inertia.up || ! talent.inertia.enabled ) || fight_remains < 10",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & cooldown.blade_dance.remains > gcd.max + 0.5 & buff.unbound_chaos.down & talent.inertia.enabled & buff.inertia.down & full_recharge_time + 3 < cooldown.eye_beam.remains & buff.metamorphosis.remains > 5",
["action"] = "immolation_aura",
},
{
["action"] = "death_sweep",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & buff.inner_demon.down",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( cooldown.blade_dance.remains > gcd.max * 2 || fury > 60 ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > 10 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 2",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "cooldown.blade_dance.remains > gcd.max * 2 || fury > 60 || buff.metamorphosis.remains < 5 & cooldown.felblade.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.metamorphosis.remains > 5",
["action"] = "sigil_of_flame",
},
{
["action"] = "felblade",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.out_of_range.down & recharge_time < ( cooldown.eye_beam.remains <? buff.metamorphosis.remains ) & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > full_recharge_time )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.momentum.enabled",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & recharge_time < cooldown.eye_beam.remains & debuff.essence_break.down & ( cooldown.eye_beam.remains > 8 || charges_fractional > 1.01 ) & buff.out_of_range.down",
["action"] = "fel_rush",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
["cooldown"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.initiative.enabled || cooldown.vengeful_retreat.remains ) & ( ( ! talent.demonic.enabled || prev_gcd.1.death_sweep || prev_gcd.2.death_sweep || prev_gcd.3.death_sweep ) & cooldown.eye_beam.remains & ( ! talent.essence_break.enabled || debuff.essence_break.up ) & buff.fel_barrage.down & ( raid_event.adds.in > 40 || ( raid_event.adds.remains > 8 || ! talent.fel_barrage.enabled ) & active_enemies > 2 ) || ! talent.chaotic_transformation.enabled || fight_remains < 30 )",
["action"] = "metamorphosis",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 35 || buff.metamorphosis.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up ) & ( raid_event.adds.in > trinket.t1.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t1.has_use_buff || fight_remains < 25 ) & ( ! equipped.witherbarks_branch || trinket.t2.cooldown.remains > 20 ) & time > 0",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "( ( cooldown.eye_beam.remains < gcd.max & active_enemies > 1 || buff.metamorphosis.up ) & ( raid_event.adds.in > trinket.t2.cooldown.duration - 15 || raid_event.adds.remains > 8 ) || ! trinket.t2.has_use_buff || fight_remains < 25 ) & ( ! equipped.witherbarks_branch || trinket.t1.cooldown.remains > 20 ) & time > 0",
},
{
["enabled"] = true,
["action"] = "witherbarks_branch",
["criteria"] = "( talent.essence_break.enabled & cooldown.essence_break.remains < gcd.max || ! talent.essence_break.enabled ) & ( active_enemies + 3 >= desired_targets + raid_event.adds.count || raid_event.adds.in > 105 ) || fight_remains < 25",
["name"] = "witherbarks_branch",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > ( 1 + ! set_bonus.tier31_2pc ) * 45 ) & time > 5",
["action"] = "the_hunt",
},
{
["enabled"] = true,
["criteria"] = "debuff.essence_break.down",
["action"] = "elysian_decree",
},
},
["fel_barrage"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.felblade.remains < gcd.max || cooldown.sigil_of_flame.remains < gcd.max",
["var_name"] = "generator_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1 / ( 2.6 * attack_haste ) * 12 + buff.immolation_aura.stack * 6 + buff.tactical_retreat.up * 10",
["var_name"] = "fury_gen",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "gcd.max * 32",
["var_name"] = "gcd_drain",
},
{
["enabled"] = true,
["criteria"] = "buff.inner_demon.up",
["action"] = "annihilation",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & ( active_enemies > 1 & raid_event.adds.up || raid_event.adds.in > 40 )",
["action"] = "eye_beam",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & buff.metamorphosis.up",
["action"] = "essence_break",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.down & ( active_enemies > 2 || buff.fel_barrage.up )",
["action"] = "immolation_aura",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down & active_enemies > 1",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.down",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury > 100 & ( raid_event.adds.in > 90 || raid_event.adds.in < gcd.max || raid_event.adds.remains > 4 & active_enemies > 2 )",
["action"] = "fel_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up & fury > 20 & buff.fel_barrage.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "sigil_of_flame",
},
{
["enabled"] = true,
["criteria"] = "buff.fel_barrage.up & fury.deficit > 40",
["action"] = "felblade",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "death_sweep",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 30 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "glaive_tempest",
},
{
["enabled"] = true,
["criteria"] = "fury - variable.gcd_drain - 35 > 0 & ( buff.fel_barrage.remains < 3 || variable.generator_up || fury > 80 || variable.fury_gen > 18 )",
["action"] = "blade_dance",
},
{
["enabled"] = true,
["criteria"] = "fury.deficit > 40 & buff.fel_barrage.up",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "buff.unbound_chaos.up",
["action"] = "fel_rush",
},
{
["enabled"] = true,
["criteria"] = "fury > 40 & ( active_enemies >= desired_targets + raid_event.adds.count || raid_event.adds.in > ( 1 + set_bonus.tier31_2pc ) * 40 )",
["action"] = "the_hunt",
},
{
["action"] = "demons_bite",
["enabled"] = true,
},
},
},
},
["Enhancement"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/sc_shaman.cpp",
["builtIn"] = true,
["date"] = 20231221,
["spec"] = 263,
["desc"] = "2023-11-10:  Incremental sim update.\n\n2023-11-05:  Update for 10.2.\n\n2023-08-08: Add Funnel option and priority from SimC.\n\n2023-07-11: Patch 10.1.5 update.\n\n2023-07-02: Assume Flame Shocks on other targets are potentially out of range; manually apply Flame Shock after target swapping, if needed.\n\n2023-06-26: Updates to Ice Strike / Frost Shock.\n\n2023-05-30: Update Lava Lash usage with Ashen Catalyst.\n\n2023-05-20: Updates to trinkets.\n\n2023-05-14: Fix premature Lightning Bolt with PWave in AOE.\n\n2023-05-12: Add alpha_wolf_min_remains and Flame Shock if PWave is on CD.\n\n2023-05-06: More incremental SimC updates.\n\n2023-05-02: More incremental SimC updates.\n\n2023-04-30: More SimC updates.\n\n2023-04-29: Additional SimC updates.\n\n2023-04-26: Update from SimulationCraft for 10.1.\n\n2023-03-05:  In multi-target scenarios, filler Flame Shock should only be used if Flame Shock is refreshable.",
["lists"] = {
["single"] = {
{
["enabled"] = true,
["criteria"] = "! dot.flame_shock.ticking & talent.lashing_flames.enabled & ( raid_event.adds.in > ( action.primordial_wave.cooldown / ( 1 + set_bonus.tier31_4pc ) ) || raid_event.adds.in < 6 )",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "! ticking & talent.lashing_flames.enabled",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & talent.elemental_spirits.enabled & feral_spirit.active >= 4",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc & raid_event.adds.in >= action.sundering.cooldown",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.crackling_thunder.down & buff.ascendance.up & ti_chain_lightning & ( buff.ascendance.remains > ( cooldown.strike.remains + gcd.max ) )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || talent.deeply_rooted_elements.enabled || ( talent.stormblast.enabled & buff.stormbringer.up )",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_hand.up",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "! buff.windfury_totem.up",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & charges = max_charges",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 8 & buff.primordial_wave.up & raid_event.adds.in > buff.primordial_wave.remains & ( ! buff.splintered_elements.up || fight_remains <= 12 )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 8 & buff.crackling_thunder.up & talent.elemental_spirits.enabled",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 8 & ( feral_spirit.active >= 2 || ! talent.elemental_spirits.enabled )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "! talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack >= 5",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.maelstrom_weapon.stack >= 8 ) || ( talent.static_accumulation.enabled & buff.maelstrom_weapon.stack >= 5 ) ) & buff.primordial_wave.down",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > ( action.primordial_wave.cooldown / ( 1 + set_bonus.tier31_4pc ) ) || raid_event.adds.in < 6",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "talent.elemental_assault.enabled & talent.swirling_maelstrom.enabled",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.lashing_flames.enabled",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= action.sundering.cooldown",
["action"] = "sundering",
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.swirling_maelstrom.enabled & active_dot.flame_shock & buff.maelstrom_weapon.stack < buff.maelstrom_weapon.max_stack",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.down",
["action"] = "lightning_bolt",
},
{
["action"] = "frost_shock",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock",
["action"] = "fire_nova",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "settings.filler_shock",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.crackling_thunder.up & talent.elemental_spirits.enabled",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.down",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.windfury_totem.remains < 30",
["action"] = "windfury_totem",
},
},
["funnel"] = {
{
["enabled"] = true,
["criteria"] = "( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 ) & buff.primordial_wave.up & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! buff.splintered_elements.up || fight_remains <= 12 || raid_event.adds.remains <= gcd.max )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "( talent.molten_assault.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6 ) || ( talent.ashen_catalyst.enabled & buff.ashen_catalyst.stack = buff.ashen_catalyst.max_stack )",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["criteria"] = "! buff.primordial_wave.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "flame_shock",
["description"] = "In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.",
["criteria"] = "( talent.primordial_wave.enabled || talent.fire_nova.enabled ) & ! ticking",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 1 ) || buff.converging_storms.stack = buff.converging_storms.max_stack",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.converging_storms.stack = buff.converging_storms.max_stack",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & buff.crackling_thunder.up",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "( buff.molten_weapon.stack + buff.volcanic_strength.up > buff.crackling_surge.stack ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || ! buff.crash_lightning.up || ( talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0 ) || ( talent.converging_storms.enabled & buff.converging_storms.stack < buff.converging_storms.max_stack )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || set_bonus.tier30_2pc",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock = 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= cycle_enemies )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & ! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "sundering",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "( talent.fire_nova.enabled || talent.primordial_wave.enabled ) & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 3",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.crash_lightning.up & talent.deeply_rooted_elements.enabled",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & buff.cl_crash_lightning.up & active_enemies >= 4",
["action"] = "crash_lightning",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 2",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack >= 5",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.molten_weapon.stack + buff.volcanic_strength.up > buff.crackling_surge.stack ) & buff.maelstrom_weapon.stack >= 5",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.windfury_totem.remains < 30",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! talent.hailstorm.enabled",
["action"] = "frost_shock",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "interrupt of casts.",
["action"] = "wind_shear",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "purge",
},
{
["enabled"] = true,
["criteria"] = "settings.hostile_dispel",
["action"] = "greater_purge",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & fight_remains <= 30 || ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled )",
["action"] = "potion",
},
{
["enabled"] = true,
["name"] = "elementium_pocket_anvil",
["action"] = "elementium_pocket_anvil",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["name"] = "algethar_puzzle_box",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || ( talent.ascendance.enabled & ( cooldown.ascendance.remains < 2 * action.stormstrike.gcd ) ) || boss & ( fight_remains % 180 <= 30 )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket1_is_weird & trinket.t1.has_use_buff & ( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % trinket.t1.cooldown.duration <= trinket.t1.buff_duration ) || ( variable.min_talented_cd_remains >= trinket.t1.cooldown.duration ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket2_is_weird & trinket.t2.has_use_buff & ( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % trinket.t2.cooldown.duration <= trinket.t2.buff_duration ) || ( variable.min_talented_cd_remains >= trinket.t2.cooldown.duration ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["use_off_gcd"] = 1,
["name"] = "beacon_to_the_beyond",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || boss & ( fight_remains % 150 <= 5 )",
},
{
["enabled"] = true,
["action"] = "manic_grieftorch",
["use_off_gcd"] = 1,
["name"] = "manic_grieftorch",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || boss & ( fight_remains % 120 <= 5 )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket1_is_weird & ! trinket.t1.has_use_buff",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket2_is_weird & ! trinket.t2.has_use_buff",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.blood_fury.cooldown <= action.blood_fury.duration ) || ( variable.min_talented_cd_remains >= action.blood_fury.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.berserking.cooldown <= action.berserking.duration ) || ( variable.min_talented_cd_remains >= action.berserking.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.fireblood.cooldown <= action.fireblood.duration ) || ( variable.min_talented_cd_remains >= action.fireblood.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.ancestral_call.cooldown <= action.ancestral_call.duration ) || ( variable.min_talented_cd_remains >= action.ancestral_call.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 1 & ( active_enemies = 1 & ti_lightning_bolt ) || ( active_enemies > 1 & ti_chain_lightning )",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc & ( raid_event.adds.in > ( action.primordial_wave.cooldown / ( 1 + set_bonus.tier31_4pc ) ) || raid_event.adds.in < 6 )",
["action"] = "primordial_wave",
},
{
["action"] = "feral_spirit",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( ( ti_lightning_bolt & active_enemies = 1 & raid_event.adds.in >= action.ascendance.cooldown / 2 ) || ( ti_chain_lightning & active_enemies > 1 ) )",
["action"] = "ascendance",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= action.doom_winds.cooldown || active_enemies > 1",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "single",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & ! funnel",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & funnel",
["list_name"] = "funnel",
},
},
["precombat"] = {
{
["action"] = "windfury_weapon",
["enabled"] = true,
},
{
["action"] = "flametongue_weapon",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.down & ( buff.earth_shield.down || talent.elemental_orbit.enabled )",
["action"] = "lightning_shield",
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.up & buff.earth_shield.down & talent.elemental_orbit.enabled",
["action"] = "earth_shield",
},
{
["enabled"] = true,
["criteria"] = "project_windfury_totem",
["action"] = "totemic_projection",
},
{
["enabled"] = true,
["criteria"] = "time = 0 || buff.windfury_totem.down",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box || trinket.t1.is.manic_grieftorch || trinket.t1.is.elementium_pocket_anvil || trinket.t1.is.beacon_to_the_beyond",
["var_name"] = "trinket1_is_weird",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box || trinket.t2.is.manic_grieftorch || trinket.t2.is.elementium_pocket_anvil || trinket.t2.is.beacon_to_the_beyond",
["var_name"] = "trinket2_is_weird",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( cooldown.feral_spirit.remains / ( 1 + 1.5 * talent.witch_doctors_ancestry.rank ) ) + 1000 * ! talent.feral_spirit.enabled ) <? ( cooldown.doom_winds.remains + 1000 * ! talent.doom_winds.enabled ) <? ( cooldown.ascendance.remains + 1000 * ! talent.ascendance.enabled )",
["var_name"] = "min_talented_cd_remains",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & ( ( talent.unruly_winds.enabled & active_enemies >= 10 ) || active_enemies >= 15 )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.flame_shock >= active_enemies || buff.primordial_wave.remains < gcd.max * settings.pwave_gcds || active_dot.flame_shock >= 6 ) & buff.primordial_wave.up & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! buff.splintered_elements.up || fight_remains <= 12 || raid_event.adds.remains <= gcd.max )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ( talent.primordial_wave.enabled || talent.fire_nova.enabled ) & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["criteria"] = "! buff.primordial_wave.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "flame_shock",
["description"] = "In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.",
["criteria"] = "( talent.primordial_wave.enabled || talent.fire_nova.enabled ) & ! ticking",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || feral_spirit.active >= 2 ) ) ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! talent.crashing_storms.enabled || active_enemies <= 3 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || ! buff.crash_lightning.up || ( talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0 )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || set_bonus.tier30_2pc",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= cycle_enemies )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["action"] = "lava_lash",
["criteria"] = "talent.lashing_flames.enabled",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( talent.molten_assault.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6 ) || ( talent.ashen_catalyst.enabled & buff.ashen_catalyst.stack = buff.ashen_catalyst.max_stack )",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "sundering",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "refreshable & ( talent.fire_nova.enabled || talent.primordial_wave.enabled ) & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 3",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.crash_lightning.up & ( talent.deeply_rooted_elements.enabled || buff.converging_storms.stack = 6 )",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & buff.cl_crash_lightning.up & active_enemies >= 4",
["action"] = "crash_lightning",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 2",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || feral_spirit.active >= 2 ) ) ) & buff.maelstrom_weapon.stack >= 5 & ( ! talent.crashing_storms.enabled || active_enemies <= 3 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.windfury_totem.remains < 30",
["action"] = "windfury_totem",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! talent.hailstorm.enabled",
["action"] = "frost_shock",
},
},
},
["version"] = 20231221,
["warnings"] = "The import for 'single' required some automated changes.\nLine 1: Converted operations in '!dot.flame_shock.ticking&talent.lashing_flames.enabled&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)' to '!dot.flame_shock.ticking&talent.lashing_flames.enabled&(raid_event.adds.in>(action.primordial_wave.cooldown/(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)'.\nLine 16: Converted operations in 'raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6' to 'raid_event.adds.in>(action.primordial_wave.cooldown/(1+set_bonus.tier31_4pc))||raid_event.adds.in<6'.\n\nThe import for 'default' required some automated changes.\nLine 6: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||boss&(fight_remains%%180<=30)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||boss&(fight_remains%180<=30)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.buff.duration' to 'trinket.t1.buff.duration' (1x).\nLine 7: Converted 'trinket.1.buff.duration' to 'trinket.t1.buff_duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted operations in '!variable.trinket1_is_weird&trinket.t1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.t1.cooldown.duration<=trinket.t1.buff_duration)||(variable.min_talented_cd_remains>=trinket.t1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '!variable.trinket1_is_weird&trinket.t1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%trinket.t1.cooldown.duration<=trinket.t1.buff_duration)||(variable.min_talented_cd_remains>=trinket.t1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'trinket.2.buff.duration' to 'trinket.t2.buff.duration' (1x).\nLine 8: Converted 'trinket.2.buff.duration' to 'trinket.t2.buff_duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted operations in '!variable.trinket2_is_weird&trinket.t2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.t2.cooldown.duration<=trinket.t2.buff_duration)||(variable.min_talented_cd_remains>=trinket.t2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '!variable.trinket2_is_weird&trinket.t2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%trinket.t2.cooldown.duration<=trinket.t2.buff_duration)||(variable.min_talented_cd_remains>=trinket.t2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 9: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%150<=5)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%150<=5)'.\nLine 10: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%120<=5)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%120<=5)'.\nLine 11: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 14: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 15: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 16: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 18: Converted operations in 'set_bonus.tier31_2pc&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)' to 'set_bonus.tier31_2pc&(raid_event.adds.in>(action.primordial_wave.cooldown/(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)'.\nLine 20: Converted operations in 'dot.flame_shock.ticking&((ti_lightning_bolt&active_enemies=1&raid_event.adds.in>=action.ascendance.cooldown%2)||(ti_chain_lightning&active_enemies>1))' to 'dot.flame_shock.ticking&((ti_lightning_bolt&active_enemies=1&raid_event.adds.in>=action.ascendance.cooldown/2)||(ti_chain_lightning&active_enemies>1))'.\nThe following auras were used in the action list but were not found in the addon database:\n - duration\n\nThe import for 'precombat' required some automated changes.\nLine 7: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 7: Converted 'trinket.1.is.elementium_pocket_anvil' to 'trinket.t1.is.elementium_pocket_anvil' (1x).\nLine 7: Converted 'trinket.1.is.beacon_to_the_beyond' to 'trinket.t1.is.beacon_to_the_beyond' (1x).\nLine 8: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 8: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 8: Converted 'trinket.2.is.elementium_pocket_anvil' to 'trinket.t2.is.elementium_pocket_anvil' (1x).\nLine 8: Converted 'trinket.2.is.beacon_to_the_beyond' to 'trinket.t2.is.beacon_to_the_beyond' (1x).\nLine 9: Converted operations in '((cooldown.feral_spirit.remains%(1+1.5*talent.witch_doctors_ancestry.rank))+1000*!talent.feral_spirit.enabled)<?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)<?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)' to '((cooldown.feral_spirit.remains/(1+1.5*talent.witch_doctors_ancestry.rank))+1000*!talent.feral_spirit.enabled)<?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)<?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)'.\n\nImported 5 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/windfury_weapon\nactions.precombat+=/flametongue_weapon\nactions.precombat+=/lightning_shield,if=buff.lightning_shield.down&(buff.earth_shield.down||talent.elemental_orbit.enabled)\nactions.precombat+=/earth_shield,if=buff.lightning_shield.up&buff.earth_shield.down&talent.elemental_orbit.enabled\nactions.precombat+=/totemic_projection,if=project_windfury_totem\nactions.precombat+=/windfury_totem,if=time=0||buff.windfury_totem.down\nactions.precombat+=/variable,name=trinket1_is_weird,value=trinket.1.is.algethar_puzzle_box||trinket.1.is.manic_grieftorch||trinket.1.is.elementium_pocket_anvil||trinket.1.is.beacon_to_the_beyond\nactions.precombat+=/variable,name=trinket2_is_weird,value=trinket.2.is.algethar_puzzle_box||trinket.2.is.manic_grieftorch||trinket.2.is.elementium_pocket_anvil||trinket.2.is.beacon_to_the_beyond\nactions.precombat+=/variable,name=min_talented_cd_remains,value=((cooldown.feral_spirit.remains%(1+1.5*talent.witch_doctors_ancestry.rank))+1000*!talent.feral_spirit.enabled)<?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)<?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)\n\n# interrupt of casts.\nactions+=/wind_shear\nactions+=/purge,if=settings.hostile_dispel\nactions+=/greater_purge,if=settings.hostile_dispel\nactions+=/potion,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&fight_remains<=30||!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled)\nactions+=/use_item,name=elementium_pocket_anvil,use_off_gcd=1\nactions+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||boss&(fight_remains%%180<=30)\nactions+=/use_item,slot=trinket1,if=!variable.trinket1_is_weird&trinket.1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.1.cooldown.duration<=trinket.1.buff.duration)||(variable.min_talented_cd_remains>=trinket.1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/use_item,slot=trinket2,if=!variable.trinket2_is_weird&trinket.2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.2.cooldown.duration<=trinket.2.buff.duration)||(variable.min_talented_cd_remains>=trinket.2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/use_item,name=beacon_to_the_beyond,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%150<=5)\nactions+=/use_item,name=manic_grieftorch,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%120<=5)\nactions+=/use_item,slot=trinket1,if=!variable.trinket1_is_weird&!trinket.1.has_use_buff\nactions+=/use_item,slot=trinket2,if=!variable.trinket2_is_weird&!trinket.2.has_use_buff\nactions+=/blood_fury,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/berserking,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/fireblood,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/ancestral_call,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\n## actions+=/invoke_external_buff,name=power_infusion,if=(talent.ascendance.enabled&talent.thorims_invocation.enabled&buff.ascendance.up)||(!talent.thorims_invocation.enabled&talent.feral_spirit.enabled&buff.feral_spirit.up)||(!talent.thorims_invocation.enabled&!talent.feral_spirit.enabled)||fight_remains<=20\nactions+=/windstrike,if=talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>1&(active_enemies=1&ti_lightning_bolt)||(active_enemies>1&ti_chain_lightning)\nactions+=/primordial_wave,if=set_bonus.tier31_2pc&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)\nactions+=/feral_spirit\nactions+=/ascendance,if=dot.flame_shock.ticking&((ti_lightning_bolt&active_enemies=1&raid_event.adds.in>=action.ascendance.cooldown%2)||(ti_chain_lightning&active_enemies>1))\nactions+=/doom_winds,if=raid_event.adds.in>=action.doom_winds.cooldown||active_enemies>1\nactions+=/call_action_list,name=single,strict=1,if=active_enemies=1\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>1&!funnel\nactions+=/call_action_list,name=funnel,strict=1,if=active_enemies>1&funnel\n\nactions.single+=/primordial_wave,if=!dot.flame_shock.ticking&talent.lashing_flames.enabled&(raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6)\nactions.single+=/flame_shock,if=!ticking&talent.lashing_flames.enabled\nactions.single+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5&talent.elemental_spirits.enabled&feral_spirit.active>=4\nactions.single+=/sundering,if=set_bonus.tier30_2pc&raid_event.adds.in>=action.sundering.cooldown\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.crackling_thunder.down&buff.ascendance.up&ti_chain_lightning&(buff.ascendance.remains>(cooldown.strike.remains+gcd))\nactions.single+=/stormstrike,if=buff.doom_winds.up||talent.deeply_rooted_elements.enabled||(talent.stormblast.enabled&buff.stormbringer.up)\nactions.single+=/lava_lash,if=buff.hot_hand.up\nactions.single+=/windfury_totem,if=!buff.windfury_totem.up\nactions.single+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5&charges=max_charges\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=8&buff.primordial_wave.up&raid_event.adds.in>buff.primordial_wave.remains&(!buff.splintered_elements.up||fight_remains<=12)\nactions.single+=/chain_lightning,if=buff.maelstrom_weapon.stack>=8&buff.crackling_thunder.up&talent.elemental_spirits.enabled\nactions.single+=/elemental_blast,if=buff.maelstrom_weapon.stack>=8&(feral_spirit.active>=2||!talent.elemental_spirits.enabled)\nactions.single+=/lava_burst,if=!talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>=5\nactions.single+=/lightning_bolt,if=((buff.maelstrom_weapon.stack>=8)||(talent.static_accumulation.enabled&buff.maelstrom_weapon.stack>=5))&buff.primordial_wave.down\nactions.single+=/crash_lightning,if=talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0\nactions.single+=/primordial_wave,if=raid_event.adds.in>(action.primordial_wave.cooldown%(1+set_bonus.tier31_4pc))||raid_event.adds.in<6\nactions.single+=/flame_shock,if=!ticking\nactions.single+=/ice_strike,if=talent.elemental_assault.enabled&talent.swirling_maelstrom.enabled\nactions.single+=/lava_lash,if=talent.lashing_flames.enabled\nactions.single+=/ice_strike,if=!buff.ice_strike.up\nactions.single+=/frost_shock,if=buff.hailstorm.up\nactions.single+=/lava_lash\nactions.single+=/ice_strike\nactions.single+=/windstrike\nactions.single+=/stormstrike\nactions.single+=/sundering,if=raid_event.adds.in>=action.sundering.cooldown\nactions.single+=/bag_of_tricks\nactions.single+=/fire_nova,if=talent.swirling_maelstrom.enabled&active_dot.flame_shock&buff.maelstrom_weapon.stack<buff.maelstrom_weapon.max_stack\nactions.single+=/lightning_bolt,if=talent.hailstorm.enabled&buff.maelstrom_weapon.stack>=5&buff.primordial_wave.down\nactions.single+=/frost_shock\nactions.single+=/crash_lightning\nactions.single+=/fire_nova,if=active_dot.flame_shock\nactions.single+=/earth_elemental\nactions.single+=/flame_shock,if=settings.filler_shock\nactions.single+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5&buff.crackling_thunder.up&talent.elemental_spirits.enabled\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.primordial_wave.down\nactions.single+=/windfury_totem,if=buff.windfury_totem.remains<30\n\nactions.aoe+=/crash_lightning,if=talent.crashing_storms.enabled&((talent.unruly_winds.enabled&active_enemies>=10)||active_enemies>=15)\nactions.aoe+=/lightning_bolt,if=(active_dot.flame_shock>=active_enemies||buff.primordial_wave.remains<gcd*settings.pwave_gcds||active_dot.flame_shock>=6)&buff.primordial_wave.up&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!buff.splintered_elements.up||fight_remains<=12||raid_event.adds.remains<=gcd)\nactions.aoe+=/lava_lash,if=talent.molten_assault.enabled&(talent.primordial_wave.enabled||talent.fire_nova.enabled)&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up\n# In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.\nactions.aoe+=/flame_shock,if=(talent.primordial_wave.enabled||talent.fire_nova.enabled)&!ticking\nactions.aoe+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||feral_spirit.active>=2)))&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!talent.crashing_storms.enabled||active_enemies<=3)\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.aoe+=/crash_lightning,if=buff.doom_winds.up||!buff.crash_lightning.up||(talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0)\nactions.aoe+=/sundering,if=buff.doom_winds.up||set_bonus.tier30_2pc\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=cycle_enemies)\nactions.aoe+=/lava_lash,cycle_targets=1,if=talent.lashing_flames.enabled\nactions.aoe+=/lava_lash,if=(talent.molten_assault.enabled&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6)||(talent.ashen_catalyst.enabled&buff.ashen_catalyst.stack=buff.ashen_catalyst.max_stack)\nactions.aoe+=/ice_strike,if=talent.hailstorm.enabled\nactions.aoe+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.aoe+=/sundering\nactions.aoe+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&(talent.fire_nova.enabled||talent.primordial_wave.enabled)&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=3\nactions.aoe+=/stormstrike,if=buff.crash_lightning.up&(talent.deeply_rooted_elements.enabled||buff.converging_storms.stack=6)\nactions.aoe+=/crash_lightning,if=talent.crashing_storms.enabled&buff.cl_crash_lightning.up&active_enemies>=4\nactions.aoe+=/windstrike\nactions.aoe+=/stormstrike\nactions.aoe+=/ice_strike\nactions.aoe+=/lava_lash\nactions.aoe+=/crash_lightning\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=2\nactions.aoe+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||feral_spirit.active>=2)))&buff.maelstrom_weapon.stack>=5&(!talent.crashing_storms.enabled||active_enemies<=3)\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5\nactions.aoe+=/windfury_totem,if=buff.windfury_totem.remains<30\nactions.aoe+=/flame_shock,if=!ticking\nactions.aoe+=/frost_shock,if=!talent.hailstorm.enabled\n\nactions.funnel+=/lightning_bolt,if=(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)&buff.primordial_wave.up&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!buff.splintered_elements.up||fight_remains<=12||raid_event.adds.remains<=gcd)\nactions.funnel+=/lava_lash,if=(talent.molten_assault.enabled&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6)||(talent.ashen_catalyst.enabled&buff.ashen_catalyst.stack=buff.ashen_catalyst.max_stack)\nactions.funnel+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up\n# In game, you might not have Primordial Wave ready on pull but you want Flame Shock out for LL, FN, and PWave when it comes available.  Also, existing Flame Shocks may not be close enough to spread.\nactions.funnel+=/flame_shock,if=(talent.primordial_wave.enabled||talent.fire_nova.enabled)&!ticking\nactions.funnel+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/windstrike,if=(talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>1)||buff.converging_storms.stack=buff.converging_storms.max_stack\nactions.funnel+=/stormstrike,if=buff.converging_storms.stack=buff.converging_storms.max_stack\nactions.funnel+=/chain_lightning,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&buff.crackling_thunder.up\nactions.funnel+=/lava_burst,if=(buff.molten_weapon.stack+buff.volcanic_strength.up>buff.crackling_surge.stack)&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/lightning_bolt,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/crash_lightning,if=buff.doom_winds.up||!buff.crash_lightning.up||(talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0)||(talent.converging_storms.enabled&buff.converging_storms.stack<buff.converging_storms.max_stack)\nactions.funnel+=/sundering,if=buff.doom_winds.up||set_bonus.tier30_2pc\nactions.funnel+=/fire_nova,if=active_dot.flame_shock=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=cycle_enemies)\nactions.funnel+=/ice_strike,if=talent.hailstorm.enabled&!buff.ice_strike.up\nactions.funnel+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.funnel+=/sundering\nactions.funnel+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.funnel+=/flame_shock,cycle_targets=1,if=(talent.fire_nova.enabled||talent.primordial_wave.enabled)&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.funnel+=/fire_nova,if=active_dot.flame_shock>=3\nactions.funnel+=/stormstrike,if=buff.crash_lightning.up&talent.deeply_rooted_elements.enabled\nactions.funnel+=/crash_lightning,if=talent.crashing_storms.enabled&buff.cl_crash_lightning.up&active_enemies>=4\nactions.funnel+=/windstrike\nactions.funnel+=/stormstrike\nactions.funnel+=/ice_strike\nactions.funnel+=/lava_lash\nactions.funnel+=/crash_lightning\nactions.funnel+=/fire_nova,if=active_dot.flame_shock>=2\nactions.funnel+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack>=5\nactions.funnel+=/lava_burst,if=(buff.molten_weapon.stack+buff.volcanic_strength.up>buff.crackling_surge.stack)&buff.maelstrom_weapon.stack>=5\nactions.funnel+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5\nactions.funnel+=/windfury_totem,if=buff.windfury_totem.remains<30\nactions.funnel+=/flame_shock,if=!ticking\nactions.funnel+=/frost_shock,if=!talent.hailstorm.enabled",
},
["Blood"] = {
["source"] = "SimulationCraft",
["builtIn"] = true,
["date"] = 20240321,
["spec"] = 250,
["desc"] = "2024-03-21: Update settings for Death Strike.\n\n2023-12-28: Minor SimC update.\n\n2023-11-27: There's this axe...\n\n2023-11-17: Trinket updates.\n\n2023-05-06:  Removed Death's Caress during DRW.\n\n2023-04-30:  Updated for 10.1 from SimC.\n\n2023-04-04:  Minor update from SimC (Vampiric Blood usage).\n\n2023-03-08:  Adjust Tombstone logic for Shattering Bones / Death and Decay.",
["lists"] = {
["drw_up"] = {
{
["enabled"] = true,
["description"] = "Use Blood Boil if Blood Plague is not active.",
["criteria"] = "! dot.blood_plague.ticking",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["description"] = "Use Tombstone if you have 5+ Bone Shield stacks, 2+ runes, 30+ Runic Power, and Shattering Bones is not talented or Death and Decay is not ticking.",
["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! talent.shattering_bone.enabled || ( talent.shattering_bone.enabled & death_and_decay.ticking )",
["action"] = "tombstone",
},
{
["enabled"] = true,
["description"] = "Use Death Strike if Coagulatopathy is down or about to expire or if Icy Talons is down or about to expire.",
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20",
["action"] = "marrowrend",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! death_and_decay.ticking & ( talent.sanguine_ground.enabled || talent.unholy_ground.enabled )",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.blood_boil > 2 & charges_fractional >= 1.1",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( 25 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
["var_name"] = "heart_strike_rp_drw",
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit <= variable.heart_strike_rp_drw || runic_power >= variable.death_strike_dump_amount",
["action"] = "death_strike",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.1 & buff.hemostasis.stack < 5",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "rune.time_to_2 < gcd.max || runic_power.deficit >= variable.heart_strike_rp_drw",
["action"] = "heart_strike",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Interrupt.",
["action"] = "mind_freeze",
},
{
["enabled"] = true,
["description"] = "Interrupt.",
["action"] = "strangulate",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "settings.death_strike_pool_amount",
["var_name"] = "death_strike_dump_amount",
["description"] = "Death Strike at 65+ Runic Power.",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Refresh Bone Shield at 4 stacks with Death's Caress, Consumption, or Blooddrinker, otherwise 5 stacks.",
["value"] = "4",
["var_name"] = "bone_shield_refresh_value",
["action"] = "variable",
["value_else"] = "5",
["criteria"] = "! talent.deaths_caress.enabled || talent.consumption.enabled || talent.blooddrinker.enabled",
},
{
["enabled"] = true,
["description"] = "Use a Potion during Dancing Rune Weapon.",
["criteria"] = "buff.dancing_rune_weapon.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Call the trinkets action list.",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["description"] = "Raise Dead if it's off cooldown.",
["action"] = "raise_dead",
},
{
["enabled"] = true,
["description"] = "Use Icebound Fortitude if you're taking sufficient damage and you don't have Dancing Rune Weapon or Vampiric Blood up.",
["criteria"] = "tanking & incoming_damage_5s >= ibf_damage & ! ( buff.dancing_rune_weapon.up || buff.vampiric_blood.up )",
["action"] = "icebound_fortitude",
},
{
["enabled"] = true,
["description"] = "Use Vampiric Blood if you're taking sufficient damage and you don't have Dancing Rune Weapon, Icebound Fortitude, Vampiric Blood, or Vampiric Strength up.",
["criteria"] = "tanking & incoming_damage_5s >= vb_damage & ! ( buff.dancing_rune_weapon.up || buff.icebound_fortitude.up || buff.vampiric_blood.up || buff.vampiric_strength.up )",
["action"] = "vampiric_blood",
},
{
["enabled"] = true,
["description"] = "Use Rune Tap if you're taking sufficient damage and you don't have Dancing Rune Weapon, Vampiric Blood, or Icebound Fortitude up.",
["criteria"] = "tanking & incoming_damage_5s >= rt_damage & ! ( buff.dancing_rune_weapon.up || buff.vampiric_blood.up || buff.icebound_fortitude.up )",
["action"] = "rune_tap",
},
{
["enabled"] = true,
["description"] = "Use Death Strike if your Blood Shield is going to expire.",
["criteria"] = "settings.save_blood_shield & buff.blood_shield.up & buff.blood_shield.remains <= gcd.max",
["action"] = "death_strike",
},
{
["enabled"] = true,
["description"] = "Use Death's Caress if Bone Shield is not up.",
["criteria"] = "! buff.bone_shield.up",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["description"] = "Use Death and Decay if it's not already up and you have 4 targets, Unholy Ground, Sanguine Ground, or Crimson Scourge.",
["criteria"] = "! death_and_decay.ticking & ( talent.unholy_ground.enabled || talent.sanguine_ground.enabled || spell_targets.death_and_decay > 3 || buff.crimson_scourge.up )",
["action"] = "death_and_decay",
},
{
["enabled"] = true,
["description"] = "Use Death Strike if Coagulatopathy is down or about to expire, if Icy Talons is down or about to expire, if you're below the Death Strike dump amount, if you're below the Heart Strike Runic Power threshold, or if the target is about to die.",
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power >= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || boss & fight_remains < 10",
["action"] = "death_strike",
},
{
["enabled"] = true,
["description"] = "Use Blooddrinker if Dancing Rune Weapon is not up.",
["criteria"] = "! buff.dancing_rune_weapon.up",
["action"] = "blooddrinker",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Call the racials action list.",
["list_name"] = "racials",
},
{
["enabled"] = true,
["description"] = "Use Sacrificial Pact if Dancing Rune Weapon is not active and the Ghoul is about to expire or the bossfight is about to end.",
["criteria"] = "! buff.dancing_rune_weapon.up & ( pet.ghoul.remains < 2 || boss & fight_remains < gcd.max )",
["action"] = "sacrificial_pact",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Call the covenants action list if they are active and valid.",
["strict"] = 1,
["criteria"] = "! covenant.none",
["list_name"] = "covenants",
},
{
["enabled"] = true,
["description"] = "Use Blood Tap if you have 2 or fewer runes, you won't reach 4 charges within the global cooldown, and you're about to cap charges, or if you will not reach 3 runes within global cooldown.",
["criteria"] = "( rune <= 2 & rune.time_to_4 > gcd.max & charges_fractional >= 1.8 ) || rune.time_to_3 > gcd.max",
["action"] = "blood_tap",
},
{
["enabled"] = true,
["description"] = "Use Gorefiend's Grasp if Tightening Grasp is talented.",
["criteria"] = "talent.tightening_grasp.enabled",
["action"] = "gorefiends_grasp",
},
{
["enabled"] = true,
["description"] = "Use Empower Ruen Weapon if you have 6 or fewer runes and you're not about to cap Runic Power.",
["criteria"] = "rune < 6 & runic_power.deficit > 5",
["action"] = "empower_rune_weapon",
},
{
["enabled"] = true,
["description"] = "Use Abomination's Limb on cooldown.",
["action"] = "abomination_limb",
},
{
["enabled"] = true,
["description"] = "Use Dancing Rune Weapon if it is not already active.",
["criteria"] = "! buff.dancing_rune_weapon.up",
["action"] = "dancing_rune_weapon",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Use the drw_up action list if Dancing Rune Weapon is active.",
["strict"] = 1,
["criteria"] = "buff.dancing_rune_weapon.up",
["list_name"] = "drw_up",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Call the standard action list (which will not be used if Dancing Rune Weapon is active).",
["list_name"] = "standard",
},
},
["precombat"] = {
{
["action"] = "fleshcraft",
["enabled"] = true,
},
},
["standard"] = {
{
["enabled"] = true,
["criteria"] = "buff.bone_shield.stack > 5 & rune >= 2 & runic_power.deficit >= 30 & ! talent.shattering_bone.enabled || ( talent.shattering_bone.enabled & death_and_decay.ticking ) & cooldown.dancing_rune_weapon.remains >= 25",
["action"] = "tombstone",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( 10 + spell_targets.heart_strike * talent.heartbreaker.enabled * 2 )",
["var_name"] = "heart_strike_rp",
},
{
["enabled"] = true,
["criteria"] = "buff.coagulopathy.remains <= gcd.max || buff.icy_talons.remains <= gcd.max || runic_power >= variable.death_strike_dump_amount || runic_power.deficit <= variable.heart_strike_rp || boss & fight_remains < 10",
["action"] = "death_strike",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || ( buff.bone_shield.stack < variable.bone_shield_refresh_value + 1 ) ) & runic_power.deficit > 10 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains ) & ! talent.consumption.enabled & ! talent.blooddrinker.enabled & rune.time_to_3 > gcd.max",
["action"] = "deaths_caress",
},
{
["enabled"] = true,
["criteria"] = "( buff.bone_shield.remains <= 4 || buff.bone_shield.stack < variable.bone_shield_refresh_value ) & runic_power.deficit > 20 & ! ( talent.insatiable_blade.enabled & cooldown.dancing_rune_weapon.remains < buff.bone_shield.remains )",
["action"] = "marrowrend",
},
{
["action"] = "consumption",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 & target.time_to_pct_35 < 5 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
},
{
["enabled"] = true,
["criteria"] = "target.time_to_pct_35 < 5 & active_enemies >= 2 & target.time_to_die > ( dot.soul_reaper.remains + 5 )",
["action"] = "soul_reaper",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "runic_power >= 100",
["action"] = "bonestorm",
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.8 & ( buff.hemostasis.stack <= ( 5 - spell_targets.blood_boil ) || spell_targets.blood_boil > 2 )",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "rune.time_to_4 < gcd.max",
["action"] = "heart_strike",
},
{
["enabled"] = true,
["criteria"] = "charges_fractional >= 1.1",
["action"] = "blood_boil",
},
{
["enabled"] = true,
["criteria"] = "( rune > 1 & ( rune.time_to_3 < gcd.max || buff.bone_shield.stack > 7 ) )",
["action"] = "heart_strike",
},
},
["trinkets"] = {
{
["enabled"] = true,
["description"] = "Trinkets",
["name"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff ) || trinket.t1.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_1_buffs",
["description"] = "Prioritize damage dealing on use trinkets over trinkets that give buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff ) || trinket.t2.is.mirror_of_fractured_tomorrows",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "damage_trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_2_buffs & trinket.t2.ilvl >= trinket.t1.ilvl || variable.trinket_1_buffs",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown )",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "( variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["action"] = "use_items",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( variable.trinket_2_exclude || trinket.t2.cooldown.remains || ! trinket.t2.has_cooldown || variable.trinket_2_buffs )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ( buff.dancing_rune_weapon.up || ! talent.dancing_rune_weapon.enabled || cooldown.dancing_rune_weapon.remains > 20 ) & ( variable.trinket_1_exclude || trinket.t1.cooldown.remains || ! trinket.t1.has_cooldown || variable.trinket_1_buffs )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["covenants"] = {
{
["enabled"] = true,
["description"] = "Use Death's Due if Death and Decay is not ticking and you don't have Death's Due or Crimson Scourge up.",
["criteria"] = "! death_and_decay.ticking & ( ! buff.deaths_due.up || buff.deaths_due.remains < 4 || buff.crimson_scourge.up )",
["action"] = "deaths_due",
},
{
["enabled"] = true,
["description"] = "Use Swarming Mist if Dancing Rune Weapon is active for 3+ seconds and you have 90+ Runic Power (offset by number of targets).",
["criteria"] = "cooldown.dancing_rune_weapon.remains > 3 & runic_power >= ( 90 - ( spell_targets.swarming_mist * 3 ) )",
["action"] = "swarming_mist",
},
{
["enabled"] = true,
["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up",
["description"] = "Use Fleshcraft if you have Pustule Eruption or Volatile Solvent and Volatile Solvent is not active.",
["interrupt_if"] = "soulbind.volatile_solvent",
["interrupt_immediate"] = "1",
["action"] = "fleshcraft",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["description"] = "Use Shackle the Unworthy if you have 3 or fewer runes and Runic Power is below 100.",
["criteria"] = "rune < 3 & runic_power < 100",
["action"] = "shackle_the_unworthy",
},
},
["racials"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.dancing_rune_weapon.ready & ( ! cooldown.blooddrinker.ready || ! talent.blooddrinker.enabled )",
["action"] = "blood_fury",
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 || rune < 1 & runic_power.deficit > 60",
["action"] = "arcane_pulse",
},
{
["enabled"] = true,
["criteria"] = "buff.unholy_strength.up",
["action"] = "lights_judgment",
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "runic_power.deficit > 20",
["action"] = "arcane_torrent",
},
},
},
["version"] = 20240321,
["warnings"] = "The import for 'drw_up' required some automated changes.\nLine 2: Converted 'talent.shattering_bone' to 'talent.shattering_bone.enabled' (1x).\nLine 7: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\nLine 7: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 13: Converted 'talent.unholy_ground' to 'talent.unholy_ground.enabled' (1x).\nLine 13: Converted 'talent.sanguine_ground' to 'talent.sanguine_ground.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 2: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 2: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 2: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 2: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 2: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 3: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 3: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 3: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 4: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 4: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 5: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 5: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 6: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 6: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 8: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 11: Converted 'talent.dancing_rune_weapon' to 'talent.dancing_rune_weapon.enabled' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 12: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'standard' required some automated changes.\nLine 1: Converted 'talent.shattering_bone' to 'talent.shattering_bone.enabled' (1x).\nLine 4: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\nLine 5: Converted 'talent.insatiable_blade' to 'talent.insatiable_blade.enabled' (1x).\n\nThe import for 'covenants' required some automated changes.\nLine 3: Converted 'soulbind.pustule_eruption' to 'soulbind.pustule_eruption.enabled' (1x).\nLine 3: Converted 'soulbind.volatile_solvent' to 'soulbind.volatile_solvent.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/fleshcraft\n\n# Interrupt.\nactions+=/mind_freeze\n# Interrupt.\nactions+=/strangulate\n# Death Strike at 65+ Runic Power.\nactions+=/variable,name=death_strike_dump_amount,value=settings.death_strike_pool_amount\n# Refresh Bone Shield at 4 stacks with Death's Caress, Consumption, or Blooddrinker; otherwise 5 stacks.\nactions+=/variable,name=bone_shield_refresh_value,value=4,op=setif,condition=!talent.deaths_caress.enabled||talent.consumption.enabled||talent.blooddrinker.enabled,value_else=5\n# Use a Potion during Dancing Rune Weapon.\nactions+=/potion,if=buff.dancing_rune_weapon.up\n# Call the trinkets action list.\nactions+=/call_action_list,name=trinkets\n# Raise Dead if it's off cooldown.\nactions+=/raise_dead\n# Use Icebound Fortitude if you're taking sufficient damage and you don't have Dancing Rune Weapon or Vampiric Blood up.\nactions+=/icebound_fortitude,if=tanking&incoming_damage_5s>=ibf_damage&!(buff.dancing_rune_weapon.up||buff.vampiric_blood.up)\n# Use Vampiric Blood if you're taking sufficient damage and you don't have Dancing Rune Weapon, Icebound Fortitude, Vampiric Blood, or Vampiric Strength up.\nactions+=/vampiric_blood,if=tanking&incoming_damage_5s>=vb_damage&!(buff.dancing_rune_weapon.up||buff.icebound_fortitude.up||buff.vampiric_blood.up||buff.vampiric_strength.up)\n# Use Rune Tap if you're taking sufficient damage and you don't have Dancing Rune Weapon, Vampiric Blood, or Icebound Fortitude up.\nactions+=/rune_tap,if=tanking&incoming_damage_5s>=rt_damage&!(buff.dancing_rune_weapon.up||buff.vampiric_blood.up||buff.icebound_fortitude.up)\n# Use Death Strike if your Blood Shield is going to expire.\nactions+=/death_strike,if=settings.save_blood_shield&buff.blood_shield.up&buff.blood_shield.remains<=gcd.max\n# Use Death's Caress if Bone Shield is not up.\nactions+=/deaths_caress,if=!buff.bone_shield.up\n# Use Death and Decay if it's not already up and you have 4 targets, Unholy Ground, Sanguine Ground, or Crimson Scourge.\nactions+=/death_and_decay,if=!death_and_decay.ticking&(talent.unholy_ground||talent.sanguine_ground||spell_targets.death_and_decay>3||buff.crimson_scourge.up)\n# Use Death Strike if Coagulatopathy is down or about to expire, if Icy Talons is down or about to expire, if you're below the Death Strike dump amount, if you're below the Heart Strike Runic Power threshold, or if the target is about to die.\nactions+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power>=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||boss&fight_remains<10\n# Use Blooddrinker if Dancing Rune Weapon is not up.\nactions+=/blooddrinker,if=!buff.dancing_rune_weapon.up\n# Call the racials action list.\nactions+=/call_action_list,name=racials\n# Use Sacrificial Pact if Dancing Rune Weapon is not active and the Ghoul is about to expire or the bossfight is about to end.\nactions+=/sacrificial_pact,if=!buff.dancing_rune_weapon.up&(pet.ghoul.remains<2||boss&fight_remains<gcd)\n# Call the covenants action list if they are active and valid.\nactions+=/call_action_list,name=covenants,strict=1,if=!covenant.none\n# Use Blood Tap if you have 2 or fewer runes, you won't reach 4 charges within the global cooldown, and you're about to cap charges, or if you will not reach 3 runes within global cooldown.\nactions+=/blood_tap,if=(rune<=2&rune.time_to_4>gcd&charges_fractional>=1.8)||rune.time_to_3>gcd\n# Use Gorefiend's Grasp if Tightening Grasp is talented.\nactions+=/gorefiends_grasp,if=talent.tightening_grasp.enabled\n# Use Empower Ruen Weapon if you have 6 or fewer runes and you're not about to cap Runic Power.\nactions+=/empower_rune_weapon,if=rune<6&runic_power.deficit>5\n# Use Abomination's Limb on cooldown.\nactions+=/abomination_limb\n# Use Dancing Rune Weapon if it is not already active.\nactions+=/dancing_rune_weapon,if=!buff.dancing_rune_weapon.up\n# Use the drw_up action list if Dancing Rune Weapon is active.\nactions+=/run_action_list,name=drw_up,strict=1,if=buff.dancing_rune_weapon.up\n# Call the standard action list (which will not be used if Dancing Rune Weapon is active).\nactions+=/call_action_list,name=standard\n\n# Use Death's Due if Death and Decay is not ticking and you don't have Death's Due or Crimson Scourge up.\nactions.covenants=deaths_due,if=!death_and_decay.ticking&(!buff.deaths_due.up||buff.deaths_due.remains<4||buff.crimson_scourge.up)\n# Use Swarming Mist if Dancing Rune Weapon is active for 3+ seconds and you have 90+ Runic Power (offset by number of targets).\nactions.covenants+=/swarming_mist,if=cooldown.dancing_rune_weapon.remains>3&runic_power>=(90-(spell_targets.swarming_mist*3))\n# Use Fleshcraft if you have Pustule Eruption or Volatile Solvent and Volatile Solvent is not active.\nactions.covenants+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\n# Use Shackle the Unworthy if you have 3 or fewer runes and Runic Power is below 100.\nactions.covenants+=/shackle_the_unworthy,if=rune<3&runic_power<100\n\n# Use Blood Boil if Blood Plague is not active.\nactions.drw_up+=/blood_boil,if=!dot.blood_plague.ticking\n# Use Tombstone if you have 5+ Bone Shield stacks, 2+ runes, 30+ Runic Power, and Shattering Bones is not talented or Death and Decay is not ticking.\nactions.drw_up+=/tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!talent.shattering_bone||(talent.shattering_bone.enabled&death_and_decay.ticking)\n# Use Death Strike if Coagulatopathy is down or about to expire or if Icy Talons is down or about to expire.\nactions.drw_up+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd\nactions.drw_up+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20\nactions.drw_up+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.drw_up+=/death_and_decay,if=!death_and_decay.ticking&(talent.sanguine_ground||talent.unholy_ground)\nactions.drw_up+=/blood_boil,if=spell_targets.blood_boil>2&charges_fractional>=1.1\nactions.drw_up+=/variable,name=heart_strike_rp_drw,value=(25+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.drw_up+=/death_strike,if=runic_power.deficit<=variable.heart_strike_rp_drw||runic_power>=variable.death_strike_dump_amount\nactions.drw_up+=/consumption\nactions.drw_up+=/blood_boil,if=charges_fractional>=1.1&buff.hemostasis.stack<5\nactions.drw_up+=/heart_strike,if=rune.time_to_2<gcd||runic_power.deficit>=variable.heart_strike_rp_drw\n\nactions.racials=blood_fury,if=cooldown.dancing_rune_weapon.ready&(!cooldown.blooddrinker.ready||!talent.blooddrinker.enabled)\nactions.racials+=/berserking\nactions.racials+=/arcane_pulse,if=active_enemies>=2||rune<1&runic_power.deficit>60\nactions.racials+=/lights_judgment,if=buff.unholy_strength.up\nactions.racials+=/ancestral_call\nactions.racials+=/fireblood\nactions.racials+=/bag_of_tricks\nactions.racials+=/arcane_torrent,if=runic_power.deficit>20\n\nactions.standard+=/tombstone,if=buff.bone_shield.stack>5&rune>=2&runic_power.deficit>=30&!talent.shattering_bone||(talent.shattering_bone.enabled&death_and_decay.ticking)&cooldown.dancing_rune_weapon.remains>=25\nactions.standard+=/variable,name=heart_strike_rp,value=(10+spell_targets.heart_strike*talent.heartbreaker.enabled*2)\nactions.standard+=/death_strike,if=buff.coagulopathy.remains<=gcd||buff.icy_talons.remains<=gcd||runic_power>=variable.death_strike_dump_amount||runic_power.deficit<=variable.heart_strike_rp||boss&fight_remains<10\nactions.standard+=/deaths_caress,if=(buff.bone_shield.remains<=4||(buff.bone_shield.stack<variable.bone_shield_refresh_value+1))&runic_power.deficit>10&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)&!talent.consumption.enabled&!talent.blooddrinker.enabled&rune.time_to_3>gcd\nactions.standard+=/marrowrend,if=(buff.bone_shield.remains<=4||buff.bone_shield.stack<variable.bone_shield_refresh_value)&runic_power.deficit>20&!(talent.insatiable_blade&cooldown.dancing_rune_weapon.remains<buff.bone_shield.remains)\nactions.standard+=/consumption\nactions.standard+=/soul_reaper,if=active_enemies=1&target.time_to_pct_35<5&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/soul_reaper,cycle_targets=1,if=target.time_to_pct_35<5&active_enemies>=2&target.time_to_die>(dot.soul_reaper.remains+5)\nactions.standard+=/bonestorm,if=runic_power>=100\nactions.standard+=/blood_boil,if=charges_fractional>=1.8&(buff.hemostasis.stack<=(5-spell_targets.blood_boil)||spell_targets.blood_boil>2)\nactions.standard+=/heart_strike,if=rune.time_to_4<gcd\nactions.standard+=/blood_boil,if=charges_fractional>=1.1\nactions.standard+=/heart_strike,if=(rune>1&(rune.time_to_3<gcd||buff.bone_shield.stack>7))\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking\n# Prioritize damage dealing on use trinkets over trinkets that give buffs\nactions.trinkets+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit)||trinket.1.is.mirror_of_fractured_tomorrows\nactions.trinkets+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit)||trinket.2.is.mirror_of_fractured_tomorrows\nactions.trinkets+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.trinkets+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\nactions.trinkets+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_2_buffs&trinket.2.ilvl>=trinket.1.ilvl||variable.trinket_1_buffs\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains||!trinket.2.has_cooldown)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains||!trinket.1.has_cooldown)\nactions.trinkets+=/use_items,use_off_gcd=1,if=(variable.trinket_1_buffs||trinket.1.cooldown.remains)&(variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(variable.trinket_2_exclude||trinket.2.cooldown.remains||!trinket.2.has_cooldown||variable.trinket_2_buffs)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&(buff.dancing_rune_weapon.up||!talent.dancing_rune_weapon||cooldown.dancing_rune_weapon.remains>20)&(variable.trinket_1_exclude||trinket.1.cooldown.remains||!trinket.1.has_cooldown||variable.trinket_1_buffs)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)",
["author"] = "SimC",
},
["Fury"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-17: Tweak Thunderous Roar usage.\n\n2024-02-03: Minor SimC update.\n\n2024-01-14:  Ensure Avatar is up before Thunderous Roar.\n\n2023-11-27: Big axe.\n\n2023-11-22:  Update to SimC.\n\n2023-11-15:  Allow Avatar with Titan's Torment but without Odyn's Fury.\n\n2023-11-08:  Minor sim updates.\n\n2023-11-05:  Patch 10.2.\n\n2023-07-11:  Update trinkets for 10.1.5.\n\n2023-05-20:  Trinket/CD update.\n\n2023-05-14:  Add slider for Tier 30 crit % setting.\n\n2023-05-04:  Updates related to Tier 30.\n\n2023-05-02:  Update for 10.1.\n\n2023-03-26:  Include Spell Reflection; remove Heroic Leap.",
["profile"] = "actions.precombat+=/berserker_stance\nactions.precombat+=/battle_shout\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/avatar,if=!talent.titans_torment\nactions.precombat+=/recklessness,if=!talent.reckless_abandon\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell||trinket.1.is.whispering_incarnate_icon\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell||trinket.2.is.whispering_incarnate_icon\n# Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0||trinket.1.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0||trinket.2.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>5\n## actions+=/heroic_leap,if=(raid_event.movement.distance>25&raid_event.movement.in>45)\nactions+=/pummel\nactions+=/spell_reflection\nactions+=/potion\nactions+=/call_action_list,name=trinkets\nactions+=/ravager,if=cooldown.recklessness.remains<3||buff.recklessness.up\nactions+=/lights_judgment,if=buff.recklessness.down\nactions+=/berserking,if=buff.recklessness.up\nactions+=/blood_fury\nactions+=/fireblood\nactions+=/ancestral_call\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.avatar.remains>15&fight_remains>=135||(target.health.pct<35&talent.massacre||target.health.pct<20)&buff.avatar.up||fight_remains<=25\nactions+=/avatar,if=talent.titans_torment&buff.enrage.up&raid_event.adds.in>15&!buff.avatar.up&(!talent.odyns_fury||cooldown.odyns_fury.remains)||talent.berserkers_torment&buff.enrage.up&!buff.avatar.up&raid_event.adds.in>15||!talent.titans_torment&!talent.berserkers_torment&(buff.recklessness.up||target.time_to_die<20)\nactions+=/recklessness,if=!raid_event.adds.exists&(talent.annihilator&cooldown.champions_spear.remains<1||cooldown.avatar.remains>40||!talent.avatar||target.time_to_die<12)\nactions+=/recklessness,if=!raid_event.adds.exists&!talent.annihilator||target.time_to_die<12\nactions+=/champions_spear,if=buff.enrage.up&((buff.furious_bloodthirst.up&talent.titans_torment)||!talent.titans_torment||target.time_to_die<20||active_enemies>1||!set_bonus.tier31_2pc)&raid_event.adds.in>15\nactions+=/run_action_list,name=multi_target,strict=1,if=active_enemies>=2\nactions+=/run_action_list,name=single_target,strict=1,if=active_enemies=1\n\nactions.multi_target+=/recklessness,if=raid_event.adds.in>15||active_enemies>1||target.time_to_die<12\nactions.multi_target+=/odyns_fury,if=active_enemies>1&talent.titanic_rage&(!buff.meat_cleaver.up||buff.avatar.up||buff.recklessness.up)\nactions.multi_target+=/whirlwind,if=spell_targets.whirlwind>1&talent.improved_whirlwind&!buff.meat_cleaver.up||raid_event.adds.in<2&talent.improved_whirlwind&!buff.meat_cleaver.up\nactions.multi_target+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<gcd\nactions.multi_target+=/rampage,if=talent.anger_management&(buff.recklessness.up||buff.enrage.remains<gcd||rage.pct>85)\nactions.multi_target+=/thunderous_roar,if=buff.enrage.up&(buff.avatar.up||(!talent.avatar||cooldown.avatar.remains>6)&(!talent.titans_torment||cooldown.odyns_fury.remains>6))&(spell_targets.whirlwind>1||raid_event.adds.in>15)\nactions.multi_target+=/odyns_fury,if=active_enemies>1&buff.enrage.up&raid_event.adds.in>15\nactions.multi_target+=/whirlwind,if=buff.meat_cleaver.stack=1&buff.hurricane.up&rage<80&rage>60\nactions.multi_target+=/bloodbath,if=set_bonus.tier30_4pc&action.bloodthirst.crit_pct_current>=95||set_bonus.tier31_4pc\nactions.multi_target+=/bloodthirst,if=(set_bonus.tier30_4pc&action.bloodthirst.crit_pct_current>=95)||(!talent.reckless_abandon&buff.furious_bloodthirst.up&buff.enrage.up)\nactions.multi_target+=/crushing_blow,if=talent.wrath_and_fury&buff.enrage.up\nactions.multi_target+=/odyns_fury,if=buff.enrage.up&raid_event.adds.in>15\nactions.multi_target+=/rampage,if=buff.recklessness.up||buff.enrage.remains<gcd||(rage>110&talent.overwhelming_rage)||(rage>80&!talent.overwhelming_rage)\nactions.multi_target+=/bloodbath,if=buff.enrage.up&talent.reckless_abandon&!talent.wrath_and_fury\nactions.multi_target+=/execute,if=buff.enrage.up&talent.ashen_juggernaut\nactions.multi_target+=/bloodthirst,if=buff.enrage.down||(talent.annihilator&!buff.recklessness.up)\nactions.multi_target+=/onslaught,if=!talent.annihilator&buff.enrage.up||talent.tenderize\nactions.multi_target+=/execute,if=buff.enrage.up\nactions.multi_target+=/raging_blow,if=charges>1&talent.wrath_and_fury\nactions.multi_target+=/crushing_blow,if=charges>1&talent.wrath_and_fury\nactions.multi_target+=/bloodbath,if=buff.enrage.down||!talent.wrath_and_fury\nactions.multi_target+=/crushing_blow,if=buff.enrage.up&talent.reckless_abandon\nactions.multi_target+=/bloodthirst,if=!talent.wrath_and_fury\nactions.multi_target+=/raging_blow,if=charges>=1\nactions.multi_target+=/rampage\nactions.multi_target+=/slam,if=talent.annihilator\nactions.multi_target+=/bloodbath\nactions.multi_target+=/raging_blow\nactions.multi_target+=/crushing_blow\nactions.multi_target+=/bloodthirst\nactions.multi_target+=/whirlwind\n\nactions.single_target+=/whirlwind,if=spell_targets.whirlwind>1&talent.improved_whirlwind&!buff.meat_cleaver.up||raid_event.adds.in<2&talent.improved_whirlwind&!buff.meat_cleaver.up\nactions.single_target+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<gcd\nactions.single_target+=/odyns_fury,if=(buff.enrage.up&(spell_targets.whirlwind>1||raid_event.adds.in>15)&(talent.dancing_blades&buff.dancing_blades.remains<5||!talent.dancing_blades))\nactions.single_target+=/rampage,if=talent.anger_management&(buff.recklessness.up||buff.enrage.remains<gcd||rage.pct>85)\nactions.single_target+=/bloodbath,if=set_bonus.tier30_4pc&action.bloodthirst.crit_pct_current>=95\nactions.single_target+=/bloodthirst,if=(set_bonus.tier30_4pc&action.bloodthirst.crit_pct_current>=95)||(!talent.reckless_abandon&buff.furious_bloodthirst.up&buff.enrage.up&(!dot.gushing_wound.remains||buff.champions_might.up))\nactions.single_target+=/bloodbath,if=set_bonus.tier31_2pc\nactions.single_target+=/thunderous_roar,if=buff.enrage.up&(buff.avatar.up||(!talent.avatar||cooldown.avatar.remains>6)&(!talent.titans_torment||cooldown.odyns_fury.remains>6))&(spell_targets.whirlwind>1||raid_event.adds.in>15)\nactions.single_target+=/onslaught,if=buff.enrage.up||talent.tenderize\nactions.single_target+=/crushing_blow,if=talent.wrath_and_fury&buff.enrage.up&!buff.furious_bloodthirst.up\nactions.single_target+=/execute,if=buff.enrage.up&!buff.furious_bloodthirst.up&buff.ashen_juggernaut.up||buff.sudden_death.remains<=gcd&(target.health.pct>35&talent.massacre||target.health.pct>20)\nactions.single_target+=/rampage,if=talent.reckless_abandon&(buff.recklessness.up||buff.enrage.remains<gcd||rage.pct>85)\nactions.single_target+=/execute,if=buff.enrage.up\nactions.single_target+=/rampage,if=talent.anger_management\nactions.single_target+=/execute\nactions.single_target+=/bloodbath,if=buff.enrage.up&talent.reckless_abandon&!talent.wrath_and_fury\nactions.single_target+=/rampage,if=target.health.pct<35&talent.massacre.enabled\nactions.single_target+=/bloodthirst,if=(buff.enrage.down||(talent.annihilator&!buff.recklessness.up))&!buff.furious_bloodthirst.up\nactions.single_target+=/raging_blow,if=charges>1&talent.wrath_and_fury\nactions.single_target+=/crushing_blow,if=charges>1&talent.wrath_and_fury&!buff.furious_bloodthirst.up\nactions.single_target+=/bloodbath,if=buff.enrage.down||!talent.wrath_and_fury\nactions.single_target+=/crushing_blow,if=buff.enrage.up&talent.reckless_abandon&!buff.furious_bloodthirst.up\nactions.single_target+=/bloodthirst,if=!talent.wrath_and_fury&!buff.furious_bloodthirst.up\nactions.single_target+=/raging_blow,if=charges>1\nactions.single_target+=/rampage\nactions.single_target+=/slam,if=talent.annihilator\nactions.single_target+=/bloodbath\nactions.single_target+=/raging_blow\nactions.single_target+=/crushing_blow,if=!buff.furious_bloodthirst.up\nactions.single_target+=/bloodthirst\nactions.single_target+=/whirlwind\nactions.single_target+=/wrecking_throw\nactions.single_target+=/storm_bolt\n\n# Trinkets\nactions.trinkets+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&!buff.avatar.up\nactions.trinkets+=/use_item,use_off_gcd=1,name=algethar_puzzle_box,if=cooldown.recklessness.remains<3||(talent.anger_management&cooldown.avatar.remains<3)\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&(buff.avatar.up)&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&(buff.avatar.up)&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)",
["version"] = 20240508,
["warnings"] = "The import for 'single_target' required some automated changes.\nLine 1: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 1: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 3: Converted 'talent.dancing_blades' to 'talent.dancing_blades.enabled' (1x).\nLine 3: Converted 'talent.dancing_blades' to 'talent.dancing_blades.enabled' (1x).\nLine 4: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 6: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 8: Converted 'talent.avatar' to 'talent.avatar.enabled' (1x).\nLine 8: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 9: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 10: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 11: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\nLine 12: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 14: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 16: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 16: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 18: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 19: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 20: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 21: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 22: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 23: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 26: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 12: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 12: Converted 'talent.odyns_fury' to 'talent.odyns_fury.enabled' (1x).\nLine 12: Converted 'talent.berserkers_torment' to 'talent.berserkers_torment.enabled' (1x).\nLine 12: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 12: Converted 'talent.berserkers_torment' to 'talent.berserkers_torment.enabled' (1x).\nLine 13: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 13: Converted 'talent.avatar' to 'talent.avatar.enabled' (1x).\nLine 14: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 15: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 15: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 6: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 6: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 7: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 7: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 8: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 9: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 10: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 10: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 10: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 10: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 10: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 10: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 11: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 11: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 11: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 11: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 11: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 12: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 12: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 12: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 12: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 12: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 12: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 12: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 12: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 12: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 12: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 12: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 13: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 14: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 4: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'multi_target' required some automated changes.\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 3: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\nLine 5: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 6: Converted 'talent.avatar' to 'talent.avatar.enabled' (1x).\nLine 6: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 10: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 11: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 13: Converted 'talent.overwhelming_rage' to 'talent.overwhelming_rage.enabled' (1x).\nLine 13: Converted 'talent.overwhelming_rage' to 'talent.overwhelming_rage.enabled' (1x).\nLine 14: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 14: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 15: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 16: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 17: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\nLine 17: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 19: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 20: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 21: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 22: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 23: Converted 'talent.wrath_and_fury' to 'talent.wrath_and_fury.enabled' (1x).\nLine 26: Converted 'talent.annihilator' to 'talent.annihilator.enabled' (1x).\n\nImported 6 action lists.\n",
["spec"] = 72,
["lists"] = {
["single_target"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.whirlwind > 1 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up || raid_event.adds.in < 2 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains < gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 ) & ( talent.dancing_blades.enabled & buff.dancing_blades.remains < 5 || ! talent.dancing_blades.enabled ) )",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled & ( buff.recklessness.up || buff.enrage.remains < gcd.max || rage.pct > 85 )",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_4pc & action.bloodthirst.crit_pct_current >= 95",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier30_4pc & action.bloodthirst.crit_pct_current >= 95 ) || ( ! talent.reckless_abandon.enabled & buff.furious_bloodthirst.up & buff.enrage.up & ( ! dot.gushing_wound.remains || buff.champions_might.up ) )",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( buff.avatar.up || ( ! talent.avatar.enabled || cooldown.avatar.remains > 6 ) & ( ! talent.titans_torment.enabled || cooldown.odyns_fury.remains > 6 ) ) & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 )",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up || talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "talent.wrath_and_fury.enabled & buff.enrage.up & ! buff.furious_bloodthirst.up",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ! buff.furious_bloodthirst.up & buff.ashen_juggernaut.up || buff.sudden_death.remains <= gcd.max & ( target.health.pct > 35 & talent.massacre.enabled || target.health.pct > 20 )",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.reckless_abandon.enabled & ( buff.recklessness.up || buff.enrage.remains < gcd.max || rage.pct > 85 )",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled",
["action"] = "rampage",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled & ! talent.wrath_and_fury.enabled",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.massacre.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.down || ( talent.annihilator.enabled & ! buff.recklessness.up ) ) & ! buff.furious_bloodthirst.up",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled & ! buff.furious_bloodthirst.up",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.down || ! talent.wrath_and_fury.enabled",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled & ! buff.furious_bloodthirst.up",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "! talent.wrath_and_fury.enabled & ! buff.furious_bloodthirst.up",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "charges > 1",
["action"] = "raging_blow",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.annihilator.enabled",
["action"] = "slam",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.furious_bloodthirst.up",
["action"] = "crushing_blow",
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["action"] = "wrecking_throw",
["enabled"] = true,
},
{
["action"] = "storm_bolt",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["action"] = "pummel",
["enabled"] = true,
},
{
["action"] = "spell_reflection",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "cooldown.recklessness.remains < 3 || buff.recklessness.up",
["action"] = "ravager",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.down",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up",
["action"] = "berserking",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.titans_torment.enabled & buff.enrage.up & raid_event.adds.in > 15 & ! buff.avatar.up & ( ! talent.odyns_fury.enabled || cooldown.odyns_fury.remains ) || talent.berserkers_torment.enabled & buff.enrage.up & ! buff.avatar.up & raid_event.adds.in > 15 || ! talent.titans_torment.enabled & ! talent.berserkers_torment.enabled & ( buff.recklessness.up || target.time_to_die < 20 )",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "! raid_event.adds.exists & ( talent.annihilator.enabled & cooldown.champions_spear.remains < 1 || cooldown.avatar.remains > 40 || ! talent.avatar.enabled || target.time_to_die < 12 )",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "! raid_event.adds.exists & ! talent.annihilator.enabled || target.time_to_die < 12",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( ( buff.furious_bloodthirst.up & talent.titans_torment.enabled ) || ! talent.titans_torment.enabled || target.time_to_die < 20 || active_enemies > 1 || ! set_bonus.tier31_2pc ) & raid_event.adds.in > 15",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 2",
["list_name"] = "multi_target",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["action"] = "berserker_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "! talent.reckless_abandon.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell || trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell || trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t1.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t2.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "fyralath_the_dreamrender",
["description"] = "Trinkets",
["criteria"] = "dot.mark_of_fyralath.ticking & ! buff.avatar.up",
["action"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["action"] = "algethar_puzzle_box",
["criteria"] = "cooldown.recklessness.remains < 3 || ( talent.anger_management.enabled & cooldown.avatar.remains < 3 )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( buff.avatar.up ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( buff.avatar.up ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
},
},
["multi_target"] = {
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15 || active_enemies > 1 || target.time_to_die < 12",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & talent.titanic_rage.enabled & ( ! buff.meat_cleaver.up || buff.avatar.up || buff.recklessness.up )",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.whirlwind > 1 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up || raid_event.adds.in < 2 & talent.improved_whirlwind.enabled & ! buff.meat_cleaver.up",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains < gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled & ( buff.recklessness.up || buff.enrage.remains < gcd.max || rage.pct > 85 )",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( buff.avatar.up || ( ! talent.avatar.enabled || cooldown.avatar.remains > 6 ) & ( ! talent.titans_torment.enabled || cooldown.odyns_fury.remains > 6 ) ) & ( spell_targets.whirlwind > 1 || raid_event.adds.in > 15 )",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & buff.enrage.up & raid_event.adds.in > 15",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 1 & buff.hurricane.up & rage < 80 & rage > 60",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_4pc & action.bloodthirst.crit_pct_current >= 95 || set_bonus.tier31_4pc",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier30_4pc & action.bloodthirst.crit_pct_current >= 95 ) || ( ! talent.reckless_abandon.enabled & buff.furious_bloodthirst.up & buff.enrage.up )",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "talent.wrath_and_fury.enabled & buff.enrage.up",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & raid_event.adds.in > 15",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up || buff.enrage.remains < gcd.max || ( rage > 110 & talent.overwhelming_rage.enabled ) || ( rage > 80 & ! talent.overwhelming_rage.enabled )",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled & ! talent.wrath_and_fury.enabled",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.ashen_juggernaut.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.down || ( talent.annihilator.enabled & ! buff.recklessness.up )",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "! talent.annihilator.enabled & buff.enrage.up || talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "charges > 1 & talent.wrath_and_fury.enabled",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.down || ! talent.wrath_and_fury.enabled",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.reckless_abandon.enabled",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "! talent.wrath_and_fury.enabled",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "charges >= 1",
["action"] = "raging_blow",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.annihilator.enabled",
["action"] = "slam",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
},
},
["Holy Priest"] = {
["builtIn"] = true,
["date"] = 20240411,
["spec"] = 257,
["desc"] = "2023-05-03:  Updated from SimC.\n\n2023-04-05:  Updated from SimC.",
["lists"] = {
["divine_favor_filler"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["description"] = "We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word",
["criteria"] = "( cooldown.apotheosis.remains < cooldown.divine_word.remains ) || ( cooldown.holy_word_chastise.duration_expected <= cooldown.divine_word.remains )",
["action"] = "holy_word_chastise",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["divine_image"] = {
{
["enabled"] = true,
["criteria"] = "buff.answered_prayers.down & ! ( cooldown.holy_word_sanctify.up || cooldown.holy_word_serenity.up || cooldown.holy_word_chastise.up )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["description"] = "line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting",
["action"] = "holy_word_sanctify",
["line_cd"] = "9",
},
{
["enabled"] = true,
["action"] = "holy_word_serenity",
["line_cd"] = "9",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["action"] = "holy_fire",
["cycle_targets"] = 1,
["description"] = "Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word",
["criteria"] = "( talent.empyreal_blaze.enabled || talent.harmonious_apparatus.enabled || ! ticking || refreshable ) & ! ( buff.empyreal_blaze.up & ( cooldown.divine_word.up || buff.divine_word.up ) & cooldown.holy_word_chastise.up )",
},
{
["enabled"] = true,
["description"] = "Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.",
["criteria"] = "( refreshable || ! ticking ) & ( target.time_to_die >= dot.shadow_word_pain.duration ) & ! buff.divine_favor_chastise.up & ! buff.apotheosis.up",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Prepare to enter divine favor: chastise",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_chastise_prep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Enter Divine Favor rotation with divine favor: chastise buff up",
["strict"] = 1,
["criteria"] = "buff.divine_favor_chastise.up",
["list_name"] = "divine_favor_chastise_active",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine favor fillers rotation with buff down",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_filler",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine image rotation with divine image talented",
["strict"] = 1,
["criteria"] = "talent.divine_image.enabled",
["list_name"] = "divine_image",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Otherwise generic rotation",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["divine_favor_chastise_prep"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "empyreal_exec_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "apotheosis_exec_time: Store how long Apotheosis will take to execute",
["var_name"] = "apotheosis_exec_time",
["value"] = "action.apotheosis.execute_time",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.apotheosis.enabled",
},
{
["enabled"] = true,
["description"] = "Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).",
["criteria"] = "( cooldown.holy_word_chastise.remains > cooldown.divine_word.remains ) & ( cooldown.divine_word.remains <= ( variable.empyreal_exec_time + variable.apotheosis_exec_time ) )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["description"] = "Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze",
["criteria"] = "cooldown.holy_word_chastise.up & ( ! talent.empyreal_blaze.enabled || buff.empyreal_blaze.up )",
["action"] = "divine_word",
},
{
["enabled"] = true,
["description"] = "Holy word chastise to trigger divine favor: chastise",
["criteria"] = "buff.divine_word.up",
["action"] = "holy_word_chastise",
},
},
["generic"] = {
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Hold Apotheosis if chastise will be up soon",
["criteria"] = "cooldown.holy_word_chastise.remains > ( gcd.max * 3 )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["action"] = "mindbender",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Sync PI with divine favor: chastise if we took divine word",
["criteria"] = "( ! talent.divine_word.enabled || ( cooldown.divine_word.up & cooldown.holy_word_chastise.up ) )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Only potion in sync with power infusion",
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "hold trinkets to use with PI",
["criteria"] = "buff.power_infusion.up",
["action"] = "use_items",
},
},
["divine_favor_chastise_active"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "smite",
["cycle_targets"] = 1,
["description"] = "We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage",
["criteria"] = "spell_targets.holy_nova >= 2",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
},
["version"] = 20240411,
["warnings"] = "The import for 'cooldowns' required some automated changes.\nLine 2: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 1: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 1: Converted 'talent.harmonious_apparatus' to 'talent.harmonious_apparatus.enabled' (1x).\nLine 3: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 3: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 5: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 5: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 6: Converted 'talent.divine_image' to 'talent.divine_image.enabled' (1x).\n\nThe import for 'divine_favor_chastise_prep' required some automated changes.\nLine 2: Converted 'talent.apotheosis' to 'talent.apotheosis.enabled' (1x).\nLine 4: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\n\nImported 8 action lists.\n",
["author"] = "Kapulani",
["profile"] = "actions.precombat+=/power_word_fortitude\n\n# Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word\nactions+=/holy_fire,cycle_targets=1,if=(talent.empyreal_blaze||talent.harmonious_apparatus||!ticking||refreshable)&!(buff.empyreal_blaze.up&(cooldown.divine_word.up||buff.divine_word.up)&cooldown.holy_word_chastise.up)\n# Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.\nactions+=/shadow_word_pain,if=(refreshable||!ticking)&(target.time_to_die>=dot.shadow_word_pain.duration)&!buff.divine_favor_chastise.up&!buff.apotheosis.up\n# Prepare to enter divine favor: chastise\nactions+=/call_action_list,name=divine_favor_chastise_prep,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Enter Divine Favor rotation with divine favor: chastise buff up\nactions+=/run_action_list,name=divine_favor_chastise_active,strict=1,if=buff.divine_favor_chastise.up\n# Run divine favor fillers rotation with buff down\nactions+=/run_action_list,name=divine_favor_filler,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Run divine image rotation with divine image talented\nactions+=/run_action_list,name=divine_image,strict=1,if=talent.divine_image\n# Otherwise generic rotation\nactions+=/run_action_list,name=generic\n\nactions.divine_favor_chastise_prep+=/variable,name=empyreal_exec_time,op=set,value=0\n# apotheosis_exec_time: Store how long Apotheosis will take to execute\nactions.divine_favor_chastise_prep+=/variable,name=apotheosis_exec_time,op=setif,condition=talent.apotheosis,value=action.apotheosis.execute_time,value_else=0\n# Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).\nactions.divine_favor_chastise_prep+=/apotheosis,if=(cooldown.holy_word_chastise.remains>cooldown.divine_word.remains)&(cooldown.divine_word.remains<=(variable.empyreal_exec_time+variable.apotheosis_exec_time))\n# Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze\nactions.divine_favor_chastise_prep+=/divine_word,if=cooldown.holy_word_chastise.up&(!talent.empyreal_blaze||buff.empyreal_blaze.up)\n# Holy word chastise to trigger divine favor: chastise\nactions.divine_favor_chastise_prep+=/holy_word_chastise,if=buff.divine_word.up\n\nactions.divine_favor_chastise_active+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_chastise_active+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_chastise_active+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_chastise_active+=/mindgames\nactions.divine_favor_chastise_active+=/shadow_word_death,if=target.health.pct<20\nactions.divine_favor_chastise_active+=/holy_word_chastise\n# We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage\nactions.divine_favor_chastise_active+=/smite,cycle_targets=1,if=spell_targets.holy_nova>=2\nactions.divine_favor_chastise_active+=/smite\n\nactions.divine_favor_filler+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_filler+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_filler+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_filler+=/mindgames\nactions.divine_favor_filler+=/shadow_word_death,if=target.health.pct<20\n# We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word\nactions.divine_favor_filler+=/holy_word_chastise,if=(cooldown.apotheosis.remains<cooldown.divine_word.remains)||(cooldown.holy_word_chastise.duration_expected<=cooldown.divine_word.remains)\nactions.divine_favor_filler+=/smite\n\nactions.divine_image+=/apotheosis,if=buff.answered_prayers.down&!(cooldown.holy_word_sanctify.up||cooldown.holy_word_serenity.up||cooldown.holy_word_chastise.up)\n# line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting\nactions.divine_image+=/holy_word_sanctify,line_cd=9\nactions.divine_image+=/holy_word_serenity,line_cd=9\nactions.divine_image+=/holy_word_chastise\nactions.divine_image+=/halo,if=spell_targets.halo>=2\nactions.divine_image+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_image+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_image+=/mindgames\nactions.divine_image+=/shadow_word_death,if=target.health.pct<20\nactions.divine_image+=/smite\n\nactions.generic+=/holy_word_chastise\n# Hold Apotheosis if chastise will be up soon\nactions.generic+=/apotheosis,if=cooldown.holy_word_chastise.remains>(gcd.max*3)\nactions.generic+=/halo,if=spell_targets.halo>=2\nactions.generic+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.generic+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.generic+=/mindgames\nactions.generic+=/shadow_word_death,if=target.health.pct<20\nactions.generic+=/smite\n\nactions.cooldowns+=/shadowfiend\n# Sync PI with divine favor: chastise if we took divine word\nactions.cooldowns+=/power_infusion,if=(!talent.divine_word||(cooldown.divine_word.up&cooldown.holy_word_chastise.up))\n# Only potion in sync with power infusion\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# hold trinkets to use with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up",
},
["Protection Warrior"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240116,
["spec"] = 73,
["desc"] = "2023-11-05:  Patch 10.2.\n\n2023-05-28:  Update to Shield Slam usage in AOE.\n\n2023-05-20:  Shield Wall minor update.\n\n2023-05-08:  Add additional Execute in single-target if Rage is 50+ (still impacted by Reserve Rage for Mitigation option).\n\n2023-04-30:  2nd minor update.\n\n2023-04-26:  Minor update from SimulationCraft for 10.1.\n\n2023-03-26:  Shift Shield Charge and Charge above Pummel and Spell Reflection.",
["profile"] = "actions.precombat+=/defensive_stance,if=buff.stance.down\nactions.precombat+=/battle_shout\nactions.precombat+=/use_item,name=algethar_puzzle_box\nactions.precombat+=/avatar,if=!talent.titans_torment\nactions.precombat+=/recklessness,if=!talent.reckless_abandon\n\n# Executed every time the actor is available.\nactions+=/shield_charge,if=time=0\nactions+=/charge,if=time=0\nactions+=/pummel\nactions+=/spell_reflection\nactions+=/use_items\nactions+=/avatar\n# Usage of Shield Wall is governed by specialization settings; see /hekili > Protection.\nactions+=/shield_wall,if=talent.immovable_object.enabled&buff.avatar.down\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled)||(rage>=70||buff.seeing_red.stack=7&rage>=35)&cooldown.shield_slam.remains<=1&buff.shield_block.remains>=4&set_bonus.tier31_2pc,use_off_gcd=1\n# Usage of Last Stand is also governed by specialization settings; see /hekili > Protection.\nactions+=/last_stand,if=talent.unnerving_focus&(target.health.pct>=90||target.health.pct<=20)||talent.bolster&buff.shield_block.down||!talent.bolster&!talent.unnerving_focus||set_bonus.tier30_2pc>0\n# Usage of Rallying Cry is governed by specialization settings; see /hekili > Protection.\nactions+=/rallying_cry\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/champions_spear\nactions+=/thunderous_roar\nactions+=/shield_slam,if=buff.fervid.up\nactions+=/shockwave,if=talent.sonic_boom.enabled&buff.avatar.up&talent.unstoppable_force.enabled&!talent.rumbling_earth.enabled||talent.sonic_boom.enabled&talent.rumbling_earth.enabled&spell_targets.shockwave>=3\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.duration<=10\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.thunder_clap>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1&talent.blood_and_thunder&talent.rend\nactions.aoe+=/shield_slam,if=(set_bonus.tier30_2pc||set_bonus.tier30_4pc)&spell_targets.thunder_clap<=7||buff.earthen_tenacity.up\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&spell_targets.thunderclap>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&spell_targets.revenge>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&spell_targets.thunderclap<=7\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic+=/shield_slam\nactions.generic+=/thunder_clap,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/execute,if=buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/execute\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=80&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=80&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute,if=spell_targets.revenge=1\nactions.generic+=/revenge,if=target.health>20\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
["version"] = 20240116,
["warnings"] = "The import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.blood_and_thunder' to 'talent.blood_and_thunder.enabled' (1x).\nLine 1: Converted 'talent.rend' to 'talent.rend.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 17: Converted 'talent.unnerving_focus' to 'talent.unnerving_focus.enabled' (1x).\nLine 17: Converted 'talent.bolster' to 'talent.bolster.enabled' (1x).\nLine 17: Converted 'talent.bolster' to 'talent.bolster.enabled' (1x).\nLine 17: Converted 'talent.unnerving_focus' to 'talent.unnerving_focus.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\n\nImported 4 action lists.\n",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1 & talent.blood_and_thunder.enabled & talent.rend.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier30_2pc || set_bonus.tier30_4pc ) & spell_targets.thunder_clap <= 7 || buff.earthen_tenacity.up",
["action"] = "shield_slam",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & spell_targets.revenge >= 3",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "rage <= 60 || buff.violent_outburst.up & spell_targets.thunderclap <= 7",
["action"] = "shield_slam",
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 30 || rage >= 40 & talent.barbaric_training.enabled",
["action"] = "revenge",
},
},
["generic"] = {
{
["action"] = "shield_slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up & talent.sudden_death.enabled",
["action"] = "execute",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( rage >= 80 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 80 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.revenge = 1",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "target.health > 20",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["action"] = "devastate",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["criteria"] = "time = 0",
["action"] = "shield_charge",
},
{
["enabled"] = true,
["criteria"] = "time = 0",
["action"] = "charge",
},
{
["action"] = "pummel",
["enabled"] = true,
},
{
["action"] = "spell_reflection",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Usage of Shield Wall is governed by specialization settings, see /hekili > Protection.",
["criteria"] = "talent.immovable_object.enabled & buff.avatar.down",
["action"] = "shield_wall",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up",
["action"] = "potion",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "ignore_pain",
["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled ) || ( rage >= 70 || buff.seeing_red.stack = 7 & rage >= 35 ) & cooldown.shield_slam.remains <= 1 & buff.shield_block.remains >= 4 & set_bonus.tier31_2pc",
},
{
["enabled"] = true,
["description"] = "Usage of Last Stand is also governed by specialization settings, see /hekili > Protection.",
["criteria"] = "talent.unnerving_focus.enabled & ( target.health.pct >= 90 || target.health.pct <= 20 ) || talent.bolster.enabled & buff.shield_block.down || ! talent.bolster.enabled & ! talent.unnerving_focus.enabled || set_bonus.tier30_2pc > 0",
["action"] = "last_stand",
},
{
["enabled"] = true,
["description"] = "Usage of Rallying Cry is governed by specialization settings, see /hekili > Protection.",
["action"] = "rallying_cry",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.booming_voice.enabled",
["action"] = "demoralizing_shout",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.fervid.up",
["action"] = "shield_slam",
},
{
["enabled"] = true,
["criteria"] = "talent.sonic_boom.enabled & buff.avatar.up & talent.unstoppable_force.enabled & ! talent.rumbling_earth.enabled || talent.sonic_boom.enabled & talent.rumbling_earth.enabled & spell_targets.shockwave >= 3",
["action"] = "shockwave",
},
{
["action"] = "shield_charge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shield_block.duration <= 10",
["action"] = "shield_block",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets.thunder_clap >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "buff.stance.down",
["action"] = "defensive_stance",
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "algethar_puzzle_box",
["action"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "! talent.reckless_abandon.enabled",
["action"] = "recklessness",
},
},
},
["author"] = "SimulationCraft",
},
},
},
["Amdam - Turalyon"] = {
["runOnce"] = {
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["forceReloadClassDefaultOptions_20220306_70"] = true,
["forceReloadClassDefaultOptions_20220306_65"] = true,
["forceReloadClassDefaultOptions_20220306_66"] = true,
["reviseDisplayModes_20180709"] = true,
["enableAllOfTheThings_20180820"] = true,
["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["updateMaxRefreshToNewSpecOptions_20220222"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
},
["specs"] = {
[70] = {
["items"] = {
["zaqali_chaos_grapnel"] = {
["disabled"] = true,
},
["elementium_pocket_anvil"] = {
["disabled"] = true,
},
},
["debuffPadding"] = 0,
["abilities"] = {
["shield_of_vengeance"] = {
["disabled"] = true,
},
["crusade"] = {
["disabled"] = true,
},
["avenging_wrath"] = {
["disabled"] = true,
},
},
["settings"] = {
["sov_damage"] = 20,
["check_wake_range"] = false,
},
["potionsReset"] = 20180919.1,
["potion"] = "battle_potion_of_strength",
["maxRefresh"] = 10,
["buffPadding"] = 0.25,
},
[66] = {
["debuffPadding"] = 0,
["settings"] = {
["goak_damage"] = 40,
["sentinel_def"] = false,
["ds_damage"] = 60,
["wog_health"] = 40,
},
["potionsReset"] = 20180919.1,
["maxRefresh"] = 10,
["potion"] = "potion_of_bursting_blood",
["buffPadding"] = 0.25,
},
},
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
["x"] = -166.6309509277344,
["y"] = -157.1181335449219,
},
["Cooldowns"] = {
["rel"] = "CENTER",
["elvuiCooldown"] = true,
["x"] = -6.519773483276367,
["y"] = 186.9631805419922,
},
["Primary"] = {
["rel"] = "CENTER",
["x"] = 197.92724609375,
["primaryHeight"] = 75,
["elvuiCooldown"] = true,
["y"] = -192.5466766357422,
["primaryWidth"] = 75,
["queue"] = {
["elvuiCooldown"] = true,
},
},
["AOE"] = {
["rel"] = "CENTER",
["elvuiCooldown"] = true,
["y"] = -139,
},
["Defensives"] = {
["rel"] = "CENTER",
["x"] = -223.2471771240234,
["y"] = -157.1182556152344,
},
},
["packs"] = {
["Protection Paladin"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-01-25: Use Sentinel and Avenging Wrath more interchangeably.\n\n2024-01-21:  Tweak trinkets.\n\n2024-01-10:  Accessible toggle for Sentinel as defensive rather than offensive CD.\n\n2023-11-13 & 22: Sim update.\n\n2023-11-05:  Patch 10.2.\n\n2023-06-25:  Eye of Tyr adjusted based on Inmost Light.\n\n2023-06-24:  Judgment usage with Bulwark of Righteous Fury; trinket logic update.\n\n2023-05-24:  Update Light's Judgment, Divine Toll, Eye of Tyr usage.\n\n2023-02-27:  Use SotR with Bastion of Light, Divine Purpose, or 3+ Holy Power if Righteous Protector is not talented or is outside its ICD.\n\n2023-03-06:  Check for Of Dusk and Dawn buffs before spending using SotR at 3 CP.\n\n2023-03-19:  Updated for 10.0.7.\n\n2023-03-21:  Oops, Blessed Hammer still exists.\n\n2023-03-26:  Updates from SimulationCraft (Avenger's Shield usage for 2pc Tier 29, SotR if ICD is bypassed).",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "rebuke",
},
{
["action"] = "cleanse_toxins",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "mitigation",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "standard",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "buff.paladin_aura.down",
["action"] = "devotion_aura",
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "consecration",
["enabled"] = true,
},
},
["mitigation"] = {
{
["enabled"] = true,
["criteria"] = "tanking & buff.shield_of_the_righteous.down & ( holy_power.deficit = 0 || buff.divine_purpose.up )",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "health.pct < wog_health & ( holy_power.deficit = 0 || buff.divine_purpose.up || buff.shining_light_free.up )",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "talent.final_stand.enabled & tanking & incoming_damage_5s > ds_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "divine_shield",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > goak_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "guardian_of_ancient_kings",
},
{
["enabled"] = true,
["criteria"] = "defensive_sentinel & tanking & incoming_damage_5s > goak_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "avenging_wrath",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > goak_damage & ! ( buff.ardent_defender.up || buff.guardian_of_ancient_kings.up || buff.divine_shield.up || buff.potion.up )",
["action"] = "ardent_defender",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 15",
["action"] = "lay_on_hands",
},
},
["trinkets"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["criteria"] = "trinket.t1.has_cooldown & trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) || ! trinket.t2.has_cooldown",
["var_name"] = "trinket_sync_slot",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["criteria"] = "trinket.t2.has_cooldown & trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) || ! trinket.t1.has_cooldown",
["var_name"] = "trinket_sync_slot",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "( variable.trinket_sync_slot = 1 & ( buff.aw_sentinel.up || boss & fight_remains <= 40 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready || ! buff.aw_sentinel.up ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( buff.aw_sentinel.up || boss & fight_remains <= 40 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready || ! buff.aw_sentinel.up ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket2",
},
{
["action"] = "use_items",
["enabled"] = true,
},
},
["standard"] = {
{
["enabled"] = true,
["criteria"] = "buff.sanctification.stack = buff.sanctification.max_stack",
["action"] = "consecration",
},
{
["enabled"] = true,
["action"] = "shield_of_the_righteous",
["description"] = "Use Shield of the Righteous according to Righteous Protector's ICD, but use it asap if it's a free proc (Bugged interaction, this ignores ICD). Don't use it when on max Sanctification Stacks (Very next GCD will trigger Consecration, so we want the bonus damage)",
["criteria"] = "( ( ( ! talent.righteous_protector.enabled || cooldown.righteous_protector_icd.remains = 0 ) & holy_power > 2 ) || buff.bastion_of_light.up || buff.divine_purpose.up ) & ( ! buff.sanctification.up || buff.sanctification.stack < buff.sanctification.max_stack )",
},
{
["enabled"] = true,
["action"] = "avengers_shield",
["description"] = "Use Avenger's Shield as First Priority when 2pc buff is missing.",
["criteria"] = "( set_bonus.tier29_2pc || set_bonus.df4_2pc ) & ( ! buff.ally_of_the_light.up || buff.ally_of_the_light.remains < gcd.execute )",
},
{
["enabled"] = true,
["action"] = "judgment",
["criteria"] = "spell_targets.shield_of_the_righteous > 3 & buff.bulwark_of_righteous_fury.stack >= 3 & holy_power < 3",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "judgment",
["cycle_targets"] = 1,
["criteria"] = "! buff.sanctification_empower.up & set_bonus.tier31_2pc",
["description"] = "Use Judgment with higher priority if we need to build Sanctification Stacks",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "judgment",
["criteria"] = "charges >= 2 || full_recharge_time <= gcd.max",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.avengers_shield > 2 || buff.moment_of_glory.up",
["action"] = "avengers_shield",
},
{
["enabled"] = true,
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.in > 10 )",
["action"] = "divine_toll",
},
{
["action"] = "avengers_shield",
["enabled"] = true,
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "judgment",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! consecration.up & ( ! buff.sanctification.stack = buff.sanctification.max_stack || ! set_bonus.tier31_2pc )",
["action"] = "consecration",
},
{
["enabled"] = true,
["criteria"] = "talent.inmost_light.enabled & raid_event.adds.in >= 45 || spell_targets.shield_of_the_righteous >= 3",
["action"] = "eye_of_tyr",
},
{
["action"] = "blessed_hammer",
["enabled"] = true,
},
{
["action"] = "hammer_of_the_righteous",
["enabled"] = true,
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.inmost_light.enabled & raid_event.adds.in >= 60 || spell_targets.shield_of_the_righteous >= 3",
["action"] = "eye_of_tyr",
},
{
["enabled"] = true,
["criteria"] = "buff.shining_light_free.up",
["action"] = "word_of_glory",
},
{
["enabled"] = true,
["criteria"] = "holy_power < 5",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "! buff.sanctification_empower.up",
["action"] = "consecration",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["action"] = "avengers_shield",
["description"] = "Use Avenger's Shield as first priority before anything else, if t29 2pc is equipped.",
["criteria"] = "time = 0 & ( set_bonus.tier29_2pc || set_bonus.df4_2pc )",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! defensive_sentinel",
["action"] = "avenging_wrath",
},
{
["enabled"] = true,
["criteria"] = "buff.aw_sentinel.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( buff.aw_sentinel.remains < 15 || ( time > 10 || cooldown.sentinel.remains > 15 || cooldown.avenging_wrath.remains > 15 ) & ( cooldown.avengers_shield.remains & cooldown.judgment.remains & cooldown.hammer_of_wrath.remains ) )",
["action"] = "moment_of_glory",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shield_of_the_righteous >= 3",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["criteria"] = "buff.aw_sentinel.up || talent.sentinel.enabled & cooldown.sentinel.remains <= 30 || ! talent.sentinel.enabled & cooldown.avenging_wrath.remains <= 30",
["action"] = "bastion_of_light",
},
{
["enabled"] = true,
["criteria"] = "buff.aw_sentinel.remains > 8",
["action"] = "fireblood",
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'trinkets' required some automated changes.\nLine 1: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 1: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 1: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 1: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 1: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 1: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 1: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 3: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 4: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'cooldowns' required some automated changes.\nLine 8: Converted 'talent.sentinel' to 'talent.sentinel.enabled' (1x).\nLine 8: Converted 'talent.sentinel' to 'talent.sentinel.enabled' (1x).\n\nImported 6 action lists.\n",
["spec"] = 66,
["profile"] = "actions.precombat+=/devotion_aura,if=buff.paladin_aura.down\nactions.precombat+=/lights_judgment\nactions.precombat+=/arcane_torrent\nactions.precombat+=/consecration\n\n# Executed every time the actor is available.\nactions=rebuke\nactions+=/cleanse_toxins\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=mitigation\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=standard\n\n# Use Avenger's Shield as first priority before anything else, if t29 2pc is equipped.\nactions.cooldowns+=/avengers_shield,if=time=0&(set_bonus.tier29_2pc||set_bonus.df4_2pc)\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/avenging_wrath\nactions.cooldowns+=/sentinel,if=!defensive_sentinel\nactions.cooldowns+=/potion,if=buff.aw_sentinel.up\nactions.cooldowns+=/moment_of_glory,if=(buff.aw_sentinel.remains<15||(time>10||cooldown.sentinel.remains>15||cooldown.avenging_wrath.remains>15)&(cooldown.avengers_shield.remains&cooldown.judgment.remains&cooldown.hammer_of_wrath.remains))\nactions.cooldowns+=/divine_toll,if=spell_targets.shield_of_the_righteous>=3\nactions.cooldowns+=/bastion_of_light,if=buff.aw_sentinel.up||talent.sentinel&cooldown.sentinel.remains<=30||!talent.sentinel&cooldown.avenging_wrath.remains<=30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.aw_sentinel.up\nactions.cooldowns+=/fireblood,if=buff.aw_sentinel.remains>8\n\nactions.mitigation=shield_of_the_righteous,if=tanking&buff.shield_of_the_righteous.down&(holy_power.deficit=0||buff.divine_purpose.up)\nactions.mitigation+=/word_of_glory,if=health.pct<wog_health&(holy_power.deficit=0||buff.divine_purpose.up||buff.shining_light_free.up)\nactions.mitigation+=/divine_shield,if=talent.final_stand.enabled&tanking&incoming_damage_5s>ds_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/guardian_of_ancient_kings,if=tanking&incoming_damage_5s>goak_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/sentinel,if=defensive_sentinel&tanking&incoming_damage_5s>goak_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/ardent_defender,if=tanking&incoming_damage_5s>goak_damage&!(buff.ardent_defender.up||buff.guardian_of_ancient_kings.up||buff.divine_shield.up||buff.potion.up)\nactions.mitigation+=/lay_on_hands,if=health.pct<15\n\nactions.standard+=/consecration,if=buff.sanctification.stack=buff.sanctification.max_stack\n# Use Shield of the Righteous according to Righteous Protector's ICD, but use it asap if it's a free proc (Bugged interaction, this ignores ICD). Don't use it when on max Sanctification Stacks (Very next GCD will trigger Consecration, so we want the bonus damage)\nactions.standard+=/shield_of_the_righteous,if=(((!talent.righteous_protector.enabled||cooldown.righteous_protector_icd.remains=0)&holy_power>2)||buff.bastion_of_light.up||buff.divine_purpose.up)&(!buff.sanctification.up||buff.sanctification.stack<buff.sanctification.max_stack)\n# Use Avenger's Shield as First Priority when 2pc buff is missing.\nactions.standard+=/avengers_shield,if=(set_bonus.tier29_2pc||set_bonus.df4_2pc)&(!buff.ally_of_the_light.up||buff.ally_of_the_light.remains<gcd.execute)\nactions.standard+=/judgment,cycle_targets=1,if=spell_targets.shield_of_the_righteous>3&buff.bulwark_of_righteous_fury.stack>=3&holy_power<3\n# Use Judgment with higher priority if we need to build Sanctification Stacks\nactions.standard+=/judgment,cycle_targets=1,if=!buff.sanctification_empower.up&set_bonus.tier31_2pc\nactions.standard+=/hammer_of_wrath\nactions.standard+=/judgment,cycle_targets=1,if=charges>=2||full_recharge_time<=gcd.max\nactions.standard+=/avengers_shield,if=spell_targets.avengers_shield>2||buff.moment_of_glory.up\nactions.standard+=/divine_toll,if=(!raid_event.adds.exists||raid_event.adds.in>10)\nactions.standard+=/avengers_shield\nactions.standard+=/hammer_of_wrath\nactions.standard+=/judgment,cycle_targets=1\nactions.standard+=/consecration,if=!consecration.up&(!buff.sanctification.stack=buff.sanctification.max_stack||!set_bonus.tier31_2pc)\nactions.standard+=/eye_of_tyr,if=talent.inmost_light.enabled&raid_event.adds.in>=45||spell_targets.shield_of_the_righteous>=3\nactions.standard+=/blessed_hammer\nactions.standard+=/hammer_of_the_righteous\nactions.standard+=/crusader_strike\nactions.standard+=/eye_of_tyr,if=!talent.inmost_light.enabled&raid_event.adds.in>=60||spell_targets.shield_of_the_righteous>=3\nactions.standard+=/word_of_glory,if=buff.shining_light_free.up\nactions.standard+=/arcane_torrent,if=holy_power<5\nactions.standard+=/consecration,if=!buff.sanctification_empower.up\n\nactions.trinkets+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_cooldown&trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)||!trinket.2.has_cooldown\nactions.trinkets+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_cooldown&trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)||!trinket.1.has_cooldown\nactions.trinkets+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(buff.aw_sentinel.up||boss&fight_remains<=40)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready||!buff.aw_sentinel.up))||!variable.trinket_sync_slot)\nactions.trinkets+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(buff.aw_sentinel.up||boss&fight_remains<=40)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready||!buff.aw_sentinel.up))||!variable.trinket_sync_slot)\nactions.trinkets+=/use_items",
},
["Holy Paladin"] = {
["builtIn"] = true,
["date"] = 20231117,
["spec"] = 65,
["desc"] = "2023-03-22:  Updated for 10.0.7 (Seraphim removed, Avenging Wrath and Avenging Crusader split).",
["lists"] = {
["spenders"] = {
{
["enabled"] = true,
["criteria"] = "! talent.awakening.enabled || active_enemies > 1",
["action"] = "shield_of_the_righteous",
},
{
["enabled"] = true,
["criteria"] = "talent.awakening.enabled & group",
["action"] = "light_of_dawn",
},
{
["enabled"] = true,
["criteria"] = "talent.awakening.enabled",
["action"] = "word_of_glory",
},
},
["default"] = {
{
["action"] = "rebuke",
["enabled"] = true,
},
{
["action"] = "avenging_wrath",
["enabled"] = true,
},
{
["action"] = "avenging_crusader",
["enabled"] = true,
},
{
["action"] = "blessing_of_summer",
["enabled"] = true,
},
{
["action"] = "blessing_of_autumn",
["enabled"] = true,
},
{
["action"] = "blessing_of_winter",
["enabled"] = true,
},
{
["action"] = "blessing_of_spring",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "! talent.avenging_crusader.enabled || cooldown.avenging_crusader.remains > gcd.max || holy_power.deficit = 0",
["list_name"] = "spenders",
},
{
["action"] = "divine_toll",
["enabled"] = true,
},
{
["action"] = "lights_hammer",
["enabled"] = true,
},
{
["action"] = "holy_prism",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! consecration.up & action.crusader_strike.in_range",
["action"] = "consecration",
},
{
["action"] = "hammer_of_wrath",
["enabled"] = true,
},
{
["action"] = "judgment",
["enabled"] = true,
},
{
["action"] = "holy_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.holy_shock.remains > gcd.max",
["action"] = "crusader_strike",
},
},
},
["version"] = 20231117,
["warnings"] = "The import for 'spenders' required some automated changes.\nLine 1: Converted 'talent.awakening' to 'talent.awakening.enabled' (1x).\nLine 2: Converted 'talent.awakening' to 'talent.awakening.enabled' (1x).\nLine 3: Converted 'talent.awakening' to 'talent.awakening.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 9: Converted 'talent.avenging_crusader' to 'talent.avenging_crusader.enabled' (1x).\n\nImported 3 action lists.\n",
["author"] = "Kaleokalani",
["profile"] = "actions+=/rebuke\nactions+=/avenging_wrath\nactions+=/avenging_crusader\nactions+=/blessing_of_summer\nactions+=/blessing_of_autumn\nactions+=/blessing_of_winter\nactions+=/blessing_of_spring\nactions+=/use_items\nactions+=/call_action_list,name=spenders,strict=1,if=!talent.avenging_crusader||cooldown.avenging_crusader.remains>gcd.max||holy_power.deficit=0\nactions+=/divine_toll\nactions+=/lights_hammer\nactions+=/holy_prism\nactions+=/consecration,if=!consecration.up&action.crusader_strike.in_range\nactions+=/hammer_of_wrath\nactions+=/judgment\nactions+=/holy_shock\nactions+=/crusader_strike,if=cooldown.holy_shock.remains>gcd.max\n\nactions.spenders+=/shield_of_the_righteous,if=!talent.awakening||active_enemies>1\nactions.spenders+=/light_of_dawn,if=talent.awakening&group\nactions.spenders+=/word_of_glory,if=talent.awakening",
},
["Retribution"] = {
["builtIn"] = true,
["date"] = 20240508,
["spec"] = 70,
["desc"] = "2024-05-08: SimC update.\n\n2024-03-22: Correct missed APL update.\n\n2024-01-21: Recommend Retribution Aura if no aura is applied.\n\n2023-11-27:  Usable mainhands for Ret.\n\n2023-11-08: Minor SimC update.\n\n2023-07-14: Update for 10.1.5.\n\n2023-06-24: Execution Sentence usage adjusted for Executioner's Will.\n\n2023-05-18: More work to let abilities synced abilities desync if the other ability is disabled/toggled/etc.\n\n2023-05-17: Iterate on FR/AW sync to allow spenders to be used while waiting for FR/AW.\n\n2023-05-14:  Improve FR/AW sync.\n\n2023-05-08:  More 10.1 updates.\n\n2023-05-02:  10.1 update.\n\n2023-03-28:  Update potion end-of-fight usage to check for boss.\n\n2023-03-21:  10.0.7 priority update.\n\n2023-03-13:  Edits to support finishers during Crusade procs from Retribution Aura.\n\n2023-02-21:  Iterate on trinket timing (end of bossfight logic).",
["profile"] = "actions.precombat+=/retribution_aura,if=!buff.paladin_aura.up\nactions.precombat+=/arcane_torrent,if=talent.final_reckoning\nactions.precombat+=/shield_of_vengeance\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.strength||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.strength||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.1.cooldown.duration=0||trinket.1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.2.cooldown.duration=0||trinket.2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.2.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\n\n# Executed every time the actor is available.\nactions+=/rebuke\nactions+=/variable,name=time_to_crusade,op=setif,value=cooldown.crusade.remains<?buff.crusade.remains,value_else=0,condition=talent.crusade\nactions+=/call_action_list,name=cooldowns\nactions+=/call_action_list,name=generators\n\nactions.cooldowns+=/potion,if=buff.avenging_wrath.up||buff.crusade.up||boss&fight_remains<30\n## actions.cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.avenging_wrath.up||buff.crusade.up\nactions.cooldowns+=/lights_judgment,if=spell_targets.lights_judgment>=2||!raid_event.adds.exists||raid_event.adds.in>75||raid_event.adds.up\nactions.cooldowns+=/fireblood,if=buff.avenging_wrath.up||buff.crusade.up&buff.crusade.stack=10\nactions.cooldowns+=/use_item,name=algethar_puzzle_box,if=(cooldown.avenging_wrath.remains<5&!talent.crusade||cooldown.crusade.remains<5&talent.crusade)&(holy_power>=4&time<5||holy_power>=3&time>5)\nactions.cooldowns+=/use_item,slot=trinket1,if=(buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions.cooldowns+=/use_item,slot=trinket2,if=(buff.avenging_wrath.up&cooldown.avenging_wrath.remains>40||buff.crusade.up&buff.crusade.stack=10)&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\nactions.cooldowns+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs||!buff.crusade.up&cooldown.crusade.remains>20||!buff.avenging_wrath.up&cooldown.avenging_wrath.remains>20)\nactions.cooldowns+=/use_item,name=main_hand,if=(trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)\nactions.cooldowns+=/use_item,name=shadowed_razing_annihilator,if=(trinket.2.cooldown.remains||!variable.trinket_2_buffs)&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)\nactions.cooldowns+=/use_item,name=fyralath_the_dreamrender,if=dot.mark_of_fyralath.ticking&!buff.avenging_wrath.up&!buff.crusade.up\nactions.cooldowns+=/shield_of_vengeance,if=fight_remains>15&(!talent.execution_sentence||!debuff.execution_sentence.up)\nactions.cooldowns+=/execution_sentence,if=(!buff.crusade.up&cooldown.crusade.remains>15||buff.crusade.stack=10||cooldown.avenging_wrath.remains<0.75||cooldown.avenging_wrath.remains>15)&(holy_power>=4&time<5||holy_power>=3&time>5||holy_power>=2&talent.divine_auxiliary)&(target.time_to_die>8&!talent.executioners_will||target.time_to_die>12)\nactions.cooldowns+=/avenging_wrath,if=(holy_power>=4&time<5||holy_power>=3&(time>5||!talent.vanguard_of_justice)||holy_power>=2&talent.divine_auxiliary&(cooldown.execution_sentence.remains=0||cooldown.final_reckoning.remains=0))&(!raid_event.adds.up||target.time_to_die>10)\nactions.cooldowns+=/crusade,if=buff.crusade.remains<gcd.max&(holy_power>=5&time<5||holy_power>=3&time>5)\nactions.cooldowns+=/final_reckoning,if=(holy_power>=4&time<8||holy_power>=3&(time>=8||!talent.vanguard_of_justice)||holy_power>=2&talent.divine_auxiliary)&(cooldown.avenging_wrath.remains>10||cooldown.crusade.remains&(!buff.crusade.up||buff.crusade.stack>=10))&(!raid_event.adds.exists||raid_event.adds.up||raid_event.adds.in>40)\n\nactions.finishers+=/variable,name=ds_castable,value=(spell_targets.divine_storm>=3||spell_targets.divine_storm>=2&!talent.divine_arbiter||buff.empyrean_power.up)&!buff.empyrean_legacy.up&!(buff.divine_arbiter.up&buff.divine_arbiter.stack>24)\nactions.finishers+=/divine_storm,if=variable.ds_castable&(!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10)\nactions.finishers+=/justicars_vengeance,if=!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10\nactions.finishers+=/templars_verdict,if=!talent.crusade||cooldown.crusade.remains>gcd*3||buff.crusade.up&buff.crusade.stack<10\n\nactions.generators+=/call_action_list,name=finishers,if=holy_power=5||buff.echoes_of_wrath.up&set_bonus.tier31_4pc&talent.crusading_strikes||(debuff.judgment.up||holy_power=4)&buff.divine_resonance.up&!set_bonus.tier31_2pc\nactions.generators+=/wake_of_ashes,if=holy_power<=2&(cooldown.avenging_wrath.remains>6||cooldown.crusade.remains>6||!talent.crusade&action.avenging_wrath.disabled||talent.crusade&action.crusade.disabled)&(!talent.execution_sentence||cooldown.execution_sentence.remains>4||target.time_to_die<8)&(!raid_event.adds.exists||raid_event.adds.in>20||raid_event.adds.up)\nactions.generators+=/blade_of_justice,if=!dot.expurgation.ticking&set_bonus.tier31_2pc\nactions.generators+=/divine_toll,if=holy_power<=2&(!raid_event.adds.exists||raid_event.adds.in>30||raid_event.adds.up)&(cooldown.avenging_wrath.remains>15||cooldown.crusade.remains>15||fight_remains<8)\nactions.generators+=/judgment,if=dot.expurgation.ticking&!buff.echoes_of_wrath.up&set_bonus.tier31_2pc\nactions.generators+=/call_action_list,name=finishers,strict=1,if=holy_power>=3&buff.crusade.up&buff.crusade.stack<10\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd&spell_targets.divine_storm>=2\nactions.generators+=/blade_of_justice,if=(holy_power<=3||!talent.holy_blade)&(spell_targets.divine_storm>=2&!talent.crusading_strikes||spell_targets.divine_storm>=4)\nactions.generators+=/hammer_of_wrath,if=(spell_targets.divine_storm<2||!talent.blessed_champion||set_bonus.tier30_4pc)&(holy_power<=3||target.health.pct>20||!talent.vanguards_momentum)\nactions.generators+=/templar_slash,if=buff.templar_strikes.remains<gcd\nactions.generators+=/judgment,if=!debuff.judgment.up&(holy_power<=3||!talent.boundless_judgment)\nactions.generators+=/blade_of_justice,if=holy_power<=3||!talent.holy_blade\nactions.generators+=/call_action_list,name=finishers,strict=1,if=(target.health.pct<=20||buff.avenging_wrath.up||buff.crusade.up||buff.empyrean_power.up)\nactions.generators+=/consecration,if=!consecration.up&spell_targets.divine_storm>=2\nactions.generators+=/divine_hammer,if=spell_targets.divine_storm>=2\nactions.generators+=/crusader_strike,if=cooldown.crusader_strike.charges_fractional>=1.75&(holy_power<=2||holy_power<=3&cooldown.blade_of_justice.remains>gcd*2||holy_power=4&cooldown.blade_of_justice.remains>gcd*2&cooldown.judgment.remains>gcd*2)\nactions.generators+=/call_action_list,name=finishers\nactions.generators+=/templar_slash\nactions.generators+=/templar_strike\nactions.generators+=/judgment,if=holy_power<=3||!talent.boundless_judgment\nactions.generators+=/hammer_of_wrath,if=holy_power<=3||target.health.pct>20||!talent.vanguards_momentum\nactions.generators+=/crusader_strike\nactions.generators+=/arcane_torrent\nactions.generators+=/consecration\nactions.generators+=/divine_hammer",
["version"] = 20240508,
["warnings"] = "The import for 'default' required some automated changes.\nLine 2: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'talent.final_reckoning' to 'talent.final_reckoning.enabled' (1x).\nLine 4: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 4: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 4: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 4: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 5: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 5: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 5: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 5: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 5: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t1.cooldown.duration=0)'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.crusade.duration=0||cooldown.crusade.duration%%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.crusade.duration=0||cooldown.crusade.duration%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%cooldown.avenging_wrath.duration=0||cooldown.avenging_wrath.duration%trinket.t2.cooldown.duration=0)'.\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 8: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 8: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 8: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 8: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 8: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 8: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 8: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 8: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'cooldowns' required some automated changes.\nLine 4: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 4: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 5: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 5: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 6: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 7: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 8: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 9: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 12: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 13: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 13: Converted 'talent.executioners_will' to 'talent.executioners_will.enabled' (1x).\nLine 14: Converted 'talent.vanguard_of_justice' to 'talent.vanguard_of_justice.enabled' (1x).\nLine 14: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\nLine 16: Converted 'talent.vanguard_of_justice' to 'talent.vanguard_of_justice.enabled' (1x).\nLine 16: Converted 'talent.divine_auxiliary' to 'talent.divine_auxiliary.enabled' (1x).\n\nThe import for 'finishers' required some automated changes.\nLine 1: Converted 'talent.divine_arbiter' to 'talent.divine_arbiter.enabled' (1x).\nLine 2: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 3: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 4: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\n\nThe import for 'generators' required some automated changes.\nLine 1: Converted 'talent.crusading_strikes' to 'talent.crusading_strikes.enabled' (1x).\nLine 2: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 2: Converted 'talent.crusade' to 'talent.crusade.enabled' (1x).\nLine 2: Converted 'talent.execution_sentence' to 'talent.execution_sentence.enabled' (1x).\nLine 8: Converted 'talent.holy_blade' to 'talent.holy_blade.enabled' (1x).\nLine 8: Converted 'talent.crusading_strikes' to 'talent.crusading_strikes.enabled' (1x).\nLine 9: Converted 'talent.blessed_champion' to 'talent.blessed_champion.enabled' (1x).\nLine 9: Converted 'talent.vanguards_momentum' to 'talent.vanguards_momentum.enabled' (1x).\nLine 11: Converted 'talent.boundless_judgment' to 'talent.boundless_judgment.enabled' (1x).\nLine 12: Converted 'talent.holy_blade' to 'talent.holy_blade.enabled' (1x).\nLine 20: Converted 'talent.boundless_judgment' to 'talent.boundless_judgment.enabled' (1x).\nLine 21: Converted 'talent.vanguards_momentum' to 'talent.vanguards_momentum.enabled' (1x).\n\nImported 5 action lists.\n",
["author"] = "SimC",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "rebuke",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "time_to_crusade",
["criteria"] = "talent.crusade.enabled",
["value_else"] = "0",
["value"] = "cooldown.crusade.remains <? buff.crusade.remains",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generators",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "! buff.paladin_aura.up",
["action"] = "retribution_aura",
},
{
["enabled"] = true,
["criteria"] = "talent.final_reckoning.enabled",
["action"] = "arcane_torrent",
},
{
["action"] = "shield_of_vengeance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t1.cooldown.duration = 0 || trinket.t1.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t1.cooldown.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.crusade.duration = 0 || cooldown.crusade.duration % trinket.t2.cooldown.duration = 0 || trinket.t2.cooldown.duration % cooldown.avenging_wrath.duration = 0 || cooldown.avenging_wrath.duration % trinket.t2.cooldown.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
},
["generators"] = {
{
["enabled"] = true,
["criteria"] = "holy_power = 5 || buff.echoes_of_wrath.up & set_bonus.tier31_4pc & talent.crusading_strikes.enabled || ( debuff.judgment.up || holy_power = 4 ) & buff.divine_resonance.up & ! set_bonus.tier31_2pc",
["action"] = "call_action_list",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 2 & ( cooldown.avenging_wrath.remains > 6 || cooldown.crusade.remains > 6 || ! talent.crusade.enabled & action.avenging_wrath.disabled || talent.crusade.enabled & action.crusade.disabled ) & ( ! talent.execution_sentence.enabled || cooldown.execution_sentence.remains > 4 || target.time_to_die < 8 ) & ( ! raid_event.adds.exists || raid_event.adds.in > 20 || raid_event.adds.up )",
["action"] = "wake_of_ashes",
},
{
["enabled"] = true,
["criteria"] = "! dot.expurgation.ticking & set_bonus.tier31_2pc",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 2 & ( ! raid_event.adds.exists || raid_event.adds.in > 30 || raid_event.adds.up ) & ( cooldown.avenging_wrath.remains > 15 || cooldown.crusade.remains > 15 || fight_remains < 8 )",
["action"] = "divine_toll",
},
{
["enabled"] = true,
["criteria"] = "dot.expurgation.ticking & ! buff.echoes_of_wrath.up & set_bonus.tier31_2pc",
["action"] = "judgment",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "holy_power >= 3 & buff.crusade.up & buff.crusade.stack < 10",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max & spell_targets.divine_storm >= 2",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "( holy_power <= 3 || ! talent.holy_blade.enabled ) & ( spell_targets.divine_storm >= 2 & ! talent.crusading_strikes.enabled || spell_targets.divine_storm >= 4 )",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.divine_storm < 2 || ! talent.blessed_champion.enabled || set_bonus.tier30_4pc ) & ( holy_power <= 3 || target.health.pct > 20 || ! talent.vanguards_momentum.enabled )",
["action"] = "hammer_of_wrath",
},
{
["enabled"] = true,
["criteria"] = "buff.templar_strikes.remains < gcd.max",
["action"] = "templar_slash",
},
{
["enabled"] = true,
["criteria"] = "! debuff.judgment.up & ( holy_power <= 3 || ! talent.boundless_judgment.enabled )",
["action"] = "judgment",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || ! talent.holy_blade.enabled",
["action"] = "blade_of_justice",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( target.health.pct <= 20 || buff.avenging_wrath.up || buff.crusade.up || buff.empyrean_power.up )",
["list_name"] = "finishers",
},
{
["enabled"] = true,
["criteria"] = "! consecration.up & spell_targets.divine_storm >= 2",
["action"] = "consecration",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_storm >= 2",
["action"] = "divine_hammer",
},
{
["enabled"] = true,
["criteria"] = "cooldown.crusader_strike.charges_fractional >= 1.75 & ( holy_power <= 2 || holy_power <= 3 & cooldown.blade_of_justice.remains > gcd.max * 2 || holy_power = 4 & cooldown.blade_of_justice.remains > gcd.max * 2 & cooldown.judgment.remains > gcd.max * 2 )",
["action"] = "crusader_strike",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "finishers",
},
{
["action"] = "templar_slash",
["enabled"] = true,
},
{
["action"] = "templar_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || ! talent.boundless_judgment.enabled",
["action"] = "judgment",
},
{
["enabled"] = true,
["criteria"] = "holy_power <= 3 || target.health.pct > 20 || ! talent.vanguards_momentum.enabled",
["action"] = "hammer_of_wrath",
},
{
["action"] = "crusader_strike",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "consecration",
["enabled"] = true,
},
{
["action"] = "divine_hammer",
["enabled"] = true,
},
},
["finishers"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( spell_targets.divine_storm >= 3 || spell_targets.divine_storm >= 2 & ! talent.divine_arbiter.enabled || buff.empyrean_power.up ) & ! buff.empyrean_legacy.up & ! ( buff.divine_arbiter.up & buff.divine_arbiter.stack > 24 )",
["var_name"] = "ds_castable",
},
{
["enabled"] = true,
["criteria"] = "variable.ds_castable & ( ! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10 )",
["action"] = "divine_storm",
},
{
["enabled"] = true,
["criteria"] = "! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10",
["action"] = "justicars_vengeance",
},
{
["enabled"] = true,
["criteria"] = "! talent.crusade.enabled || cooldown.crusade.remains > gcd.max * 3 || buff.crusade.up & buff.crusade.stack < 10",
["action"] = "templars_verdict",
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up || boss & fight_remains < 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.lights_judgment >= 2 || ! raid_event.adds.exists || raid_event.adds.in > 75 || raid_event.adds.up",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.avenging_wrath.up || buff.crusade.up & buff.crusade.stack = 10",
["action"] = "fireblood",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["criteria"] = "( cooldown.avenging_wrath.remains < 5 & ! talent.crusade.enabled || cooldown.crusade.remains < 5 & talent.crusade.enabled ) & ( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 )",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 40 || buff.crusade.up & buff.crusade.stack = 10 ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs || ! buff.crusade.up & cooldown.crusade.remains > 20 || ! buff.avenging_wrath.up & cooldown.avenging_wrath.remains > 20 )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "main_hand",
["criteria"] = "( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs )",
["name"] = "main_hand",
},
{
["enabled"] = true,
["action"] = "shadowed_razing_annihilator",
["criteria"] = "( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs )",
["name"] = "shadowed_razing_annihilator",
},
{
["enabled"] = true,
["action"] = "fyralath_the_dreamrender",
["criteria"] = "dot.mark_of_fyralath.ticking & ! buff.avenging_wrath.up & ! buff.crusade.up",
["name"] = "fyralath_the_dreamrender",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 15 & ( ! talent.execution_sentence.enabled || ! debuff.execution_sentence.up )",
["action"] = "shield_of_vengeance",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.crusade.up & cooldown.crusade.remains > 15 || buff.crusade.stack = 10 || cooldown.avenging_wrath.remains < 0.75 || cooldown.avenging_wrath.remains > 15 ) & ( holy_power >= 4 & time < 5 || holy_power >= 3 & time > 5 || holy_power >= 2 & talent.divine_auxiliary.enabled ) & ( target.time_to_die > 8 & ! talent.executioners_will.enabled || target.time_to_die > 12 )",
["action"] = "execution_sentence",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 5 || holy_power >= 3 & ( time > 5 || ! talent.vanguard_of_justice.enabled ) || holy_power >= 2 & talent.divine_auxiliary.enabled & ( cooldown.execution_sentence.remains = 0 || cooldown.final_reckoning.remains = 0 ) ) & ( ! raid_event.adds.up || target.time_to_die > 10 )",
["action"] = "avenging_wrath",
},
{
["enabled"] = true,
["criteria"] = "buff.crusade.remains < gcd.max & ( holy_power >= 5 & time < 5 || holy_power >= 3 & time > 5 )",
["action"] = "crusade",
},
{
["enabled"] = true,
["criteria"] = "( holy_power >= 4 & time < 8 || holy_power >= 3 & ( time >= 8 || ! talent.vanguard_of_justice.enabled ) || holy_power >= 2 & talent.divine_auxiliary.enabled ) & ( cooldown.avenging_wrath.remains > 10 || cooldown.crusade.remains & ( ! buff.crusade.up || buff.crusade.stack >= 10 ) ) & ( ! raid_event.adds.exists || raid_event.adds.up || raid_event.adds.in > 40 )",
["action"] = "final_reckoning",
},
},
},
},
},
["notifications"] = {
["y"] = 471.7037963867188,
},
["toggles"] = {
["interrupts"] = {
["value"] = false,
},
["essences"] = {
["value"] = false,
["override"] = false,
},
},
},
},
}
