
HekiliDB = {
["namespaces"] = {
["LibDualSpec-1.0"] = {
},
},
["profileKeys"] = {
["Releaf - Turalyon"] = "Default",
},
["profiles"] = {
["Default"] = {
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
["x"] = -55.00000381469727,
},
["Cooldowns"] = {
["rel"] = "CENTER",
["y"] = -280.0000305175781,
},
["Primary"] = {
["y"] = -188.7334594726563,
["x"] = 179.2003173828125,
["rel"] = "CENTER",
},
["AOE"] = {
["rel"] = "CENTER",
},
["Defensives"] = {
["rel"] = "CENTER",
["x"] = -110.0000076293945,
},
},
["iconStore"] = {
["minimapPos"] = 358.7007559934921,
},
["enabled"] = false,
["runOnce"] = {
["forceReloadClassDefaultOptions_20220306_103"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["forceReloadClassDefaultOptions_20220306_105"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["forceReloadClassDefaultOptions_20220306_102"] = true,
["forceReloadAllDefaultPriorities_20220228"] = true,
["fixHavocPriorityVersion_20240805"] = true,
["forceReloadClassDefaultOptions_20220306_104"] = true,
["updateMaxRefreshToNewSpecOptions_20220222"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
},
["specs"] = {
[103] = {
["settings"] = {
["vigil_damage"] = 50,
["solo_prowl"] = false,
["regrowth"] = true,
["lazy_swipe"] = false,
["frenzy_cp"] = 2,
["zerk_biteweave"] = false,
["rip_duration"] = 9,
},
},
[104] = {
["settings"] = {
["vigil_damage"] = 50,
["catweave_bear"] = false,
["maul_anyway"] = true,
["ironfur_damage_threshold"] = 5,
["maul_rage"] = 20,
["max_ironfur"] = 1,
},
},
[102] = {
["settings"] = {
["vigil_damage"] = 50,
["starlord_cancel"] = false,
},
},
},
["packs"] = {
["Feral"] = {
["builtIn"] = true,
["date"] = 20240904,
["spec"] = 103,
["desc"] = "2024-09-04: SimC update\n\n2024-09-03: Tweak targeting\n\n2024-08-24: SimC priority update\n\n2024-08-15: Adjust Ferocious Bite for Wildstalker\n\n2024-08-11: Mark of the Wild, priority update\n\n2024-08-08: Interrupt and Soothe\n\n2024-07-24: The War Within",
["profile"] = "actions.precombat+=/mark_of_the_wild\nactions.precombat+=/prowl,if=!buff.prowl.up\nactions.precombat+=/cat_form,if=!buff.cat_form.up\n# check if trinket slot contains a stat on use (variable is just kept in case of things like mirror not working with has_use_buff)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff\n# if we are playing 2 minute convoke, we prefer 2 minute on-use over 3 minute on-use even without berserk: heart of the lion\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=talent.convoke_the_spirits&!talent.ashamanes_guidance&variable.trinket_1_buffs&(trinket.1.cooldown.duration%%120=0||120%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=talent.convoke_the_spirits&!talent.ashamanes_guidance&variable.trinket_2_buffs&(trinket.1.cooldown.duration%%120=0||120%%trinket.1.cooldown.duration=0)\n# if we aren't playing 2 minute convoke, then we can sync 3 minute cds with berserk sans hotl\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=!(talent.convoke_the_spirits&!talent.ashamanes_guidance)&variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.1.cooldown.duration=0||trinket.1.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=!(talent.convoke_the_spirits&!talent.ashamanes_guidance)&variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.2.cooldown.duration=0||trinket.2.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.2.cooldown.duration=0)\n# prioritize trinkets that line-up with cds->main-stat on uses->longer cd trinkets->shorter duration trinkets\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.agility)*(1.2+trinket.2.has_buff.mastery)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.agility)*(1.2+trinket.1.has_buff.mastery)*(variable.trinket_1_sync))\n\nactions+=/prowl,if=buff.bs_inc.down&!buff.prowl.up\nactions+=/cat_form,if=!buff.cat_form.up&!talent.fluid_form\nactions+=/skull_bash\nactions+=/soothe\n## Line up <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> with Berserk.\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.bs_inc.up||!talent.berserk_heart_of_the_lion\nactions+=/call_action_list,name=variable\n## actions+=/stop_moving,if=gcd.remains=0&equipped.ovinaxs_mercurial_egg\nactions+=/tigers_fury,if=(energy.deficit>35||combo_points=5)&(fight_remains<=15||(cooldown.bs_inc.remains>20&target.time_to_die>5)||(cooldown.bs_inc.ready&target.time_to_die>12||target.time_to_die=fight_remains))\nactions+=/rake,cycle_targets=1,if=buff.shadowmeld.up||buff.prowl.up\nactions+=/natures_vigil,if=spell_targets.swipe_cat>0\nactions+=/renewal,if=health.pct<60&variable.regrowth\nactions+=/ferocious_bite,if=buff.apex_predators_craving.up&!(variable.need_bt&active_bt_triggers=2)\nactions+=/adaptive_swarm,cycle_targets=1,if=(!dot.adaptive_swarm_damage.ticking||dot.adaptive_swarm_damage.remains<2)&dot.adaptive_swarm_damage.stack<3&!action.adaptive_swarm_damage.in_flight&!action.adaptive_swarm.in_flight&target.time_to_die>5&(buff.cat_form.up&!talent.unbridled_swarm.enabled||spell_targets.swipe_cat=1)\nactions+=/adaptive_swarm,cycle_targets=1,if=buff.cat_form.up&dot.adaptive_swarm_damage.stack<3&talent.unbridled_swarm.enabled&spell_targets.swipe_cat>1\nactions+=/call_action_list,name=cooldown,strict=1,if=dot.rip.ticking\n# with wildstalker and not both raging fury + veinripper, low cp rips for snapshot reasons is worth\nactions+=/rip,if=spell_targets=1&hero_tree.wildstalker&!(talent.raging_fury&talent.veinripper)&(buff.bloodtalons.up||!talent.bloodtalons)&(dot.rip.refreshable&buff.tigers_fury.remains>10&combo_points>=3||buff.tigers_fury.remains<3.0&buff.tigers_fury.up&combo_points>=3&remains<16)\nactions+=/run_action_list,name=berserk,strict=1,if=buff.bs_inc.up\nactions+=/call_action_list,name=finisher,if=combo_points=5\nactions+=/call_action_list,name=builder,if=spell_targets.swipe_cat=1&combo_points<5&(variable.time_to_pool<=0||!variable.need_bt||variable.proccing_bt)\nactions+=/call_action_list,name=aoe_builder,if=spell_targets.swipe_cat>=2&combo_points<5&(variable.time_to_pool<=0||!variable.need_bt||variable.proccing_bt)\nactions+=/regrowth,if=buff.predatory_swiftness.up&variable.regrowth\n\nactions.aoe_builder+=/variable,name=proccing_bt,op=set,value=variable.need_bt\n# maintain thrash highest prio\nactions.aoe_builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws&!(variable.need_bt&buff.bt_thrash.up)\n# avoid capping brs charges\nactions.aoe_builder+=/brutal_slash,cycle_targets=1,if=(cooldown.brutal_slash.full_recharge_time<4||time_to_die<4||raid_event.adds.remains<4)&!(variable.need_bt&buff.bt_swipe.up)\n# with wild slashes we swipe at 5+ targets over raking/moonfire\nactions.aoe_builder+=/swipe_cat,if=time_to_die<4||(talent.wild_slashes&spell_targets.swipe_cat>4&!(variable.need_bt&buff.bt_swipe.up))\nactions.aoe_builder+=/prowl,if=dot.rake.refreshable||dot.rake.pmultiplier<1.4&!(variable.need_bt&buff.bt_rake.up)&action.rake.ready&gcd.remains=0&!buff.sudden_ambush.up&!variable.cc_capped\nactions.aoe_builder+=/shadowmeld,if=dot.rake.refreshable||dot.rake.pmultiplier<1.4&!(variable.need_bt&buff.bt_rake.up)&action.rake.ready&!buff.sudden_ambush.up&!buff.prowl.up&!variable.cc_capped\n# dcr rake > moonfire\nactions.aoe_builder+=/rake,cycle_targets=1,if=refreshable&talent.doubleclawed_rake&!(variable.need_bt&buff.bt_rake.up)&!variable.cc_capped\n# at 4t with wild slashes, swipe is better than moonfiring\nactions.aoe_builder+=/swipe_cat,if=talent.wild_slashes&spell_targets.swipe_cat>3&!(variable.need_bt&buff.bt_swipe.up)\n# li moonfire is better than non-dcr rake\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=refreshable&!(variable.need_bt&buff.bt_moonfire.up)&!variable.cc_capped\nactions.aoe_builder+=/rake,cycle_targets=1,if=refreshable&!(variable.need_bt&buff.bt_rake.up)&!variable.cc_capped\n# fillers\nactions.aoe_builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.aoe_builder+=/swipe_cat,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.aoe_builder+=/shred,if=!buff.sudden_ambush.up&!variable.easy_swipe&!(variable.need_bt&buff.bt_shred.up)\nactions.aoe_builder+=/thrash_cat,if=!talent.thrashing_claws&!(variable.need_bt&buff.bt_thrash.up)\n# fallback bt actions\nactions.aoe_builder+=/rake,cycle_targets=1,if=talent.doubleclawed_rake&buff.sudden_ambush.up&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=variable.need_bt&buff.bt_moonfire.down\nactions.aoe_builder+=/rake,cycle_targets=1,if=buff.sudden_ambush.up&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/shred,if=variable.need_bt&buff.bt_shred.down&!variable.easy_swipe\nactions.aoe_builder+=/rake,cycle_targets=1,if=dot.rake.pmultiplier<1.6&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/thrash_cat,if=variable.need_bt&buff.bt_shred.down\n\nactions.berserk+=/call_action_list,name=finisher,if=combo_points=5\nactions.berserk+=/run_action_list,name=aoe_builder,strict=1,if=spell_targets.swipe_cat>=2\nactions.berserk+=/prowl,if=!(buff.bt_rake.up&active_bt_triggers=2)&action.rake.ready&gcd.remains=0&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!buff.shadowmeld.up\nactions.berserk+=/shadowmeld,if=!(buff.bt_rake.up&active_bt_triggers=2)&action.rake.ready&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)&!buff.prowl.up\n# rake if bt doesnt need proc and rake can be upgraded. Fish for sudden ambush procs unless rake will fall off otherwise.\nactions.berserk+=/rake,if=!(buff.bt_rake.up&active_bt_triggers=2)&(dot.rake.remains<3||buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier)\nactions.berserk+=/moonfire_cat,if=refreshable\nactions.berserk+=/thrash_cat,if=!talent.thrashing_claws&refreshable\n# proc bt when an opportunity arises\nactions.berserk+=/shred,if=active_bt_triggers=2&buff.bt_shred.down\nactions.berserk+=/brutal_slash,if=active_bt_triggers=2&buff.bt_swipe.down\nactions.berserk+=/swipe_cat,if=active_bt_triggers=2&buff.bt_swipe.down&talent.wild_slashes\n# alternate brs and shred to create bt opportunities\nactions.berserk+=/brutal_slash,if=cooldown.brutal_slash.charges>1&buff.bt_swipe.down\nactions.berserk+=/shred,if=buff.bt_shred.down\nactions.berserk+=/brutal_slash,if=cooldown.brutal_slash.charges>1\nactions.berserk+=/swipe_cat,if=buff.bt_swipe.down&talent.wild_slashes\nactions.berserk+=/shred\n\n# this variable tracks whether or not we've started our bt sequence\nactions.builder+=/shadowmeld,if=gcd=0&energy>=35&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)*!(variable.need_bt&buff.bt_rake.up)&buff.tigers_fury.up\n# upgrade to stealth rakes, otherwise refresh in pandemic. Delay rake as long as possible if it would downgrade\nactions.builder+=/rake,if=((refreshable&persistent_multiplier>=dot.rake.pmultiplier||dot.rake.remains<3)||buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier)&!(variable.need_bt&buff.bt_rake.up)\nactions.builder+=/brutal_slash,if=cooldown.brutal_slash.full_recharge_time<4&!(variable.need_bt&buff.bt_swipe.up)\nactions.builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws\nactions.builder+=/shred,if=buff.clearcasting.react\nactions.builder+=/moonfire_cat,if=refreshable\nactions.builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.builder+=/swipe_cat,if=talent.wild_slashes&!(variable.need_bt&buff.bt_swipe.up)\nactions.builder+=/shred,if=!(variable.need_bt&buff.bt_shred.up)\nactions.builder+=/swipe_cat,if=variable.need_bt&buff.bt_swipe.down\n# clip rake for bt if it wont downgrade its snapshot\nactions.builder+=/rake,if=variable.need_bt&buff.bt_rake.down&persistent_multiplier>=dot.rake.pmultiplier\nactions.builder+=/moonfire_cat,if=variable.need_bt&buff.bt_moonfire.down\nactions.builder+=/thrash_cat,if=variable.need_bt&buff.bt_thrash.down\n\nactions.cooldown+=/incarnation,if=target.time_to_die>17||boss&target.time_to_die=fight_remains\n# berserk with tigers fury\nactions.cooldown+=/berserk,if=buff.tigers_fury.up&(target.time_to_die>12||boss&target.time_to_die=fight_remains)\nactions.cooldown+=/berserking,if=buff.bs_inc.up\n# todo make last set of cds line up again now that we know potions.remains is the syntax\nactions.cooldown+=/potion,if=buff.bs_inc.up||boss&fight_remains<32||(!variable.lastzerk&variable.lastconvoke&cooldown.convoke_the_spirits.remains<10)\n# non trinket gear-on-uses have variable rules on whether or not they trigger the trinket shared CD. For the cases they do we will need specific APL entries. For now just use on cooldown.\nactions.cooldown+=/use_items\n# we disable mercurial egg use here to not give the wrong impression on when to use it. (sim won't need this, could check if moving & stack is below desired threshold which isn't known yet since trinket bugged in-game)\nactions.cooldown+=/use_item,name=ovinaxs_mercurial_egg,if=time=0\nactions.cooldown+=/feral_frenzy,if=combo_points<=1||buff.bs_inc.up&combo_points<=2\n## actions.cooldown+=/do_treacherous_transmitter_task,if=buff.tigers_fury.up||boss&fight_remains<22\n# stat on-use trinkets, prefers trinket with higher priority. reads like this: berserk is up OR if tigers fury up & convoke is either ready, wont be for the next tf, or the other trinket will be ready in time for convoke. If we dont have convoke, then we use if berserk wont be up for next tf or other trinket will be up for berserk.\nactions.cooldown+=/use_item,slot=trinket1,if=!trinket.1.is.ovinaxs_mercurial_egg&(buff.bs_inc.up||((buff.tigers_fury.up&cooldown.tigers_fury.remains>20)&(cooldown.convoke_the_spirits.remains<4||cooldown.convoke_the_spirits.remains>45||(variable.trinket_2_buffs&cooldown.convoke_the_spirits.remains-trinket.2.cooldown.remains>0)||!talent.convoke_the_spirits&(cooldown.bs_inc.remains>40||cooldown.bs_inc.remains-trinket.2.cooldown.remains>0))))&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.cooldown+=/use_item,slot=trinket2,if=!trinket.2.is.ovinaxs_mercurial_egg&(buff.bs_inc.up||((buff.tigers_fury.up&cooldown.tigers_fury.remains>20)&(cooldown.convoke_the_spirits.remains<4||cooldown.convoke_the_spirits.remains>45||(variable.trinket_1_buffs&cooldown.convoke_the_spirits.remains-trinket.1.cooldown.remains>0)||!talent.convoke_the_spirits&(cooldown.bs_inc.remains>40||cooldown.bs_inc.remains-trinket.1.cooldown.remains>0))))&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# non-stat on use trinkets get used on cooldown, so long as it wont interfere with a stat on-use trinket\nactions.cooldown+=/use_item,slot=trinket1,if=!trinket.1.is.ovinaxs_mercurial_egg&!variable.trinket_1_buffs&(trinket.2.cooldown.remains>20||!variable.trinket_2_buffs||trinket.2.cooldown.remains&cooldown.tigers_fury.remains>20)\nactions.cooldown+=/use_item,slot=trinket2,if=!trinket.2.is.ovinaxs_mercurial_egg&!variable.trinket_2_buffs&(trinket.1.cooldown.remains>20||!variable.trinket_1_buffs||trinket.1.cooldown.remains&cooldown.tigers_fury.remains>20)\n# always line up convoke with berserk if you can\nactions.cooldown+=/convoke_the_spirits,if=boss&fight_remains<5||(buff.bs_inc.up||!talent.berserk_heart_of_the_lion)&(buff.tigers_fury.up&(combo_points<=2||buff.bs_inc.up&combo_points<=3)&(target.time_to_die>5-talent.ashamanes_guidance.enabled||boss&target.time_to_die=fight_remains))\n\n# maintain/upgrade pws, if we have 6.5+s left on pw, we will instead bite if we have rampant ferocity talented. Without rampant, we will bite a vined target with 6 or fewer targets. If we have Ravage, we use specifically Ravage at 7 or fewer targets.\nactions.finisher+=/primal_wrath,if=spell_targets.primal_wrath>1&((dot.primal_wrath.remains<6.5&!buff.bs_inc.up||dot.primal_wrath.refreshable)||(!talent.rampant_ferocity.enabled&(spell_targets.primal_wrath>1&!dot.bloodseeker_vines.ticking&!buff.ravage.up||spell_targets.primal_wrath>6+talent.ravage)))\n# rip if single target or pw isnt up. Rip with bloodtalons if talented. If tigers fury will be up before rip falls off, then delay refresh\nactions.finisher+=/rip,cycle_targets=1,if=refreshable&(!talent.primal_wrath||spell_targets=1)&(buff.bloodtalons.up||!talent.bloodtalons)&(buff.tigers_fury.up||dot.rip.remains<cooldown.tigers_fury.remains)\nactions.finisher+=/pool_resource,for_next=1\nactions.finisher+=/ferocious_bite,max_energy=1,cycle_targets=1,if=!buff.bs_inc.up||!talent.soul_of_the_forest.enabled\nactions.finisher+=/ferocious_bite,cycle_targets=1\n\n# most expensive bt cycle is Shred + Thrash + Rake, 40+40+35 for 115 energy. During incarn it is 32+32+28 for 92energy\nactions.variable+=/variable,name=effective_energy,op=set,value=energy+(40*buff.clearcasting.stack)+(3*energy.regen)+(50*(cooldown.tigers_fury.remains<3.5))\n# estimated time until we have enough energy to proc bloodtalons.\nactions.variable+=/variable,name=time_to_pool,op=set,value=((115-variable.effective_energy-(23*buff.incarnation.up))%energy.regen)\n# try to proc bt if we have 1 or 0 sacks of bloodtalons\nactions.variable+=/variable,name=need_bt,value=talent.bloodtalons&buff.bloodtalons.stack<=1\n# capped on clearcasting stacks\nactions.variable+=/variable,name=cc_capped,value=buff.clearcasting.stack=(1+talent.moment_of_clarity)\n# checks if theres exactly 1 convoke remaining in sim\nactions.variable+=/variable,name=lastconvoke,value=(cooldown.convoke_the_spirits.remains+cooldown.convoke_the_spirits.duration)>fight_remains&cooldown.convoke_the_spirits.remains<fight_remains\n# checks if theres exactly 1 berserk cast remaining in sim                 : at least 5s spare for now, TODO: check #s\nactions.variable+=/variable,name=lastzerk,value=(cooldown.bs_inc.remains+cooldown.bs_inc.duration+5)>fight_remains&cooldown.convoke_the_spirits.remains<fight_remains\n# approximates if theres exactly 1 potion cast remaining with duration to spare\nactions.variable+=/variable,name=lastpotion,value=(cooldown.potions.remains+cooldown.potions.duration+15)>fight_remains&cooldown.potions.remains+15<fight_remains\n# optional variable that alternates bite/pw during berserk regardless of talent setup. Off by default\nactions.variable+=/variable,name=zerk_biteweave,op=reset\n# optional variable that sends regrowth and renewal casts. Turned off by default\nactions.variable+=/variable,name=regrowth,op=reset\n# optional variable that forgoes shredding in AoE. Turned off by default\nactions.variable+=/variable,name=easy_swipe,op=reset\nactions.variable+=/variable,name=proccing_bt,op=set,value=variable.need_bt",
["version"] = 20240904,
["warnings"] = "The import for 'aoe_builder' required some automated changes.\nLine 2: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 4: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 7: Converted 'talent.doubleclawed_rake' to 'talent.doubleclawed_rake.enabled' (1x).\nLine 8: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 14: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 15: Converted 'talent.doubleclawed_rake' to 'talent.doubleclawed_rake.enabled' (1x).\n\nThe import for 'finisher' required some automated changes.\nLine 1: Converted 'talent.ravage' to 'talent.ravage.enabled' (1x).\nLine 2: Converted 'talent.primal_wrath' to 'talent.primal_wrath.enabled' (1x).\nLine 2: Converted 'talent.bloodtalons' to 'talent.bloodtalons.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.fluid_form' to 'talent.fluid_form.enabled' (1x).\nLine 14: Converted 'talent.raging_fury' to 'talent.raging_fury.enabled' (1x).\nLine 14: Converted 'talent.veinripper' to 'talent.veinripper.enabled' (1x).\nLine 14: Converted 'talent.bloodtalons' to 'talent.bloodtalons.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 6: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted operations in 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%120=0||120%%trinket.t1.cooldown.duration=0)' to 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%120=0||120%trinket.t1.cooldown.duration=0)'.\nLine 7: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 7: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted operations in 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_2_buffs&(trinket.t1.cooldown.duration%%120=0||120%%trinket.t1.cooldown.duration=0)' to 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_2_buffs&(trinket.t1.cooldown.duration%120=0||120%trinket.t1.cooldown.duration=0)'.\nLine 8: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 8: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted operations in '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.t1.cooldown.duration=0)' to '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%trinket.t1.cooldown.duration=0)'.\nLine 9: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 9: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted operations in '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.t2.cooldown.duration=0)' to '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%trinket.t2.cooldown.duration=0)'.\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 10: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_buff.agility' (1x).\nLine 10: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 10: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 10: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 10: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_buff.agility' (1x).\nLine 10: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 10: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(1.2+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(1.2+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(1.2+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(1.2+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\n\nThe import for 'builder' required some automated changes.\nLine 4: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 8: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\n\nThe import for 'variable' required some automated changes.\nLine 2: Converted operations in '((115-variable.effective_energy-(23*buff.incarnation.up))%energy.regen)' to '((115-variable.effective_energy-(23*buff.incarnation.up))/energy.regen)'.\nLine 3: Converted 'talent.bloodtalons' to 'talent.bloodtalons.enabled' (1x).\nLine 4: Converted 'talent.moment_of_clarity' to 'talent.moment_of_clarity.enabled' (1x).\n\nThe import for 'berserk' required some automated changes.\nLine 7: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 10: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 14: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\n\nThe import for 'cooldown' required some automated changes.\nLine 6: Unsupported use_item action [ ovinaxs_mercurial_egg]; entry disabled.\nLine 8: Converted 'trinket.1.is.ovinaxs_mercurial_egg' to 'trinket.t1.is.ovinaxs_mercurial_egg' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 9: Converted 'trinket.2.is.ovinaxs_mercurial_egg' to 'trinket.t2.is.ovinaxs_mercurial_egg' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 10: Converted 'trinket.1.is.ovinaxs_mercurial_egg' to 'trinket.t1.is.ovinaxs_mercurial_egg' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'trinket.2.is.ovinaxs_mercurial_egg' to 'trinket.t2.is.ovinaxs_mercurial_egg' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'talent.berserk_heart_of_the_lion' to 'talent.berserk_heart_of_the_lion.enabled' (1x).\n\nImported 8 action lists.\n",
["author"] = "Makahiki",
["lists"] = {
["aoe_builder"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.need_bt",
["var_name"] = "proccing_bt",
},
{
["enabled"] = true,
["action"] = "thrash_cat",
["description"] = "maintain thrash highest prio",
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled & ! ( variable.need_bt & buff.bt_thrash.up )",
},
{
["enabled"] = true,
["action"] = "brutal_slash",
["cycle_targets"] = 1,
["criteria"] = "( cooldown.brutal_slash.full_recharge_time < 4 || time_to_die < 4 || raid_event.adds.remains < 4 ) & ! ( variable.need_bt & buff.bt_swipe.up )",
["description"] = "avoid capping brs charges",
},
{
["enabled"] = true,
["action"] = "swipe_cat",
["description"] = "with wild slashes we swipe at 5+ targets over raking/moonfire",
["criteria"] = "time_to_die < 4 || ( talent.wild_slashes.enabled & spell_targets.swipe_cat > 4 & ! ( variable.need_bt & buff.bt_swipe.up ) )",
},
{
["enabled"] = true,
["criteria"] = "dot.rake.refreshable || dot.rake.pmultiplier < 1.4 & ! ( variable.need_bt & buff.bt_rake.up ) & action.rake.ready & gcd.remains = 0 & ! buff.sudden_ambush.up & ! variable.cc_capped",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "dot.rake.refreshable || dot.rake.pmultiplier < 1.4 & ! ( variable.need_bt & buff.bt_rake.up ) & action.rake.ready & ! buff.sudden_ambush.up & ! buff.prowl.up & ! variable.cc_capped",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["action"] = "rake",
["cycle_targets"] = 1,
["criteria"] = "refreshable & talent.doubleclawed_rake.enabled & ! ( variable.need_bt & buff.bt_rake.up ) & ! variable.cc_capped",
["description"] = "dcr rake > moonfire",
},
{
["enabled"] = true,
["action"] = "swipe_cat",
["description"] = "at 4t with wild slashes, swipe is better than moonfiring",
["criteria"] = "talent.wild_slashes.enabled & spell_targets.swipe_cat > 3 & ! ( variable.need_bt & buff.bt_swipe.up )",
},
{
["enabled"] = true,
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
["criteria"] = "refreshable & ! ( variable.need_bt & buff.bt_moonfire.up ) & ! variable.cc_capped",
["description"] = "li moonfire is better than non-dcr rake",
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "refreshable & ! ( variable.need_bt & buff.bt_rake.up ) & ! variable.cc_capped",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "brutal_slash",
["description"] = "fillers",
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "! buff.sudden_ambush.up & ! variable.easy_swipe & ! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "! talent.thrashing_claws.enabled & ! ( variable.need_bt & buff.bt_thrash.up )",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["action"] = "rake",
["cycle_targets"] = 1,
["criteria"] = "talent.doubleclawed_rake.enabled & buff.sudden_ambush.up & variable.need_bt & buff.bt_rake.down",
["description"] = "fallback bt actions",
},
{
["enabled"] = true,
["action"] = "lunar_inspiration",
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "buff.sudden_ambush.up & variable.need_bt & buff.bt_rake.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_shred.down & ! variable.easy_swipe",
["action"] = "shred",
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "dot.rake.pmultiplier < 1.6 & variable.need_bt & buff.bt_rake.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_shred.down",
["action"] = "thrash_cat",
},
},
["berserk"] = {
{
["enabled"] = true,
["criteria"] = "combo_points = 5",
["action"] = "call_action_list",
["list_name"] = "finisher",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets.swipe_cat >= 2",
["list_name"] = "aoe_builder",
},
{
["enabled"] = true,
["criteria"] = "! ( buff.bt_rake.up & active_bt_triggers = 2 ) & action.rake.ready & gcd.remains = 0 & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! buff.shadowmeld.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! ( buff.bt_rake.up & active_bt_triggers = 2 ) & action.rake.ready & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) & ! buff.prowl.up",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["action"] = "rake",
["description"] = "rake if bt doesnt need proc and rake can be upgraded. Fish for sudden ambush procs unless rake will fall off otherwise.",
["criteria"] = "! ( buff.bt_rake.up & active_bt_triggers = 2 ) & ( dot.rake.remains < 3 || buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier )",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["criteria"] = "! talent.thrashing_claws.enabled & refreshable",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["action"] = "shred",
["description"] = "proc bt when an opportunity arises",
["criteria"] = "active_bt_triggers = 2 & buff.bt_shred.down",
},
{
["enabled"] = true,
["criteria"] = "active_bt_triggers = 2 & buff.bt_swipe.down",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "active_bt_triggers = 2 & buff.bt_swipe.down & talent.wild_slashes.enabled",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["action"] = "brutal_slash",
["description"] = "alternate brs and shred to create bt opportunities",
["criteria"] = "cooldown.brutal_slash.charges > 1 & buff.bt_swipe.down",
},
{
["enabled"] = true,
["criteria"] = "buff.bt_shred.down",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "cooldown.brutal_slash.charges > 1",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "buff.bt_swipe.down & talent.wild_slashes.enabled",
["action"] = "swipe_cat",
},
{
["action"] = "shred",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.down & ! buff.prowl.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & ! talent.fluid_form.enabled",
["action"] = "cat_form",
},
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variable",
},
{
["enabled"] = true,
["criteria"] = "( energy.deficit > 35 || combo_points = 5 ) & ( fight_remains <= 15 || ( cooldown.bs_inc.remains > 20 & target.time_to_die > 5 ) || ( cooldown.bs_inc.ready & target.time_to_die > 12 || target.time_to_die = fight_remains ) )",
["action"] = "tigers_fury",
},
{
["enabled"] = true,
["action"] = "rake",
["criteria"] = "buff.shadowmeld.up || buff.prowl.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat > 0",
["action"] = "natures_vigil",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 60 & variable.regrowth",
["action"] = "renewal",
},
{
["enabled"] = true,
["criteria"] = "buff.apex_predators_craving.up & ! ( variable.need_bt & active_bt_triggers = 2 )",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "( ! dot.adaptive_swarm_damage.ticking || dot.adaptive_swarm_damage.remains < 2 ) & dot.adaptive_swarm_damage.stack < 3 & ! action.adaptive_swarm_damage.in_flight & ! action.adaptive_swarm.in_flight & target.time_to_die > 5 & ( buff.cat_form.up & ! talent.unbridled_swarm.enabled || spell_targets.swipe_cat = 1 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "adaptive_swarm",
["criteria"] = "buff.cat_form.up & dot.adaptive_swarm_damage.stack < 3 & talent.unbridled_swarm.enabled & spell_targets.swipe_cat > 1",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "dot.rip.ticking",
["list_name"] = "cooldown",
},
{
["enabled"] = true,
["action"] = "rip",
["description"] = "with wildstalker and not both raging fury + veinripper, low cp rips for snapshot reasons is worth",
["criteria"] = "spell_targets = 1 & hero_tree.wildstalker & ! ( talent.raging_fury.enabled & talent.veinripper.enabled ) & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled ) & ( dot.rip.refreshable & buff.tigers_fury.remains > 10 & combo_points >= 3 || buff.tigers_fury.remains < 3.0 & buff.tigers_fury.up & combo_points >= 3 & remains < 16 )",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "buff.bs_inc.up",
["list_name"] = "berserk",
},
{
["enabled"] = true,
["criteria"] = "combo_points = 5",
["action"] = "call_action_list",
["list_name"] = "finisher",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat = 1 & combo_points < 5 & ( variable.time_to_pool <= 0 || ! variable.need_bt || variable.proccing_bt )",
["action"] = "call_action_list",
["list_name"] = "builder",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.swipe_cat >= 2 & combo_points < 5 & ( variable.time_to_pool <= 0 || ! variable.need_bt || variable.proccing_bt )",
["action"] = "call_action_list",
["list_name"] = "aoe_builder",
},
{
["enabled"] = true,
["criteria"] = "buff.predatory_swiftness.up & variable.regrowth",
["action"] = "regrowth",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up",
["action"] = "cat_form",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff",
["description"] = "check if trinket slot contains a stat on use (variable is just kept in case of things like mirror not working with has_use_buff)",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "if we are playing 2 minute convoke, we prefer 2 minute on-use over 3 minute on-use even without berserk: heart of the lion",
["criteria"] = "talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled & variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % 120 = 0 || 120 % trinket.t1.cooldown.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled & variable.trinket_2_buffs & ( trinket.t1.cooldown.duration % 120 = 0 || 120 % trinket.t1.cooldown.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "if we aren't playing 2 minute convoke, then we can sync 3 minute cds with berserk sans hotl",
["criteria"] = "! ( talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled ) & variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.bs_inc.duration = 0 || cooldown.bs_inc.duration % trinket.t1.cooldown.duration = 0 || trinket.t1.cooldown.duration % cooldown.convoke_the_spirits.duration = 0 || cooldown.convoke_the_spirits.duration % trinket.t1.cooldown.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "! ( talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled ) & variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.bs_inc.duration = 0 || cooldown.bs_inc.duration % trinket.t2.cooldown.duration = 0 || trinket.t2.cooldown.duration % cooldown.convoke_the_spirits.duration = 0 || cooldown.convoke_the_spirits.duration % trinket.t2.cooldown.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "prioritize trinkets that line-up with cds->main-stat on uses->longer cd trinkets->shorter duration trinkets",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( 1.2 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( 1.2 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["var_name"] = "trinket_priority",
["action"] = "variable",
["value_else"] = "1",
["value"] = "2",
},
},
["builder"] = {
{
["enabled"] = true,
["action"] = "shadowmeld",
["description"] = "this variable tracks whether or not we've started our bt sequence",
["criteria"] = "gcd.max = 0 & energy >= 35 & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) * ! ( variable.need_bt & buff.bt_rake.up ) & buff.tigers_fury.up",
},
{
["enabled"] = true,
["action"] = "rake",
["description"] = "upgrade to stealth rakes, otherwise refresh in pandemic. Delay rake as long as possible if it would downgrade",
["criteria"] = "( ( refreshable & persistent_multiplier >= dot.rake.pmultiplier || dot.rake.remains < 3 ) || buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier ) & ! ( variable.need_bt & buff.bt_rake.up )",
},
{
["enabled"] = true,
["criteria"] = "cooldown.brutal_slash.full_recharge_time < 4 & ! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["criteria"] = "buff.clearcasting.react",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "talent.wild_slashes.enabled & ! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_swipe.down",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["action"] = "rake",
["description"] = "clip rake for bt if it wont downgrade its snapshot",
["criteria"] = "variable.need_bt & buff.bt_rake.down & persistent_multiplier >= dot.rake.pmultiplier",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_thrash.down",
["action"] = "thrash_cat",
},
},
["variable"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy + ( 40 * buff.clearcasting.stack ) + ( 3 * energy.regen ) + ( 50 * ( cooldown.tigers_fury.remains < 3.5 ) )",
["description"] = "most expensive bt cycle is Shred + Thrash + Rake, 40+40+35 for 115 energy. During incarn it is 32+32+28 for 92energy",
["var_name"] = "effective_energy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( 115 - variable.effective_energy - ( 23 * buff.incarnation.up ) ) / energy.regen )",
["description"] = "estimated time until we have enough energy to proc bloodtalons.",
["var_name"] = "time_to_pool",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.bloodtalons.enabled & buff.bloodtalons.stack <= 1",
["description"] = "try to proc bt if we have 1 or 0 sacks of bloodtalons",
["var_name"] = "need_bt",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.clearcasting.stack = ( 1 + talent.moment_of_clarity.enabled )",
["description"] = "capped on clearcasting stacks",
["var_name"] = "cc_capped",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.convoke_the_spirits.remains + cooldown.convoke_the_spirits.duration ) > fight_remains & cooldown.convoke_the_spirits.remains < fight_remains",
["description"] = "checks if theres exactly 1 convoke remaining in sim",
["var_name"] = "lastconvoke",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.bs_inc.remains + cooldown.bs_inc.duration + 5 ) > fight_remains & cooldown.convoke_the_spirits.remains < fight_remains",
["description"] = "checks if theres exactly 1 berserk cast remaining in sim                 : at least 5s spare for now, TODO: check #s",
["var_name"] = "lastzerk",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.potions.remains + cooldown.potions.duration + 15 ) > fight_remains & cooldown.potions.remains + 15 < fight_remains",
["description"] = "approximates if theres exactly 1 potion cast remaining with duration to spare",
["var_name"] = "lastpotion",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "zerk_biteweave",
["description"] = "optional variable that alternates bite/pw during berserk regardless of talent setup. Off by default",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "regrowth",
["description"] = "optional variable that sends regrowth and renewal casts. Turned off by default",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "easy_swipe",
["description"] = "optional variable that forgoes shredding in AoE. Turned off by default",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.need_bt",
["var_name"] = "proccing_bt",
},
},
["cooldown"] = {
{
["enabled"] = true,
["criteria"] = "target.time_to_die > 17 || boss & target.time_to_die = fight_remains",
["action"] = "incarnation",
},
{
["enabled"] = true,
["action"] = "berserk",
["description"] = "berserk with tigers fury",
["criteria"] = "buff.tigers_fury.up & ( target.time_to_die > 12 || boss & target.time_to_die = fight_remains )",
},
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["action"] = "potion",
["description"] = "todo make last set of cds line up again now that we know potions.remains is the syntax",
["criteria"] = "buff.bs_inc.up || boss & fight_remains < 32 || ( ! variable.lastzerk & variable.lastconvoke & cooldown.convoke_the_spirits.remains < 10 )",
},
{
["enabled"] = true,
["description"] = "non trinket gear-on-uses have variable rules on whether or not they trigger the trinket shared CD. For the cases they do we will need specific APL entries. For now just use on cooldown.",
["action"] = "use_items",
},
{
["enabled"] = false,
["criteria"] = "time = 0",
["description"] = "we disable mercurial egg use here to not give the wrong impression on when to use it. (sim won't need this, could check if moving & stack is below desired threshold which isn't known yet since trinket bugged in-game)",
["name"] = "ovinaxs_mercurial_egg",
},
{
["enabled"] = true,
["criteria"] = "combo_points <= 1 || buff.bs_inc.up & combo_points <= 2",
["action"] = "feral_frenzy",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "! trinket.t1.is.ovinaxs_mercurial_egg & ( buff.bs_inc.up || ( ( buff.tigers_fury.up & cooldown.tigers_fury.remains > 20 ) & ( cooldown.convoke_the_spirits.remains < 4 || cooldown.convoke_the_spirits.remains > 45 || ( variable.trinket_2_buffs & cooldown.convoke_the_spirits.remains - trinket.t2.cooldown.remains > 0 ) || ! talent.convoke_the_spirits.enabled & ( cooldown.bs_inc.remains > 40 || cooldown.bs_inc.remains - trinket.t2.cooldown.remains > 0 ) ) ) ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["description"] = "stat on-use trinkets, prefers trinket with higher priority. reads like this: berserk is up OR if tigers fury up & convoke is either ready, wont be for the next tf, or the other trinket will be ready in time for convoke. If we dont have convoke, then we use if berserk wont be up for next tf or other trinket will be up for berserk.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! trinket.t2.is.ovinaxs_mercurial_egg & ( buff.bs_inc.up || ( ( buff.tigers_fury.up & cooldown.tigers_fury.remains > 20 ) & ( cooldown.convoke_the_spirits.remains < 4 || cooldown.convoke_the_spirits.remains > 45 || ( variable.trinket_1_buffs & cooldown.convoke_the_spirits.remains - trinket.t1.cooldown.remains > 0 ) || ! talent.convoke_the_spirits.enabled & ( cooldown.bs_inc.remains > 40 || cooldown.bs_inc.remains - trinket.t1.cooldown.remains > 0 ) ) ) ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "! trinket.t1.is.ovinaxs_mercurial_egg & ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains > 20 || ! variable.trinket_2_buffs || trinket.t2.cooldown.remains & cooldown.tigers_fury.remains > 20 )",
["description"] = "non-stat on use trinkets get used on cooldown, so long as it wont interfere with a stat on-use trinket",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! trinket.t2.is.ovinaxs_mercurial_egg & ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains > 20 || ! variable.trinket_1_buffs || trinket.t1.cooldown.remains & cooldown.tigers_fury.remains > 20 )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "convoke_the_spirits",
["description"] = "always line up convoke with berserk if you can",
["criteria"] = "boss & fight_remains < 5 || ( buff.bs_inc.up || ! talent.berserk_heart_of_the_lion.enabled ) & ( buff.tigers_fury.up & ( combo_points <= 2 || buff.bs_inc.up & combo_points <= 3 ) & ( target.time_to_die > 5 - talent.ashamanes_guidance.enabled || boss & target.time_to_die = fight_remains ) )",
},
},
["finisher"] = {
{
["enabled"] = true,
["action"] = "primal_wrath",
["description"] = "maintain/upgrade pws, if we have 6.5+s left on pw, we will instead bite if we have rampant ferocity talented. Without rampant, we will bite a vined target with 6 or fewer targets. If we have Ravage, we use specifically Ravage at 7 or fewer targets.",
["criteria"] = "spell_targets.primal_wrath > 1 & ( ( dot.primal_wrath.remains < 6.5 & ! buff.bs_inc.up || dot.primal_wrath.refreshable ) || ( ! talent.rampant_ferocity.enabled & ( spell_targets.primal_wrath > 1 & ! dot.bloodseeker_vines.ticking & ! buff.ravage.up || spell_targets.primal_wrath > 6 + talent.ravage.enabled ) ) )",
},
{
["enabled"] = true,
["action"] = "rip",
["cycle_targets"] = 1,
["criteria"] = "refreshable & ( ! talent.primal_wrath.enabled || spell_targets = 1 ) & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled ) & ( buff.tigers_fury.up || dot.rip.remains < cooldown.tigers_fury.remains )",
["description"] = "rip if single target or pw isnt up. Rip with bloodtalons if talented. If tigers fury will be up before rip falls off, then delay refresh",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
["criteria"] = "! buff.bs_inc.up || ! talent.soul_of_the_forest.enabled",
["max_energy"] = 1,
},
{
["enabled"] = true,
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
},
},
},
},
["Balance"] = {
["source"] = "https://balance-simc.github.io/Balance-SimC/md.html?file=balance.txt",
["builtIn"] = true,
["date"] = 20240905,
["author"] = "SimC",
["desc"] = "2024-09-01, 09-04: SimC update\n\n2024-08-11: Mark of the Wild\n\n2024-07-23: The War Within",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 & astral_power.deficit > variable.passive_asp + energize_amount & ! boss",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 - ( spell_targets / 2 ) & astral_power.deficit > variable.passive_asp + energize_amount",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 & astral_power.deficit > variable.passive_asp + energize_amount & boss",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "stellar_flare",
["criteria"] = "refreshable & ( target.time_to_die - remains - target.unit > 7 + spell_targets ) & ( 1 + ( 0.65 * talent.lunar_calling.enabled ) ) * spell_targets < ( 11 - talent.umbral_intensity.rank - ( 2 * talent.astral_smolder.enabled ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( talent.power_of_the_dream.enabled & talent.early_spring.enabled & talent.orbital_strike.enabled ) || variable.eclipse_remains >= 3",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "variable.eclipse || eclipse.in_both",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20 || ( dot.sunfire.ticking & ( dot.moonfire.ticking || buff.harmony_of_the_grove.up ) & ( hero_tree.keeper_of_the_grove & ( buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 25 ) || hero_tree.elunes_chosen ) )",
["action"] = "celestial_alignment",
["use_off_gcd"] = 0,
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20 || ( dot.sunfire.ticking & ( dot.moonfire.ticking || buff.harmony_of_the_grove.up ) & ( hero_tree.keeper_of_the_grove & ( buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 25 ) || hero_tree.elunes_chosen ) )",
["action"] = "incarnation",
["use_off_gcd"] = 0,
},
{
["enabled"] = true,
["criteria"] = "! talent.lunar_calling.enabled & buff.eclipse_solar.remains < 7 || talent.lunar_calling.enabled",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.lunar_calling.enabled & spell_targets.starfire = 1 ) & ( buff.eclipse_solar.up & buff.eclipse_solar.remains < action.starfire.cast_time || eclipse.in_none )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_calling.enabled || spell_targets.starfire > 1 ) & ( buff.eclipse_lunar.up & ( buff.eclipse_lunar.remains < action.wrath.cast_time ) || eclipse.in_none )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up || buff.touch_the_cosmos_starfall.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up || buff.touch_the_cosmos_starsurge.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "buff.starlord.stack < 3 & spell_targets > 1",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.starfall > 1",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.starfall < 2",
["action"] = "starsurge",
},
{
["action"] = "convoke_the_spirits",
["enabled"] = true,
},
{
["action"] = "new_moon",
["enabled"] = true,
},
{
["action"] = "half_moon",
["enabled"] = true,
},
{
["action"] = "full_moon",
["enabled"] = true,
},
{
["action"] = "warrior_of_elune",
["enabled"] = true,
},
{
["action"] = "wild_mushroom",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled || buff.eclipse_lunar.up & spell_targets.starfire > 1",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "energize_amount + variable.passive_asp > astral_power.deficit - ( 20 * talent.astral_communion.enabled )",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["criteria"] = "( buff.starlord.stack > 0 & buff.starlord.stack < 3 ) || ! buff.starlord.up & ( ( 2 * variable.passive_asp ) > astral_power.deficit - ( 20 * talent.astral_communion.enabled ) )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "cooldown.convoke_the_spirits.ready & astral_power.deficit > energize_amount",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 5 || ( buff.ca_inc.up || cooldown.ca_inc.remains > 40 ) || ( buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 15 )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 4",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "buff.starlord.remains > 4 & variable.boat_stacks >= 2",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount || fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "new_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) || fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "half_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) || fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "full_moon",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up || buff.touch_the_cosmos_starsurge.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up || buff.touch_the_cosmos_starfall.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit < variable.passive_asp + action.wrath.energize_amount + ( action.starfire.energize_amount + variable.passive_asp ) * ( buff.eclipse_solar.remains < ( gcd.max * 3 ) ) || boss & fight_remains < 5",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! hero_tree.keeper_of_the_grove",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "! talent.lunar_calling.enabled",
["action"] = "wrath",
},
},
["default"] = {
{
["action"] = "solar_beam",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "6 / spell_haste + talent.natures_balance.enabled + talent.orbit_breaker.enabled * dot.moonfire.ticking * ( buff.orbit_breaker.stack > ( 27 - 2 * buff.solstice.up ) ) * 40",
["var_name"] = "passive_asp",
},
{
["enabled"] = true,
["action"] = "spymasters_web",
["criteria"] = "buff.ca_inc.up & buff.spymasters_report.stack > 29 || fight_remains < 20",
["name"] = "spymasters_web",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "variable.on_use_trinket != 1 & ! trinket.t2.ready_cooldown || ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 20 || variable.on_use_trinket = 0",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "variable.on_use_trinket != 2 & ! trinket.t1.ready_cooldown || variable.on_use_trinket = 2 & buff.ca_inc.up || variable.no_cd_talent || boss & fight_remains < 20 || variable.on_use_trinket = 0",
["slots"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "buff.ca_inc.up",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "buff.ca_inc.up || fight_remains <= 30",
["action"] = "potion",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.ca_inc.remains >= 20 || variable.no_cd_talent || fight_remains < 15",
["action"] = "berserking",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.eclipse_lunar.up || buff.eclipse_solar.up",
["var_name"] = "eclipse",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.eclipse_lunar.remains <? buff.eclipse_solar.remains",
["var_name"] = "eclipse_remains",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.lunar_calling.enabled & ( spell_targets < 3 || buff.warrior_of_elune.up ) & ( ! variable.eclipse || variable.eclipse_remains < action.starfire.cast_time )",
["var_name"] = "enter_solar",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.lunar_calling.enabled || spell_targets > 2 & ! buff.warrior_of_elune.up ) & ( ! variable.eclipse || variable.eclipse_remains < action.wrath.cast_time )",
["var_name"] = "enter_lunar",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.balance_of_all_things_arcane.stack + buff.balance_of_all_things_nature.stack",
["var_name"] = "boat_stacks",
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled & cooldown.ca_inc.remains > 20 || ! talent.lunar_calling.enabled & variable.eclipse_remains >= 7 & cooldown.ca_inc.remains > 20",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["criteria"] = "talent.lunation.enabled & ( dot.sunfire.ticking & dot.moonfire.ticking )",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20 || ( dot.sunfire.ticking & ( dot.moonfire.ticking || buff.harmony_of_the_grove.up ) & ( hero_tree.keeper_of_the_grove & ( buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 25 ) || hero_tree.elunes_chosen ) )",
["action"] = "celestial_alignment",
["use_off_gcd"] = 0,
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20 || ( dot.sunfire.ticking & ( dot.moonfire.ticking || buff.harmony_of_the_grove.up ) & ( hero_tree.keeper_of_the_grove & ( buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 25 ) || hero_tree.elunes_chosen ) )",
["action"] = "incarnation",
["use_off_gcd"] = 0,
},
{
["enabled"] = true,
["action"] = "moonfire",
["criteria"] = "refreshable & ! ( talent.treants_of_the_moon.enabled & ( cooldown.force_of_nature.remains < 2 || buff.harmony_of_the_grove.up ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "sunfire",
["criteria"] = "refreshable",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "stellar_flare",
["criteria"] = "refreshable & ( target.time_to_die - remains - target.unit > 7 + spell_targets ) & ( 1 + ( 0.65 * talent.lunar_calling.enabled ) ) * spell_targets < ( 11 - talent.umbral_intensity.rank - ( 2 * talent.astral_smolder.enabled ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( talent.power_of_the_dream.enabled & ( variable.eclipse_remains >= 3 || cooldown.ca_inc.ready ) ) || ( talent.control_of_the_dream.enabled & cooldown.ca_inc.remains > 20 || talent.control_of_the_dream.enabled & cooldown.ca_inc.ready )",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_solar",
["action"] = "starfire",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "spell_targets > 1",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "spell_targets = 1",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["action"] = "moonkin_form",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.celestial_alignment.enabled & ! talent.incarnation_chosen_of_elune.enabled || druid.no_cds",
["var_name"] = "no_cd_talent",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "( trinket.t1.has_proc & trinket.t1.cooldown.duration || trinket.t1.is.spymasters_web || trinket.t1.is.signet_of_the_priory ) & ! trinket.t1.is.arakara_sacbrood",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "( ( trinket.t2.has_proc & trinket.t2.cooldown.duration || trinket.t2.is.spymasters_web || trinket.t2.is.signet_of_the_priory ) * 2 & ! trinket.t2.is.arakara_sacbrood )",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["criteria"] = "hero_tree.keeper_of_the_grove & active_dot.regrowth = 0",
["action"] = "regrowth",
},
{
["action"] = "wrath",
["enabled"] = true,
},
{
["action"] = "wrath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.stellar_flare.enabled",
["action"] = "starfire",
},
{
["action"] = "stellar_flare",
["enabled"] = true,
},
},
},
["version"] = 20240905,
["warnings"] = "The import for 'aoe' required some automated changes.\nLine 2: Converted operations in 'refreshable&(target.time_to_die-remains)>6-(spell_targets%2)&astral_power.deficit>variable.passive_asp+energize_amount' to 'refreshable&(target.time_to_die-remains)>6-(spell_targets/2)&astral_power.deficit>variable.passive_asp+energize_amount'.\nLine 4: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 4: Converted 'talent.astral_smolder' to 'talent.astral_smolder.enabled' (1x).\nLine 5: Converted 'talent.power_of_the_dream' to 'talent.power_of_the_dream.enabled' (1x).\nLine 5: Converted 'talent.early_spring' to 'talent.early_spring.enabled' (1x).\nLine 5: Converted 'talent.orbital_strike' to 'talent.orbital_strike.enabled' (1x).\nLine 9: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 9: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 10: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 11: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 23: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 1: Converted 'talent.astral_communion' to 'talent.astral_communion.enabled' (1x).\nLine 2: Converted 'talent.astral_communion' to 'talent.astral_communion.enabled' (1x).\nLine 14: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 15: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.natures_balance' to 'talent.natures_balance.enabled' (1x).\nLine 2: Converted 'talent.orbit_breaker' to 'talent.orbit_breaker.enabled' (1x).\nLine 2: Converted operations in '6%spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*40' to '6/spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*40'.\nLine 4: Converted 'trinket.2.ready_cooldown' to 'trinket.t2.ready_cooldown' (1x).\nLine 5: Converted 'trinket.1.ready_cooldown' to 'trinket.t1.ready_cooldown' (1x).\nLine 11: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 12: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 14: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 14: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 15: Converted 'talent.lunation' to 'talent.lunation.enabled' (1x).\nLine 18: Converted 'talent.treants_of_the_moon' to 'talent.treants_of_the_moon.enabled' (1x).\nLine 20: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 20: Converted 'talent.astral_smolder' to 'talent.astral_smolder.enabled' (1x).\nLine 21: Converted 'talent.power_of_the_dream' to 'talent.power_of_the_dream.enabled' (1x).\nLine 21: Converted 'talent.control_of_the_dream' to 'talent.control_of_the_dream.enabled' (1x).\nLine 21: Converted 'talent.control_of_the_dream' to 'talent.control_of_the_dream.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.celestial_alignment' to 'talent.celestial_alignment.enabled' (1x).\nLine 3: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 5: Converted 'trinket.1.has_proc' to 'trinket.t1.has_proc' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 5: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 5: Converted 'trinket.1.is.arakara_sacbrood' to 'trinket.t1.is.arakara_sacbrood' (1x).\nLine 6: Converted 'trinket.2.has_proc' to 'trinket.t2.has_proc' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 6: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.2.is.arakara_sacbrood' to 'trinket.t2.is.arakara_sacbrood' (1x).\nLine 10: Converted 'talent.stellar_flare' to 'talent.stellar_flare.enabled' (1x).\n\nImported 4 action lists.\n",
["profile"] = "actions.precombat+=/mark_of_the_wild\nactions.precombat+=/moonkin_form\nactions.precombat+=/variable,name=no_cd_talent,value=!talent.celestial_alignment&!talent.incarnation_chosen_of_elune||druid.no_cds\nactions.precombat+=/variable,name=on_use_trinket,value=0\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=(trinket.1.has_proc&trinket.1.cooldown.duration||trinket.1.is.spymasters_web||trinket.1.is.signet_of_the_priory)&!trinket.1.is.arakara_sacbrood\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=((trinket.2.has_proc&trinket.2.cooldown.duration||trinket.2.is.spymasters_web||trinket.2.is.signet_of_the_priory)*2&!trinket.2.is.arakara_sacbrood)\nactions.precombat+=/regrowth,if=hero_tree.keeper_of_the_grove&active_dot.regrowth=0\nactions.precombat+=/wrath\nactions.precombat+=/wrath\nactions.precombat+=/starfire,if=!talent.stellar_flare\nactions.precombat+=/stellar_flare\n\nactions+=/solar_beam\nactions+=/variable,name=passive_asp,value=6%spell_haste+talent.natures_balance+talent.orbit_breaker*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*40\nactions+=/use_item,name=spymasters_web,if=buff.ca_inc.up&buff.spymasters_report.stack>29||fight_remains<20\nactions+=/use_items,slots=trinket1,if=variable.on_use_trinket!=1&!trinket.2.ready_cooldown||(variable.on_use_trinket=1||variable.on_use_trinket=3)&buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<20||variable.on_use_trinket=0\nactions+=/use_items,slots=trinket2,if=variable.on_use_trinket!=2&!trinket.1.ready_cooldown||variable.on_use_trinket=2&buff.ca_inc.up||variable.no_cd_talent||boss&fight_remains<20||variable.on_use_trinket=0\nactions+=/use_items,if=buff.ca_inc.up\nactions+=/potion,use_off_gcd=1,if=buff.ca_inc.up||fight_remains<=30\nactions+=/berserking,if=buff.ca_inc.remains>=20||variable.no_cd_talent||fight_remains<15\nactions+=/variable,name=eclipse,value=buff.eclipse_lunar.up||buff.eclipse_solar.up\nactions+=/variable,name=eclipse_remains,value=buff.eclipse_lunar.remains<?buff.eclipse_solar.remains\nactions+=/variable,name=enter_solar,value=!talent.lunar_calling&(spell_targets<3||buff.warrior_of_elune.up)&(!variable.eclipse||variable.eclipse_remains<action.starfire.cast_time)\nactions+=/variable,name=enter_lunar,value=(talent.lunar_calling||spell_targets>2&!buff.warrior_of_elune.up)&(!variable.eclipse||variable.eclipse_remains<action.wrath.cast_time)\nactions+=/variable,name=boat_stacks,value=buff.balance_of_all_things_arcane.stack+buff.balance_of_all_things_nature.stack\nactions+=/warrior_of_elune,if=talent.lunar_calling&cooldown.ca_inc.remains>20||!talent.lunar_calling&variable.eclipse_remains>=7&cooldown.ca_inc.remains>20\nactions+=/fury_of_elune,if=talent.lunation&(dot.sunfire.ticking&dot.moonfire.ticking)\nactions+=/celestial_alignment,use_off_gcd=0,if=fight_remains<20||(dot.sunfire.ticking&(dot.moonfire.ticking||buff.harmony_of_the_grove.up)&(hero_tree.keeper_of_the_grove&(buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>25)||hero_tree.elunes_chosen))\nactions+=/incarnation,use_off_gcd=0,if=fight_remains<20||(dot.sunfire.ticking&(dot.moonfire.ticking||buff.harmony_of_the_grove.up)&(hero_tree.keeper_of_the_grove&(buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>25)||hero_tree.elunes_chosen))\nactions+=/moonfire,cycle_targets=1,if=refreshable&!(talent.treants_of_the_moon&(cooldown.force_of_nature.remains<2||buff.harmony_of_the_grove.up))\nactions+=/sunfire,cycle_targets=1,if=refreshable\nactions+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-target>7+spell_targets)&(1+(0.65*talent.lunar_calling))*spell_targets<(11-talent.umbral_intensity.rank-(2*talent.astral_smolder))\nactions+=/force_of_nature,if=(talent.power_of_the_dream&(variable.eclipse_remains>=3||cooldown.ca_inc.ready))||(talent.control_of_the_dream&cooldown.ca_inc.remains>20||talent.control_of_the_dream&cooldown.ca_inc.ready)\nactions+=/wrath,if=variable.enter_lunar\nactions+=/starfire,if=variable.enter_solar\nactions+=/call_action_list,name=aoe,strict=1,if=spell_targets>1\nactions+=/call_action_list,name=st,strict=1,if=spell_targets=1\n\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6&astral_power.deficit>variable.passive_asp+energize_amount&!boss\nactions.aoe+=/sunfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6-(spell_targets%2)&astral_power.deficit>variable.passive_asp+energize_amount\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6&astral_power.deficit>variable.passive_asp+energize_amount&boss\nactions.aoe+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-target>7+spell_targets)&(1+(0.65*talent.lunar_calling))*spell_targets<(11-talent.umbral_intensity.rank-(2*talent.astral_smolder))\nactions.aoe+=/force_of_nature,if=(talent.power_of_the_dream&talent.early_spring&talent.orbital_strike)||variable.eclipse_remains>=3\nactions.aoe+=/fury_of_elune,if=variable.eclipse||eclipse.in_both\nactions.aoe+=/celestial_alignment,use_off_gcd=0,if=fight_remains<20||(dot.sunfire.ticking&(dot.moonfire.ticking||buff.harmony_of_the_grove.up)&(hero_tree.keeper_of_the_grove&(buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>25)||hero_tree.elunes_chosen))\nactions.aoe+=/incarnation,use_off_gcd=0,if=fight_remains<20||(dot.sunfire.ticking&(dot.moonfire.ticking||buff.harmony_of_the_grove.up)&(hero_tree.keeper_of_the_grove&(buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>25)||hero_tree.elunes_chosen))\nactions.aoe+=/warrior_of_elune,if=!talent.lunar_calling&buff.eclipse_solar.remains<7||talent.lunar_calling\nactions.aoe+=/starfire,if=(!talent.lunar_calling&spell_targets.starfire=1)&(buff.eclipse_solar.up&buff.eclipse_solar.remains<action.starfire.cast_time||eclipse.in_none)\nactions.aoe+=/wrath,if=(talent.lunar_calling||spell_targets.starfire>1)&(buff.eclipse_lunar.up&(buff.eclipse_lunar.remains<action.wrath.cast_time)||eclipse.in_none)\nactions.aoe+=/starfall,if=buff.starweavers_warp.up||buff.touch_the_cosmos_starfall.up\nactions.aoe+=/starsurge,if=buff.starweavers_weft.up||buff.touch_the_cosmos_starsurge.up\nactions.aoe+=/starfall,if=buff.starlord.stack<3&spell_targets>1\nactions.aoe+=/starfall,if=spell_targets.starfall>1\nactions.aoe+=/starsurge,if=spell_targets.starfall<2\nactions.aoe+=/convoke_the_spirits\nactions.aoe+=/new_moon\nactions.aoe+=/half_moon\nactions.aoe+=/full_moon\nactions.aoe+=/warrior_of_elune\nactions.aoe+=/wild_mushroom\nactions.aoe+=/starfire,if=talent.lunar_calling||buff.eclipse_lunar.up&spell_targets.starfire>1\nactions.aoe+=/wrath\n\nactions.st+=/fury_of_elune,if=energize_amount+variable.passive_asp>astral_power.deficit-(20*talent.astral_communion)\nactions.st+=/starsurge,if=(buff.starlord.stack>0&buff.starlord.stack<3)||!buff.starlord.up&((2*variable.passive_asp)>astral_power.deficit-(20*talent.astral_communion))\nactions.st+=/starsurge,if=cooldown.convoke_the_spirits.ready&astral_power.deficit>energize_amount\nactions.st+=/convoke_the_spirits,if=fight_remains<5||(buff.ca_inc.up||cooldown.ca_inc.remains>40)||(buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>15)\nactions.st+=/starsurge,if=fight_remains<4\nactions.st+=/starsurge,if=buff.starlord.remains>4&variable.boat_stacks>=2\nactions.st+=/new_moon,if=astral_power.deficit>variable.passive_asp+energize_amount||fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/half_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)||fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/full_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)||fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/starsurge,if=buff.starweavers_weft.up||buff.touch_the_cosmos_starsurge.up\nactions.st+=/starfall,if=buff.starweavers_warp.up||buff.touch_the_cosmos_starfall.up\nactions.st+=/starsurge,if=astral_power.deficit<variable.passive_asp+action.wrath.energize_amount+(action.starfire.energize_amount+variable.passive_asp)*(buff.eclipse_solar.remains<(gcd.max*3))||boss&fight_remains<5\nactions.st+=/force_of_nature,if=!hero_tree.keeper_of_the_grove\nactions.st+=/starfire,if=talent.lunar_calling\nactions.st+=/wrath,if=!talent.lunar_calling",
["spec"] = 102,
},
["Guardian"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240904,
["author"] = "SimC",
["desc"] = "2024-08-24, 08-25: SimC update\n\n2024-07-23: The War Within",
["lists"] = {
["mitigation"] = {
{
["enabled"] = true,
["criteria"] = "tanking & ! variable.if_build & incoming_damage_5s > ironfur_damage_threshold & buff.ironfur.remains < 3 * haste & buff.ironfur.stack < 5",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "regrowth",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "renewal",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 65",
["action"] = "frenzied_regeneration",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 75 & incoming_damage_5s > 0.1 * health.max",
["action"] = "barkskin",
},
{
["enabled"] = true,
["criteria"] = "buff.survival_instincts.down & buff.barkskin.down & health.pct < 60 & incoming_damage_5s > 0.25 * health.max",
["action"] = "survival_instincts",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "if_build",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "talent.thorns_of_iron.enabled & talent.reinforced_fur.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "ripweaving",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "talent.primal_fury.enabled & talent.fluid_form.enabled & talent.wildpower_surge.enabled",
},
{
["enabled"] = true,
["criteria"] = "talent.heart_of_the_wild.enabled & ! talent.rip.enabled",
["action"] = "heart_of_the_wild",
},
{
["action"] = "bear_form",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "mitigation",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "bear",
},
},
["bear"] = {
{
["enabled"] = true,
["criteria"] = "buff.ravage.up & active_enemies > 1",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( talent.heart_of_the_wild.enabled & ! talent.rip.enabled ) || talent.heart_of_the_wild.enabled & buff.feline_potential_counter.stack = 6 & active_enemies < 3",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "buff.bear_form.up & ( ( ( ! ticking & target.time_to_die > 12 ) || ( refreshable & target.time_to_die > 12 ) ) & active_enemies < 7 & talent.fury_of_nature.enabled ) || ( ( ( ! ticking & target.time_to_die > 12 ) || ( refreshable & target.time_to_die > 12 ) ) & active_enemies < 4 & ! talent.fury_of_nature.enabled )",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable || ( dot.thrash_bear.stack < 5 & talent.flashing_claws.rank = 2 || dot.thrash_bear.stack < 4 & talent.flashing_claws.rank = 1 || dot.thrash_bear.stack < 3 & ! talent.flashing_claws.enabled )",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "tanking & cooldown.rage_of_the_sleeper.remains > 8",
["action"] = "bristling_fur",
},
{
["enabled"] = true,
["criteria"] = "buff.bear_form.up",
["action"] = "barkskin",
},
{
["action"] = "lunar_beam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.wildpower_surge.enabled & buff.cat_form.up & buff.feline_potential.up ) || ! talent.wildpower_surge.enabled",
["action"] = "convoke_the_spirits",
},
{
["action"] = "berserk",
["enabled"] = true,
},
{
["action"] = "incarnation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( ( buff.incarnation_guardian_of_ursoc.down & cooldown.incarnation_guardian_of_ursoc.remains > 60 ) || buff.berserk_bear.down ) & rage > 40 & ( ! talent.convoke_the_spirits.enabled ) || ( buff.incarnation_guardian_of_ursoc.up || buff.berserk_bear.up ) & rage > 40 & ( ! talent.convoke_the_spirits.enabled ) || ( talent.convoke_the_spirits.enabled ) & rage > 40 )",
["action"] = "rage_of_the_sleeper",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.ravage.up & active_enemies < 2",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & variable.if_build = 1 & active_enemies > 1",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5 & talent.lunar_calling.enabled",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "! debuff.tooth_and_claw.up & ! buff.ironfur.up & rage > 50 & ! cooldown.pause_action.remains & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up || rage > 90 & variable.if_build = 0 || ! debuff.tooth_and_claw.up & ! buff.ironfur.up & rage > 50 & ! cooldown.pause_action.remains & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up",
["action"] = "ironfur",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.ravage.up & ( ( rage > 40 & variable.if_build = 1 & cooldown.rage_of_the_sleeper.remains > 3 & talent.rage_of_the_sleeper.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & cooldown.rage_of_the_sleeper.remains > 3 & talent.rage_of_the_sleeper.enabled || rage > 90 & variable.if_build = 1 & ! talent.fount_of_strength.enabled || rage > 110 & variable.if_build = 1 & talent.fount_of_strength.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & buff.rage_of_the_sleeper.up & talent.rage_of_the_sleeper.enabled ) )",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "! buff.ravage.up & ( ( rage > 40 & variable.if_build = 1 & ! talent.rage_of_the_sleeper.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & ! talent.rage_of_the_sleeper.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & ! talent.rage_of_the_sleeper.enabled ) )",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "( buff.cat_form.up & buff.feline_potential.up & active_enemies < 3 & ( buff.incarnation.up || buff.berserk_bear.up ) & ! dot.rip.refreshable )",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "( buff.cat_form.up & buff.feline_potential.up & active_enemies < 3 & ( ! buff.incarnation.up || ! buff.berserk_bear.up ) ) || ( buff.cat_form.up & buff.feline_potential.up & active_enemies < 3 & ( buff.incarnation.up || buff.berserk_bear.up ) & refreshable )",
["action"] = "rip",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 1 & buff.vicious_cycle_maul.stack = 3 & active_enemies > 1 & ! talent.ravage.enabled",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "buff.gore.up & active_enemies < 11 || buff.incarnation_guardian_of_ursoc.up & buff.feline_potential_counter.stack < 6 & talent.wildpower_surge.enabled",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 0 & ( active_enemies > 1 || ( buff.tooth_and_claw.up ) & active_enemies > 1 || buff.vicious_cycle_maul.stack = 3 & active_enemies > 1 )",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & buff.feline_potential_counter.stack = 6 & ! buff.cat_form.up & ! dot.rake.refreshable & active_enemies < 3 & talent.fluid_form.enabled",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & buff.feline_potential_counter.stack = 6 & ! buff.cat_form.up & active_enemies < 3 & talent.fluid_form.enabled",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & talent.fluid_form.enabled",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 1 & ( ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies <= 5 & ! talent.raze.enabled ) || ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies = 1 & talent.raze.enabled ) || ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies <= 5 & ! talent.raze.enabled ) )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 0 & ( ( buff.tooth_and_claw.up & active_enemies <= 5 & ! talent.raze.enabled ) || ( buff.tooth_and_claw.up & active_enemies = 1 & talent.raze.enabled ) )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 5 & ! talent.raze.enabled & variable.if_build = 0 ) || ( active_enemies = 1 & talent.raze.enabled & variable.if_build = 0 ) || buff.vicious_cycle_maul.stack = 3 & active_enemies <= 5 & ! talent.raze.enabled",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "( buff.incarnation.up & active_enemies <= 4 ) || ( buff.incarnation.up & talent.soul_of_the_forest.enabled & active_enemies <= 5 ) || ( ( rage < 88 ) & active_enemies < 11 ) || ( ( rage < 83 ) & active_enemies < 11 & talent.soul_of_the_forest.enabled )",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["action"] = "pulverize",
["cycle_targets"] = 1,
},
{
["action"] = "thrash_bear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.galactic_guardian.up & buff.bear_form.up & talent.boundless_moonlight.enabled",
["action"] = "moonfire",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & rage < 40 & active_enemies < 3 & ! talent.lunar_insight.enabled & talent.fluid_form.enabled & energy > 70 & refreshable & variable.ripweaving = 1",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & rage < 40 & active_enemies < 3 & ! talent.lunar_insight.enabled & talent.fluid_form.enabled & energy > 70 & ! buff.rage_of_the_sleeper.up & variable.ripweaving = 1",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & ! dot.rip.ticking & active_enemies < 3 & variable.ripweaving = 1",
["action"] = "rip",
},
{
["enabled"] = true,
["criteria"] = "dot.rip.ticking & combo_points > 4 & active_enemies < 3 & variable.ripweaving = 1",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "talent.starsurge.enabled & rage < 20",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled & active_enemies > 4 ) || ! talent.lunar_insight.enabled || talent.lunar_insight.enabled & active_enemies < 2",
["action"] = "swipe_bear",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled & active_enemies > 1 ) & buff.bear_form.up",
["action"] = "moonfire",
},
},
},
["version"] = 20240904,
["warnings"] = "Imported 4 action lists.\n",
["spec"] = 104,
["basedOn"] = "Guardian",
["profile"] = "actions.precombat+=/mark_of_the_wild\nactions.precombat+=/variable,name=if_build,value=1,value_else=0,if=talent.thorns_of_iron.enabled&talent.reinforced_fur.enabled\nactions.precombat+=/variable,name=ripweaving,value=1,value_else=0,if=talent.primal_fury.enabled&talent.fluid_form.enabled&talent.wildpower_surge.enabled\nactions.precombat+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!talent.rip.enabled\nactions.precombat+=/bear_form\n\nactions+=/skull_bash\nactions+=/soothe\nactions+=/use_item,slot=trinket1\nactions+=/use_item,slot=trinket2\nactions+=/potion,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions+=/call_action_list,name=mitigation\nactions+=/run_action_list,name=bear\n\nactions.bear+=/maul,if=buff.ravage.up&active_enemies>1\nactions.bear+=/heart_of_the_wild,if=(talent.heart_of_the_wild.enabled&!talent.rip.enabled)||talent.heart_of_the_wild.enabled&buff.feline_potential_counter.stack=6&active_enemies<3\nactions.bear+=/moonfire,cycle_targets=1,if=buff.bear_form.up&(((!ticking&target.time_to_die>12)||(refreshable&target.time_to_die>12))&active_enemies<7&talent.fury_of_nature.enabled)||(((!ticking&target.time_to_die>12)||(refreshable&target.time_to_die>12))&active_enemies<4&!talent.fury_of_nature.enabled)\nactions.bear+=/thrash_bear,if=refreshable||(dot.thrash_bear.stack<5&talent.flashing_claws.rank=2||dot.thrash_bear.stack<4&talent.flashing_claws.rank=1||dot.thrash_bear.stack<3&!talent.flashing_claws.enabled)\nactions.bear+=/bristling_fur,if=tanking&cooldown.rage_of_the_sleeper.remains>8\nactions.bear+=/barkskin,if=buff.bear_form.up\nactions.bear+=/lunar_beam\nactions.bear+=/convoke_the_spirits,if=(talent.wildpower_surge.enabled&buff.cat_form.up&buff.feline_potential.up)||!talent.wildpower_surge.enabled\nactions.bear+=/berserk_bear\nactions.bear+=/incarnation\nactions.bear+=/rage_of_the_sleeper,if=(((buff.incarnation_guardian_of_ursoc.down&cooldown.incarnation_guardian_of_ursoc.remains>60)||buff.berserk_bear.down)&rage>40&(!talent.convoke_the_spirits.enabled)||(buff.incarnation_guardian_of_ursoc.up||buff.berserk_bear.up)&rage>40&(!talent.convoke_the_spirits.enabled)||(talent.convoke_the_spirits.enabled)&rage>40)\nactions.bear+=/berserking,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions.bear+=/maul,if=buff.ravage.up&active_enemies<2\nactions.bear+=/raze,if=(buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&variable.if_build=1&active_enemies>1\nactions.bear+=/thrash_bear,if=active_enemies>=5&talent.lunar_calling.enabled\nactions.bear+=/ironfur,cycle_targets=1,if=!debuff.tooth_and_claw.up&!buff.ironfur.up&rage>50&!cooldown.pause_action.remains&variable.if_build=0&!buff.rage_of_the_sleeper.up||rage>90&variable.if_build=0||!debuff.tooth_and_claw.up&!buff.ironfur.up&rage>50&!cooldown.pause_action.remains&variable.if_build=0&!buff.rage_of_the_sleeper.up\nactions.bear+=/ironfur,if=!buff.ravage.up&((rage>40&variable.if_build=1&cooldown.rage_of_the_sleeper.remains>3&talent.rage_of_the_sleeper.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&cooldown.rage_of_the_sleeper.remains>3&talent.rage_of_the_sleeper.enabled||rage>90&variable.if_build=1&!talent.fount_of_strength.enabled||rage>110&variable.if_build=1&talent.fount_of_strength.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&buff.rage_of_the_sleeper.up&talent.rage_of_the_sleeper.enabled))\nactions.bear+=/ironfur,if=!buff.ravage.up&((rage>40&variable.if_build=1&!talent.rage_of_the_sleeper.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&!talent.rage_of_the_sleeper.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&!talent.rage_of_the_sleeper.enabled))\nactions.bear+=/ferocious_bite,if=(buff.cat_form.up&buff.feline_potential.up&active_enemies<3&(buff.incarnation.up||buff.berserk_bear.up)&!dot.rip.refreshable)\nactions.bear+=/rip,if=(buff.cat_form.up&buff.feline_potential.up&active_enemies<3&(!buff.incarnation.up||!buff.berserk_bear.up))||(buff.cat_form.up&buff.feline_potential.up&active_enemies<3&(buff.incarnation.up||buff.berserk_bear.up)&refreshable)\nactions.bear+=/raze,if=variable.if_build=1&buff.vicious_cycle_maul.stack=3&active_enemies>1&!talent.ravage.enabled\nactions.bear+=/mangle,if=buff.gore.up&active_enemies<11||buff.incarnation_guardian_of_ursoc.up&buff.feline_potential_counter.stack<6&talent.wildpower_surge.enabled\nactions.bear+=/raze,if=variable.if_build=0&(active_enemies>1||(buff.tooth_and_claw.up)&active_enemies>1||buff.vicious_cycle_maul.stack=3&active_enemies>1)\nactions.bear+=/shred,if=cooldown.rage_of_the_sleeper.remains<=52&buff.feline_potential_counter.stack=6&!buff.cat_form.up&!dot.rake.refreshable&active_enemies<3&talent.fluid_form.enabled\nactions.bear+=/rake,if=cooldown.rage_of_the_sleeper.remains<=52&buff.feline_potential_counter.stack=6&!buff.cat_form.up&active_enemies<3&talent.fluid_form.enabled\nactions.bear+=/mangle,if=buff.cat_form.up&talent.fluid_form.enabled\nactions.bear+=/maul,if=variable.if_build=1&(((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&active_enemies<=5&!talent.raze.enabled)||((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&active_enemies=1&talent.raze.enabled)||((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&active_enemies<=5&!talent.raze.enabled))\nactions.bear+=/maul,if=variable.if_build=0&((buff.tooth_and_claw.up&active_enemies<=5&!talent.raze.enabled)||(buff.tooth_and_claw.up&active_enemies=1&talent.raze.enabled))\nactions.bear+=/maul,if=(active_enemies<=5&!talent.raze.enabled&variable.if_build=0)||(active_enemies=1&talent.raze.enabled&variable.if_build=0)||buff.vicious_cycle_maul.stack=3&active_enemies<=5&!talent.raze.enabled\nactions.bear+=/thrash_bear,if=active_enemies>=5\nactions.bear+=/mangle,if=(buff.incarnation.up&active_enemies<=4)||(buff.incarnation.up&talent.soul_of_the_forest.enabled&active_enemies<=5)||((rage<88)&active_enemies<11)||((rage<83)&active_enemies<11&talent.soul_of_the_forest.enabled)\nactions.bear+=/thrash_bear,if=active_enemies>1\nactions.bear+=/pulverize,cycle_targets=1\nactions.bear+=/thrash_bear\nactions.bear+=/moonfire,if=buff.galactic_guardian.up&buff.bear_form.up&talent.boundless_moonlight.enabled\nactions.bear+=/rake,if=cooldown.rage_of_the_sleeper.remains<=52&rage<40&active_enemies<3&!talent.lunar_insight.enabled&talent.fluid_form.enabled&energy>70&refreshable&variable.ripweaving=1\nactions.bear+=/shred,if=cooldown.rage_of_the_sleeper.remains<=52&rage<40&active_enemies<3&!talent.lunar_insight.enabled&talent.fluid_form.enabled&energy>70&!buff.rage_of_the_sleeper.up&variable.ripweaving=1\nactions.bear+=/rip,if=buff.cat_form.up&!dot.rip.ticking&active_enemies<3&variable.ripweaving=1\nactions.bear+=/ferocious_bite,if=dot.rip.ticking&combo_points>4&active_enemies<3&variable.ripweaving=1\nactions.bear+=/starsurge,if=talent.starsurge.enabled&rage<20\nactions.bear+=/swipe_bear,if=(talent.lunar_insight.enabled&active_enemies>4)||!talent.lunar_insight.enabled||talent.lunar_insight.enabled&active_enemies<2\nactions.bear+=/moonfire,if=(talent.lunar_insight.enabled&active_enemies>1)&buff.bear_form.up\n\n\nactions.mitigation=ironfur,if=tanking&!variable.if_build&incoming_damage_5s>ironfur_damage_threshold&buff.ironfur.remains<3*haste&buff.ironfur.stack<5\nactions.mitigation+=/regrowth,if=health.pct<65\nactions.mitigation+=/renewal,if=health.pct<65\nactions.mitigation+=/frenzied_regeneration,if=tanking&health.pct<65\nactions.mitigation+=/barkskin,if=tanking&health.pct<75&incoming_damage_5s>0.1*health.max\nactions.mitigation+=/survival_instincts,if=buff.survival_instincts.down&buff.barkskin.down&health.pct<60&incoming_damage_5s>0.25*health.max",
},
["Restoration Druid"] = {
["builtIn"] = true,
["date"] = 20240901,
["spec"] = 105,
["desc"] = "Healer priorities are DPS-focused only.\n\n2024-09-01: When in Cat Form, do cat things\n\n2024-07-30: The War Within",
["profile"] = "# Snapshot raid buffed stats before combat begins and pre-potting is done.\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/heart_of_the_wild\nactions.precombat+=/cat_form,if=talent.rake.enabled\nactions.precombat+=/prowl,if=talent.rake.enabled\n\nactions+=/skull_bash\nactions+=/berserking\nactions+=/natures_vigil,if=!buff.prowl.up&!buff.shadowmeld.up\n## actions+=/run_action_list,name=healing,if=!buff.prowl.up&!buff.shadowmeld.up&druid.time_spend_healing,line_cd=20\nactions+=/heart_of_the_wild,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/use_items,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/potion,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/run_action_list,name=cat,strict=1,if=talent.rake.enabled||buff.cat_form.up\nactions+=/cat_form,if=talent.rake.enabled\nactions+=/convoke_the_spirits,if=(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>5&talent.improved_sunfire.enabled\nactions+=/moonfire,cycle_targets=1,if=refreshable&time_to_die>12\nactions+=/starsurge,if=active_enemies<8\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>7&active_enemies<7\nactions+=/starfire,if=spell_targets.starfire>1||buff.heart_of_the_wild.up\nactions+=/wrath\n\nactions.cat+=/rake,if=buff.shadowmeld.up||buff.prowl.up||buff.sudden_ambush.up\nactions.cat+=/heart_of_the_wild,if=(cooldown.convoke_the_spirits.remains<40||!talent.convoke_the_spirits.enabled)||fight_remains<46\nactions.cat+=/rip,cycle_targets=1,if=((refreshable||energy>90&remains<=10)&(combo_points=5&time_to_die>remains+24||(remains+combo_points*4<time_to_die&remains+4+combo_points*4>time_to_die))||!ticking&combo_points>2+spell_targets.swipe_cat*2)\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>7&spell_targets.thrash_cat>2\nactions.cat+=/sunfire,cycle_targets=1,if=(refreshable&target.time_to_die>5)&!prev_gcd.1.cat_form&(active_enemies=1||talent.improved_sunfire.enabled)\nactions.cat+=/rake,cycle_targets=1,if=refreshable&time_to_die>10&spell_targets.swipe_cat<10\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>50&(dot.rake.refreshable&spell_targets.thrash_cat>3&spell_targets.thrash_cat<7&talent.thrash.enabled)\nactions.cat+=/moonfire,cycle_targets=1,if=(refreshable&time_to_die>12&!ticking||(prev_gcd.1.sunfire&remains<duration*0.8&spell_targets.sunfire=1))&!prev_gcd.1.cat_form&spell_targets.swipe_cat<6\nactions.cat+=/sunfire,if=prev_gcd.1.moonfire&remains<duration*0.8\nactions.cat+=/starsurge,if=active_enemies=1||(active_enemies<8&!buff.cat_form.up)\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>50\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/ferocious_bite,cycle_targets=1,if=(combo_points>3&target.time_to_die<3)||(combo_points=5&energy>=50&dot.rip.remains>10)&spell_targets.swipe_cat<4\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>6&(spell_targets.thrash_cat>1||talent.liveliness.enabled)\nactions.cat+=/swipe_cat,if=active_enemies>3&combo_points<5&talent.improved_swipe.enabled\nactions.cat+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>5&active_enemies<7&!talent.improved_sunfire.enabled\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/shred,if=energy>60&combo_points<5\n\n## actions.healing+=/strict_sequence,name=healregrowthregrowthregrowthregrowth",
["version"] = 20240901,
["warnings"] = "Imported 3 action lists.\n",
["author"] = "Makahiki",
["lists"] = {
["cat"] = {
{
["enabled"] = true,
["criteria"] = "buff.shadowmeld.up || buff.prowl.up || buff.sudden_ambush.up",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.convoke_the_spirits.remains < 40 || ! talent.convoke_the_spirits.enabled ) || fight_remains < 46",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "( ( refreshable || energy > 90 & remains <= 10 ) & ( combo_points = 5 & time_to_die > remains + 24 || ( remains + combo_points * 4 < time_to_die & remains + 4 + combo_points * 4 > time_to_die ) ) || ! ticking & combo_points > 2 + spell_targets.swipe_cat * 2 )",
["action"] = "rip",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 7 & spell_targets.thrash_cat > 2",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( refreshable & target.time_to_die > 5 ) & ! prev_gcd.1.cat_form & ( active_enemies = 1 || talent.improved_sunfire.enabled )",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & time_to_die > 10 & spell_targets.swipe_cat < 10",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 50 & ( dot.rake.refreshable & spell_targets.thrash_cat > 3 & spell_targets.thrash_cat < 7 & talent.thrash.enabled )",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "( refreshable & time_to_die > 12 & ! ticking || ( prev_gcd.1.sunfire & remains < duration * 0.8 & spell_targets.sunfire = 1 ) ) & ! prev_gcd.1.cat_form & spell_targets.swipe_cat < 6",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.moonfire & remains < duration * 0.8",
["action"] = "sunfire",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 || ( active_enemies < 8 & ! buff.cat_form.up )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 50",
["action"] = "cat_form",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "( combo_points > 3 & target.time_to_die < 3 ) || ( combo_points = 5 & energy >= 50 & dot.rip.remains > 10 ) & spell_targets.swipe_cat < 4",
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 6 & ( spell_targets.thrash_cat > 1 || talent.liveliness.enabled )",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3 & combo_points < 5 & talent.improved_swipe.enabled",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 5 & active_enemies < 7 & ! talent.improved_sunfire.enabled",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "energy > 60 & combo_points < 5",
["action"] = "shred",
},
},
["default"] = {
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "natures_vigil",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.rake.enabled || buff.cat_form.up",
["list_name"] = "cat",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 5 & talent.improved_sunfire.enabled",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & time_to_die > 12",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 8",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 7 & active_enemies < 7",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.starfire > 1 || buff.heart_of_the_wild.up",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["description"] = "Snapshot raid buffed stats before combat begins and pre-potting is done.",
["action"] = "mark_of_the_wild",
},
{
["action"] = "heart_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "prowl",
},
},
},
},
},
},
},
}
